Limit: skip=0, fetch=100
  Sort: sales_cnt_diff ASC NULLS LAST, sales_amt_diff ASC NULLS LAST, fetch=100
    Projection: prev_yr.d_year AS prev_year, curr_yr.d_year AS year, curr_yr.i_brand_id, curr_yr.i_class_id, curr_yr.i_category_id, curr_yr.i_manufact_id, prev_yr.sales_cnt AS prev_yr_cnt, curr_yr.sales_cnt AS curr_yr_cnt, curr_yr.sales_cnt - prev_yr.sales_cnt AS sales_cnt_diff, curr_yr.sales_amt - prev_yr.sales_amt AS sales_amt_diff
      Filter: CAST(curr_yr.sales_cnt AS Decimal128(17, 2)) / CAST(prev_yr.sales_cnt AS Decimal128(17, 2)) < Decimal128(Some(90),17,2)
        Inner Join: curr_yr.i_brand_id = prev_yr.i_brand_id, curr_yr.i_class_id = prev_yr.i_class_id, curr_yr.i_category_id = prev_yr.i_category_id, curr_yr.i_manufact_id = prev_yr.i_manufact_id
          SubqueryAlias: curr_yr
            SubqueryAlias: all_sales
              Projection: sales_detail.d_year, sales_detail.i_brand_id, sales_detail.i_class_id, sales_detail.i_category_id, sales_detail.i_manufact_id, SUM(sales_detail.sales_cnt) AS sales_cnt, SUM(sales_detail.sales_amt) AS sales_amt
                Aggregate: groupBy=[[sales_detail.d_year, sales_detail.i_brand_id, sales_detail.i_class_id, sales_detail.i_category_id, sales_detail.i_manufact_id]], aggr=[[SUM(sales_detail.sales_cnt), SUM(sales_detail.sales_amt)]]
                  SubqueryAlias: sales_detail
                    Distinct:
                      Union
                        Projection: date_dim.d_year, item.i_brand_id, item.i_class_id, item.i_category_id, item.i_manufact_id, CAST(catalog_sales.cs_quantity AS Int64) - coalesce(CAST(catalog_returns.cr_return_quantity AS Int64), Int64(0)) AS sales_cnt, CAST(catalog_sales.cs_ext_sales_price AS Float64) - coalesce(CAST(catalog_returns.cr_return_amount AS Float64), Float64(0)) AS sales_amt
                          Left Join: catalog_sales.cs_order_number = catalog_returns.cr_order_number, catalog_sales.cs_item_sk = catalog_returns.cr_item_sk
                            Inner Join: catalog_sales.cs_sold_date_sk = date_dim.d_date_sk
                              Inner Join: catalog_sales.cs_item_sk = item.i_item_sk
                                TableScan: catalog_sales projection=[cs_sold_date_sk, cs_item_sk, cs_order_number, cs_quantity, cs_ext_sales_price]
                                Filter: item.i_category = Utf8("Shoes")
                                  TableScan: item projection=[i_item_sk, i_brand_id, i_class_id, i_category_id, i_category, i_manufact_id], partial_filters=[item.i_category = Utf8("Shoes")]
                              Filter: date_dim.d_year = Int32(2000)
                                TableScan: date_dim projection=[d_date_sk, d_year], partial_filters=[date_dim.d_year = Int32(2000)]
                            TableScan: catalog_returns projection=[cr_item_sk, cr_order_number, cr_return_quantity, cr_return_amount]
                        Projection: date_dim.d_year, item.i_brand_id, item.i_class_id, item.i_category_id, item.i_manufact_id, CAST(store_sales.ss_quantity AS Int64) - coalesce(CAST(store_returns.sr_return_quantity AS Int64), Int64(0)) AS sales_cnt, CAST(store_sales.ss_ext_sales_price AS Float64) - coalesce(CAST(store_returns.sr_return_amt AS Float64), Float64(0)) AS sales_amt
                          Left Join: store_sales.ss_ticket_number = store_returns.sr_ticket_number, store_sales.ss_item_sk = store_returns.sr_item_sk
                            Inner Join: store_sales.ss_sold_date_sk = date_dim.d_date_sk
                              Inner Join: store_sales.ss_item_sk = item.i_item_sk
                                TableScan: store_sales projection=[ss_sold_date_sk, ss_item_sk, ss_ticket_number, ss_quantity, ss_ext_sales_price]
                                Filter: item.i_category = Utf8("Shoes")
                                  TableScan: item projection=[i_item_sk, i_brand_id, i_class_id, i_category_id, i_category, i_manufact_id], partial_filters=[item.i_category = Utf8("Shoes")]
                              Filter: date_dim.d_year = Int32(2000)
                                TableScan: date_dim projection=[d_date_sk, d_year], partial_filters=[date_dim.d_year = Int32(2000)]
                            TableScan: store_returns projection=[sr_item_sk, sr_ticket_number, sr_return_quantity, sr_return_amt]
                        Projection: date_dim.d_year, item.i_brand_id, item.i_class_id, item.i_category_id, item.i_manufact_id, CAST(web_sales.ws_quantity AS Int64) - coalesce(CAST(web_returns.wr_return_quantity AS Int64), Int64(0)) AS sales_cnt, CAST(web_sales.ws_ext_sales_price AS Float64) - coalesce(CAST(web_returns.wr_return_amt AS Float64), Float64(0)) AS sales_amt
                          Left Join: web_sales.ws_order_number = web_returns.wr_order_number, web_sales.ws_item_sk = web_returns.wr_item_sk
                            Inner Join: web_sales.ws_sold_date_sk = date_dim.d_date_sk
                              Inner Join: web_sales.ws_item_sk = item.i_item_sk
                                TableScan: web_sales projection=[ws_sold_date_sk, ws_item_sk, ws_order_number, ws_quantity, ws_ext_sales_price]
                                Filter: item.i_category = Utf8("Shoes")
                                  TableScan: item projection=[i_item_sk, i_brand_id, i_class_id, i_category_id, i_category, i_manufact_id], partial_filters=[item.i_category = Utf8("Shoes")]
                              Filter: date_dim.d_year = Int32(2000)
                                TableScan: date_dim projection=[d_date_sk, d_year], partial_filters=[date_dim.d_year = Int32(2000)]
                            TableScan: web_returns projection=[wr_item_sk, wr_order_number, wr_return_quantity, wr_return_amt]
          SubqueryAlias: prev_yr
            SubqueryAlias: all_sales
              Projection: sales_detail.d_year, sales_detail.i_brand_id, sales_detail.i_class_id, sales_detail.i_category_id, sales_detail.i_manufact_id, SUM(sales_detail.sales_cnt) AS sales_cnt, SUM(sales_detail.sales_amt) AS sales_amt
                Aggregate: groupBy=[[sales_detail.d_year, sales_detail.i_brand_id, sales_detail.i_class_id, sales_detail.i_category_id, sales_detail.i_manufact_id]], aggr=[[SUM(sales_detail.sales_cnt), SUM(sales_detail.sales_amt)]]
                  SubqueryAlias: sales_detail
                    Distinct:
                      Union
                        Projection: date_dim.d_year, item.i_brand_id, item.i_class_id, item.i_category_id, item.i_manufact_id, CAST(catalog_sales.cs_quantity AS Int64) - coalesce(CAST(catalog_returns.cr_return_quantity AS Int64), Int64(0)) AS sales_cnt, CAST(catalog_sales.cs_ext_sales_price AS Float64) - coalesce(CAST(catalog_returns.cr_return_amount AS Float64), Float64(0)) AS sales_amt
                          Left Join: catalog_sales.cs_order_number = catalog_returns.cr_order_number, catalog_sales.cs_item_sk = catalog_returns.cr_item_sk
                            Inner Join: catalog_sales.cs_sold_date_sk = date_dim.d_date_sk
                              Inner Join: catalog_sales.cs_item_sk = item.i_item_sk
                                TableScan: catalog_sales projection=[cs_sold_date_sk, cs_item_sk, cs_order_number, cs_quantity, cs_ext_sales_price]
                                Filter: item.i_category = Utf8("Shoes")
                                  TableScan: item projection=[i_item_sk, i_brand_id, i_class_id, i_category_id, i_category, i_manufact_id], partial_filters=[item.i_category = Utf8("Shoes")]
                              Filter: date_dim.d_year = Int32(1999)
                                TableScan: date_dim projection=[d_date_sk, d_year], partial_filters=[date_dim.d_year = Int32(1999)]
                            TableScan: catalog_returns projection=[cr_item_sk, cr_order_number, cr_return_quantity, cr_return_amount]
                        Projection: date_dim.d_year, item.i_brand_id, item.i_class_id, item.i_category_id, item.i_manufact_id, CAST(store_sales.ss_quantity AS Int64) - coalesce(CAST(store_returns.sr_return_quantity AS Int64), Int64(0)) AS sales_cnt, CAST(store_sales.ss_ext_sales_price AS Float64) - coalesce(CAST(store_returns.sr_return_amt AS Float64), Float64(0)) AS sales_amt
                          Left Join: store_sales.ss_ticket_number = store_returns.sr_ticket_number, store_sales.ss_item_sk = store_returns.sr_item_sk
                            Inner Join: store_sales.ss_sold_date_sk = date_dim.d_date_sk
                              Inner Join: store_sales.ss_item_sk = item.i_item_sk
                                TableScan: store_sales projection=[ss_sold_date_sk, ss_item_sk, ss_ticket_number, ss_quantity, ss_ext_sales_price]
                                Filter: item.i_category = Utf8("Shoes")
                                  TableScan: item projection=[i_item_sk, i_brand_id, i_class_id, i_category_id, i_category, i_manufact_id], partial_filters=[item.i_category = Utf8("Shoes")]
                              Filter: date_dim.d_year = Int32(1999)
                                TableScan: date_dim projection=[d_date_sk, d_year], partial_filters=[date_dim.d_year = Int32(1999)]
                            TableScan: store_returns projection=[sr_item_sk, sr_ticket_number, sr_return_quantity, sr_return_amt]
                        Projection: date_dim.d_year, item.i_brand_id, item.i_class_id, item.i_category_id, item.i_manufact_id, CAST(web_sales.ws_quantity AS Int64) - coalesce(CAST(web_returns.wr_return_quantity AS Int64), Int64(0)) AS sales_cnt, CAST(web_sales.ws_ext_sales_price AS Float64) - coalesce(CAST(web_returns.wr_return_amt AS Float64), Float64(0)) AS sales_amt
                          Left Join: web_sales.ws_order_number = web_returns.wr_order_number, web_sales.ws_item_sk = web_returns.wr_item_sk
                            Inner Join: web_sales.ws_sold_date_sk = date_dim.d_date_sk
                              Inner Join: web_sales.ws_item_sk = item.i_item_sk
                                TableScan: web_sales projection=[ws_sold_date_sk, ws_item_sk, ws_order_number, ws_quantity, ws_ext_sales_price]
                                Filter: item.i_category = Utf8("Shoes")
                                  TableScan: item projection=[i_item_sk, i_brand_id, i_class_id, i_category_id, i_category, i_manufact_id], partial_filters=[item.i_category = Utf8("Shoes")]
                              Filter: date_dim.d_year = Int32(1999)
                                TableScan: date_dim projection=[d_date_sk, d_year], partial_filters=[date_dim.d_year = Int32(1999)]
                            TableScan: web_returns projection=[wr_item_sk, wr_order_number, wr_return_quantity, wr_return_amt]