Limit: skip=0, fetch=100
  Sort: customer_address.ca_zip ASC NULLS LAST, fetch=100
    Projection: customer_address.ca_zip, SUM(catalog_sales.cs_sales_price)
      Aggregate: groupBy=[[customer_address.ca_zip]], aggr=[[SUM(catalog_sales.cs_sales_price)]]
        Inner Join: catalog_sales.cs_sold_date_sk = date_dim.d_date_sk
          Filter: substr(customer_address.ca_zip, Int64(1), Int64(5)) IN ([Utf8("85669"), Utf8("86197"), Utf8("88274"), Utf8("83405"), Utf8("86475"), Utf8("85392"), Utf8("85460"), Utf8("80348"), Utf8("81792")]) OR customer_address.ca_state = Utf8("GA") OR customer_address.ca_state = Utf8("WA") OR customer_address.ca_state = Utf8("CA") OR catalog_sales.cs_sales_price > Decimal128(Some(50000),7,2)
            Inner Join: customer.c_current_addr_sk = customer_address.ca_address_sk
              Inner Join: catalog_sales.cs_bill_customer_sk = customer.c_customer_sk
                TableScan: catalog_sales projection=[cs_sold_date_sk, cs_bill_customer_sk, cs_sales_price]
                TableScan: customer projection=[c_customer_sk, c_current_addr_sk]
              TableScan: customer_address projection=[ca_address_sk, ca_state, ca_zip]
          Filter: date_dim.d_qoy = Int32(1) AND date_dim.d_year = Int32(1999)
            TableScan: date_dim projection=[d_date_sk, d_year, d_qoy], partial_filters=[date_dim.d_qoy = Int32(1), date_dim.d_year = Int32(1999)]