Limit: skip=0, fetch=100
  Sort: promotional_sales.promotions ASC NULLS LAST, all_sales.total ASC NULLS LAST, fetch=100
    Projection: promotional_sales.promotions, all_sales.total, CAST(CAST(promotional_sales.promotions AS Decimal128(15, 4)) / CAST(all_sales.total AS Decimal128(15, 4)) AS Decimal128(36, 4)) * Decimal128(Some(1000000),36,4) AS promotional_sales.promotions / all_sales.total * Int64(100)
      CrossJoin:
        SubqueryAlias: promotional_sales
          Projection: SUM(store_sales.ss_ext_sales_price) AS promotions
            Aggregate: groupBy=[[]], aggr=[[SUM(store_sales.ss_ext_sales_price)]]
              Inner Join: store_sales.ss_item_sk = item.i_item_sk
                Inner Join: customer.c_current_addr_sk = customer_address.ca_address_sk
                  Inner Join: store_sales.ss_customer_sk = customer.c_customer_sk
                    Inner Join: store_sales.ss_sold_date_sk = date_dim.d_date_sk
                      Inner Join: store_sales.ss_promo_sk = promotion.p_promo_sk
                        Inner Join: store_sales.ss_store_sk = store.s_store_sk
                          TableScan: store_sales projection=[ss_sold_date_sk, ss_item_sk, ss_customer_sk, ss_store_sk, ss_promo_sk, ss_ext_sales_price]
                          Filter: store.s_gmt_offset = Decimal128(Some(-600),5,2)
                            TableScan: store projection=[s_store_sk, s_gmt_offset], partial_filters=[store.s_gmt_offset = Decimal128(Some(-600),5,2)]
                        Filter: promotion.p_channel_dmail = Utf8("Y") OR promotion.p_channel_email = Utf8("Y") OR promotion.p_channel_tv = Utf8("Y")
                          TableScan: promotion projection=[p_promo_sk, p_channel_dmail, p_channel_email, p_channel_tv], partial_filters=[promotion.p_channel_dmail = Utf8("Y") OR promotion.p_channel_email = Utf8("Y") OR promotion.p_channel_tv = Utf8("Y")]
                      Filter: date_dim.d_year = Int32(2001) AND date_dim.d_moy = Int32(12)
                        TableScan: date_dim projection=[d_date_sk, d_year, d_moy], partial_filters=[date_dim.d_year = Int32(2001), date_dim.d_moy = Int32(12)]
                    TableScan: customer projection=[c_customer_sk, c_current_addr_sk]
                  Filter: customer_address.ca_gmt_offset = Decimal128(Some(-600),5,2)
                    TableScan: customer_address projection=[ca_address_sk, ca_gmt_offset], partial_filters=[customer_address.ca_gmt_offset = Decimal128(Some(-600),5,2)]
                Filter: item.i_category = Utf8("Jewelry")
                  TableScan: item projection=[i_item_sk, i_category], partial_filters=[item.i_category = Utf8("Jewelry")]
        SubqueryAlias: all_sales
          Projection: SUM(store_sales.ss_ext_sales_price) AS total
            Aggregate: groupBy=[[]], aggr=[[SUM(store_sales.ss_ext_sales_price)]]
              Inner Join: store_sales.ss_item_sk = item.i_item_sk
                Inner Join: customer.c_current_addr_sk = customer_address.ca_address_sk
                  Inner Join: store_sales.ss_customer_sk = customer.c_customer_sk
                    Inner Join: store_sales.ss_sold_date_sk = date_dim.d_date_sk
                      Inner Join: store_sales.ss_store_sk = store.s_store_sk
                        TableScan: store_sales projection=[ss_sold_date_sk, ss_item_sk, ss_customer_sk, ss_store_sk, ss_ext_sales_price]
                        Filter: store.s_gmt_offset = Decimal128(Some(-600),5,2)
                          TableScan: store projection=[s_store_sk, s_gmt_offset], partial_filters=[store.s_gmt_offset = Decimal128(Some(-600),5,2)]
                      Filter: date_dim.d_year = Int32(2001) AND date_dim.d_moy = Int32(12)
                        TableScan: date_dim projection=[d_date_sk, d_year, d_moy], partial_filters=[date_dim.d_year = Int32(2001), date_dim.d_moy = Int32(12)]
                    TableScan: customer projection=[c_customer_sk, c_current_addr_sk]
                  Filter: customer_address.ca_gmt_offset = Decimal128(Some(-600),5,2)
                    TableScan: customer_address projection=[ca_address_sk, ca_gmt_offset], partial_filters=[customer_address.ca_gmt_offset = Decimal128(Some(-600),5,2)]
                Filter: item.i_category = Utf8("Jewelry")
                  TableScan: item projection=[i_item_sk, i_category], partial_filters=[item.i_category = Utf8("Jewelry")]