Sort: ssales.c_last_name ASC NULLS LAST, ssales.c_first_name ASC NULLS LAST, ssales.s_store_name ASC NULLS LAST
  Projection: ssales.c_last_name, ssales.c_first_name, ssales.s_store_name, SUM(ssales.netpaid) AS paid
    Filter: CAST(SUM(ssales.netpaid) AS Decimal128(38, 15)) > CAST(__sq_1.__value AS Decimal128(38, 15))
      CrossJoin:
        Aggregate: groupBy=[[ssales.c_last_name, ssales.c_first_name, ssales.s_store_name]], aggr=[[SUM(ssales.netpaid)]]
          SubqueryAlias: ssales
            Projection: customer.c_last_name, customer.c_first_name, store.s_store_name, SUM(store_sales.ss_net_profit) AS netpaid
              Aggregate: groupBy=[[customer.c_last_name, customer.c_first_name, store.s_store_name, customer_address.ca_state, store.s_state, item.i_color, item.i_current_price, item.i_manager_id, item.i_units, item.i_size]], aggr=[[SUM(store_sales.ss_net_profit)]]
                Filter: customer.c_birth_country != upper(customer_address.ca_country)
                  Inner Join: customer.c_current_addr_sk = customer_address.ca_address_sk, store.s_zip = customer_address.ca_zip
                    Inner Join: store_sales.ss_customer_sk = customer.c_customer_sk
                      Inner Join: store_sales.ss_item_sk = item.i_item_sk
                        Inner Join: store_sales.ss_store_sk = store.s_store_sk
                          Inner Join: store_sales.ss_ticket_number = store_returns.sr_ticket_number, store_sales.ss_item_sk = store_returns.sr_item_sk
                            TableScan: store_sales projection=[ss_item_sk, ss_customer_sk, ss_store_sk, ss_ticket_number, ss_net_profit]
                            TableScan: store_returns projection=[sr_item_sk, sr_ticket_number]
                          Filter: store.s_market_id = Int32(5)
                            TableScan: store projection=[s_store_sk, s_store_name, s_market_id, s_state, s_zip], partial_filters=[store.s_market_id = Int32(5)]
                        Filter: item.i_color = Utf8("misty")
                          TableScan: item projection=[i_item_sk, i_current_price, i_size, i_color, i_units, i_manager_id], partial_filters=[item.i_color = Utf8("misty")]
                      TableScan: customer projection=[c_customer_sk, c_current_addr_sk, c_first_name, c_last_name, c_birth_country]
                    TableScan: customer_address projection=[ca_address_sk, ca_state, ca_zip, ca_country]
        SubqueryAlias: __sq_1
          Projection: Float64(0.05) * CAST(AVG(ssales.netpaid) AS Float64) AS __value
            Aggregate: groupBy=[[]], aggr=[[AVG(ssales.netpaid)]]
              SubqueryAlias: ssales
                Projection: customer.c_last_name, customer.c_first_name, store.s_store_name, SUM(store_sales.ss_net_profit) AS netpaid
                  Aggregate: groupBy=[[customer.c_last_name, customer.c_first_name, store.s_store_name, customer_address.ca_state, store.s_state, item.i_color, item.i_current_price, item.i_manager_id, item.i_units, item.i_size]], aggr=[[SUM(store_sales.ss_net_profit)]]
                    Filter: customer.c_birth_country != upper(customer_address.ca_country)
                      Inner Join: customer.c_current_addr_sk = customer_address.ca_address_sk, store.s_zip = customer_address.ca_zip
                        Inner Join: store_sales.ss_customer_sk = customer.c_customer_sk
                          Inner Join: store_sales.ss_item_sk = item.i_item_sk
                            Inner Join: store_sales.ss_store_sk = store.s_store_sk
                              Inner Join: store_sales.ss_ticket_number = store_returns.sr_ticket_number, store_sales.ss_item_sk = store_returns.sr_item_sk
                                TableScan: store_sales projection=[ss_item_sk, ss_customer_sk, ss_store_sk, ss_ticket_number, ss_net_profit]
                                TableScan: store_returns projection=[sr_item_sk, sr_ticket_number]
                              Filter: store.s_market_id = Int32(5)
                                TableScan: store projection=[s_store_sk, s_store_name, s_market_id, s_state, s_zip], partial_filters=[CAST(store.s_market_id AS Int64) = Int64(5), store.s_market_id = Int32(5)]
                            TableScan: item projection=[i_item_sk, i_current_price, i_size, i_color, i_units, i_manager_id]
                          TableScan: customer projection=[c_customer_sk, c_current_addr_sk, c_first_name, c_last_name, c_birth_country]
                        TableScan: customer_address projection=[ca_address_sk, ca_state, ca_zip, ca_country]