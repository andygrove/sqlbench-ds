Limit: skip=0, fetch=100
  Sort: item.i_item_id ASC NULLS LAST, fetch=100
    Projection: item.i_item_id, AVG(store_sales.ss_quantity) AS agg1, AVG(store_sales.ss_list_price) AS agg2, AVG(store_sales.ss_coupon_amt) AS agg3, AVG(store_sales.ss_sales_price) AS agg4
      Aggregate: groupBy=[[item.i_item_id]], aggr=[[AVG(store_sales.ss_quantity), AVG(store_sales.ss_list_price), AVG(store_sales.ss_coupon_amt), AVG(store_sales.ss_sales_price)]]
        Inner Join: store_sales.ss_promo_sk = promotion.p_promo_sk
          Inner Join: store_sales.ss_item_sk = item.i_item_sk
            Inner Join: store_sales.ss_sold_date_sk = date_dim.d_date_sk
              Inner Join: store_sales.ss_cdemo_sk = customer_demographics.cd_demo_sk
                TableScan: store_sales projection=[ss_sold_date_sk, ss_item_sk, ss_cdemo_sk, ss_promo_sk, ss_quantity, ss_list_price, ss_sales_price, ss_coupon_amt]
                Filter: customer_demographics.cd_gender = Utf8("M") AND customer_demographics.cd_marital_status = Utf8("M") AND customer_demographics.cd_education_status = Utf8("4 yr Degree")
                  TableScan: customer_demographics projection=[cd_demo_sk, cd_gender, cd_marital_status, cd_education_status], partial_filters=[customer_demographics.cd_gender = Utf8("M"), customer_demographics.cd_marital_status = Utf8("M"), customer_demographics.cd_education_status = Utf8("4 yr Degree")]
              Filter: date_dim.d_year = Int32(2001)
                TableScan: date_dim projection=[d_date_sk, d_year], partial_filters=[date_dim.d_year = Int32(2001)]
            TableScan: item projection=[i_item_sk, i_item_id]
          Filter: promotion.p_channel_email = Utf8("N") OR promotion.p_channel_event = Utf8("N")
            TableScan: promotion projection=[p_promo_sk, p_channel_email, p_channel_event], partial_filters=[promotion.p_channel_email = Utf8("N") OR promotion.p_channel_event = Utf8("N")]