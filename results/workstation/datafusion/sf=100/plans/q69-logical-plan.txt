Limit: skip=0, fetch=100
  Sort: customer_demographics.cd_gender ASC NULLS LAST, customer_demographics.cd_marital_status ASC NULLS LAST, customer_demographics.cd_education_status ASC NULLS LAST, customer_demographics.cd_purchase_estimate ASC NULLS LAST, customer_demographics.cd_credit_rating ASC NULLS LAST, fetch=100
    Projection: customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, COUNT(UInt8(1)) AS cnt1, customer_demographics.cd_purchase_estimate, COUNT(UInt8(1)) AS cnt2, customer_demographics.cd_credit_rating, COUNT(UInt8(1)) AS cnt3
      Aggregate: groupBy=[[customer_demographics.cd_gender, customer_demographics.cd_marital_status, customer_demographics.cd_education_status, customer_demographics.cd_purchase_estimate, customer_demographics.cd_credit_rating]], aggr=[[COUNT(UInt8(1))]]
        LeftAnti Join: c.c_customer_sk = catalog_sales.cs_ship_customer_sk
          LeftAnti Join: c.c_customer_sk = web_sales.ws_bill_customer_sk
            LeftSemi Join: c.c_customer_sk = store_sales.ss_customer_sk
              Inner Join: c.c_current_cdemo_sk = customer_demographics.cd_demo_sk
                Inner Join: c.c_current_addr_sk = ca.ca_address_sk
                  SubqueryAlias: c
                    TableScan: customer projection=[c_customer_sk, c_current_cdemo_sk, c_current_addr_sk]
                  SubqueryAlias: ca
                    Filter: customer_address.ca_state = Utf8("AR") OR customer_address.ca_state = Utf8("TX") OR customer_address.ca_state = Utf8("KY")
                      TableScan: customer_address projection=[ca_address_sk, ca_state], partial_filters=[customer_address.ca_state = Utf8("AR") OR customer_address.ca_state = Utf8("TX") OR customer_address.ca_state = Utf8("KY")]
                TableScan: customer_demographics projection=[cd_demo_sk, cd_gender, cd_marital_status, cd_education_status, cd_purchase_estimate, cd_credit_rating]
              Projection: store_sales.ss_customer_sk
                Inner Join: store_sales.ss_sold_date_sk = date_dim.d_date_sk
                  TableScan: store_sales projection=[ss_sold_date_sk, ss_customer_sk]
                  Filter: date_dim.d_year = Int32(2001) AND date_dim.d_moy >= Int32(1) AND date_dim.d_moy <= Int32(3)
                    TableScan: date_dim projection=[d_date_sk, d_year, d_moy], partial_filters=[CAST(date_dim.d_year AS Int64) = Int64(2001), CAST(date_dim.d_moy AS Int64) >= Int64(1), CAST(date_dim.d_moy AS Int64) <= Int64(3), date_dim.d_year = Int32(2001), date_dim.d_moy >= Int32(1), date_dim.d_moy <= Int32(3)]
            Projection: web_sales.ws_bill_customer_sk
              Inner Join: web_sales.ws_sold_date_sk = date_dim.d_date_sk
                TableScan: web_sales projection=[ws_sold_date_sk, ws_bill_customer_sk]
                Filter: date_dim.d_year = Int32(2001) AND date_dim.d_moy >= Int32(1) AND date_dim.d_moy <= Int32(3)
                  TableScan: date_dim projection=[d_date_sk, d_year, d_moy], partial_filters=[CAST(date_dim.d_year AS Int64) = Int64(2001), CAST(date_dim.d_moy AS Int64) >= Int64(1), CAST(date_dim.d_moy AS Int64) <= Int64(3), date_dim.d_year = Int32(2001), date_dim.d_moy >= Int32(1), date_dim.d_moy <= Int32(3)]
          Projection: catalog_sales.cs_ship_customer_sk
            Inner Join: catalog_sales.cs_sold_date_sk = date_dim.d_date_sk
              TableScan: catalog_sales projection=[cs_sold_date_sk, cs_ship_customer_sk]
              Filter: date_dim.d_year = Int32(2001) AND date_dim.d_moy >= Int32(1) AND date_dim.d_moy <= Int32(3)
                TableScan: date_dim projection=[d_date_sk, d_year, d_moy], partial_filters=[CAST(date_dim.d_year AS Int64) = Int64(2001), CAST(date_dim.d_moy AS Int64) >= Int64(1), CAST(date_dim.d_moy AS Int64) <= Int64(3), date_dim.d_year = Int32(2001), date_dim.d_moy >= Int32(1), date_dim.d_moy <= Int32(3)]