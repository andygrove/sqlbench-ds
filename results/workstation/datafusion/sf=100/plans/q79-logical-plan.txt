Projection: customer.c_last_name, customer.c_first_name, substr(ms.s_city,Int64(1),Int64(30)), ms.ss_ticket_number, ms.amt, ms.profit
  Limit: skip=0, fetch=100
    Sort: customer.c_last_name ASC NULLS LAST, customer.c_first_name ASC NULLS LAST, substr(ms.s_city, Int64(1), Int64(30)) ASC NULLS LAST, ms.profit ASC NULLS LAST, fetch=100
      Projection: customer.c_last_name, customer.c_first_name, substr(ms.s_city, Int64(1), Int64(30)), ms.ss_ticket_number, ms.amt, ms.profit, ms.s_city
        Inner Join: ms.ss_customer_sk = customer.c_customer_sk
          SubqueryAlias: ms
            Projection: store_sales.ss_ticket_number, store_sales.ss_customer_sk, store.s_city, SUM(store_sales.ss_coupon_amt) AS amt, SUM(store_sales.ss_net_profit) AS profit
              Aggregate: groupBy=[[store_sales.ss_ticket_number, store_sales.ss_customer_sk, store_sales.ss_addr_sk, store.s_city]], aggr=[[SUM(store_sales.ss_coupon_amt), SUM(store_sales.ss_net_profit)]]
                Inner Join: store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
                  Inner Join: store_sales.ss_store_sk = store.s_store_sk
                    Inner Join: store_sales.ss_sold_date_sk = date_dim.d_date_sk
                      TableScan: store_sales projection=[ss_sold_date_sk, ss_customer_sk, ss_hdemo_sk, ss_addr_sk, ss_store_sk, ss_ticket_number, ss_coupon_amt, ss_net_profit]
                      Filter: date_dim.d_dow = Int32(1) AND (date_dim.d_year = Int32(2002) OR date_dim.d_year = Int32(2001) OR date_dim.d_year = Int32(2000))
                        TableScan: date_dim projection=[d_date_sk, d_year, d_dow], partial_filters=[date_dim.d_dow = Int32(1), date_dim.d_year = Int32(2002) OR date_dim.d_year = Int32(2001) OR date_dim.d_year = Int32(2000)]
                    Filter: store.s_number_employees >= Int32(200) AND store.s_number_employees <= Int32(295)
                      TableScan: store projection=[s_store_sk, s_number_employees, s_city], partial_filters=[store.s_number_employees >= Int32(200), store.s_number_employees <= Int32(295)]
                  Filter: household_demographics.hd_dep_count = Int32(5) OR household_demographics.hd_vehicle_count > Int32(1)
                    TableScan: household_demographics projection=[hd_demo_sk, hd_dep_count, hd_vehicle_count], partial_filters=[household_demographics.hd_dep_count = Int32(5) OR household_demographics.hd_vehicle_count > Int32(1)]
          TableScan: customer projection=[c_customer_sk, c_first_name, c_last_name]