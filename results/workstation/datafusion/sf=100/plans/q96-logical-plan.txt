Limit: skip=0, fetch=100
  Sort: COUNT(UInt8(1)) ASC NULLS LAST, fetch=100
    Projection: COUNT(UInt8(1))
      Aggregate: groupBy=[[]], aggr=[[COUNT(UInt8(1))]]
        Inner Join: store_sales.ss_store_sk = store.s_store_sk
          Inner Join: store_sales.ss_sold_time_sk = time_dim.t_time_sk
            Inner Join: store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
              TableScan: store_sales projection=[ss_sold_time_sk, ss_hdemo_sk, ss_store_sk]
              Filter: household_demographics.hd_dep_count = Int32(5)
                TableScan: household_demographics projection=[hd_demo_sk, hd_dep_count], partial_filters=[household_demographics.hd_dep_count = Int32(5)]
            Filter: time_dim.t_hour = Int32(8) AND time_dim.t_minute >= Int32(30)
              TableScan: time_dim projection=[t_time_sk, t_hour, t_minute], partial_filters=[time_dim.t_hour = Int32(8), time_dim.t_minute >= Int32(30)]
          Filter: store.s_store_name = Utf8("ese")
            TableScan: store projection=[s_store_sk, s_store_name], partial_filters=[store.s_store_name = Utf8("ese")]