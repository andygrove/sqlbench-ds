Limit: skip=0, fetch=100
  Sort: customer.c_last_name ASC NULLS LAST, dn.ss_ticket_number ASC NULLS LAST, fetch=100
    Projection: customer.c_last_name, customer.c_first_name, current_addr.ca_city, dn.bought_city, dn.ss_ticket_number, dn.extended_price, dn.extended_tax, dn.list_price
      Filter: current_addr.ca_city != dn.bought_city
        Inner Join: customer.c_current_addr_sk = current_addr.ca_address_sk
          Inner Join: dn.ss_customer_sk = customer.c_customer_sk
            SubqueryAlias: dn
              Projection: store_sales.ss_ticket_number, store_sales.ss_customer_sk, customer_address.ca_city AS bought_city, SUM(store_sales.ss_ext_sales_price) AS extended_price, SUM(store_sales.ss_ext_list_price) AS list_price, SUM(store_sales.ss_ext_tax) AS extended_tax
                Aggregate: groupBy=[[store_sales.ss_ticket_number, store_sales.ss_customer_sk, store_sales.ss_addr_sk, customer_address.ca_city]], aggr=[[SUM(store_sales.ss_ext_sales_price), SUM(store_sales.ss_ext_list_price), SUM(store_sales.ss_ext_tax)]]
                  Inner Join: store_sales.ss_addr_sk = customer_address.ca_address_sk
                    Inner Join: store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
                      Inner Join: store_sales.ss_store_sk = store.s_store_sk
                        Inner Join: store_sales.ss_sold_date_sk = date_dim.d_date_sk
                          TableScan: store_sales projection=[ss_sold_date_sk, ss_customer_sk, ss_hdemo_sk, ss_addr_sk, ss_store_sk, ss_ticket_number, ss_ext_sales_price, ss_ext_list_price, ss_ext_tax]
                          Filter: date_dim.d_dom >= Int32(1) AND date_dim.d_dom <= Int32(2) AND (date_dim.d_year = Int32(2000) OR date_dim.d_year = Int32(1999) OR date_dim.d_year = Int32(1998))
                            TableScan: date_dim projection=[d_date_sk, d_year, d_dom], partial_filters=[date_dim.d_dom >= Int32(1), date_dim.d_dom <= Int32(2), date_dim.d_year = Int32(2000) OR date_dim.d_year = Int32(1999) OR date_dim.d_year = Int32(1998)]
                        Filter: store.s_city = Utf8("Pleasant Hill") OR store.s_city = Utf8("Five Points")
                          TableScan: store projection=[s_store_sk, s_city], partial_filters=[store.s_city = Utf8("Pleasant Hill") OR store.s_city = Utf8("Five Points")]
                      Filter: household_demographics.hd_dep_count = Int32(5) OR household_demographics.hd_vehicle_count = Int32(0)
                        TableScan: household_demographics projection=[hd_demo_sk, hd_dep_count, hd_vehicle_count], partial_filters=[household_demographics.hd_dep_count = Int32(5) OR household_demographics.hd_vehicle_count = Int32(0)]
                    TableScan: customer_address projection=[ca_address_sk, ca_city]
            TableScan: customer projection=[c_customer_sk, c_current_addr_sk, c_first_name, c_last_name]
          SubqueryAlias: current_addr
            TableScan: customer_address projection=[ca_address_sk, ca_city]