AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#9149 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#9150 as decimal(22,6)))), DecimalType(22,6), true) ASC NULLS FIRST,nsum#9153 ASC NULLS FIRST], output=[i_category#680,i_brand#676,d_year#618,d_moy#620,avg_monthly_sales#9150,sum_sales#9149,psum#9152,nsum#9153])
   +- *(54) Project [i_category#680, i_brand#676, d_year#618, d_moy#620, avg_monthly_sales#9150, sum_sales#9149, sum_sales#9170 AS psum#9152, sum_sales#9179 AS nsum#9153]
      +- *(54) SortMergeJoin [i_category#680, i_brand#676, s_store_name#717, s_company_name#729, rn#9151], [i_category#9313, i_brand#9309, s_store_name#9379, s_company_name#9391, (rn#9407 - 1)], Inner
         :- *(52) Project [i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620, sum_sales#9149, avg_monthly_sales#9150, rn#9151, sum_sales#9170]
         :  +- *(52) SortMergeJoin [i_category#680, i_brand#676, s_store_name#717, s_company_name#729, rn#9151], [i_category#9206, i_brand#9202, s_store_name#9272, s_company_name#9284, (rn#9300 + 1)], Inner
         :     :- *(50) Sort [i_category#680 ASC NULLS FIRST, i_brand#676 ASC NULLS FIRST, s_store_name#717 ASC NULLS FIRST, s_company_name#729 ASC NULLS FIRST, rn#9151 ASC NULLS FIRST], false, 0
         :     :  +- AQEShuffleRead coalesced
         :     :     +- ShuffleQueryStage 39
         :     :        +- Exchange hashpartitioning(i_category#680, i_brand#676, s_store_name#717, s_company_name#729, rn#9151, 200), ENSURE_REQUIREMENTS, [id=#76697]
         :     :           +- *(45) Project [i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620, sum_sales#9149, avg_monthly_sales#9150, rn#9151]
         :     :              +- *(45) Filter ((isnotnull(avg_monthly_sales#9150) AND (avg_monthly_sales#9150 > 0.000000)) AND (CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#9149 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#9150 as decimal(22,6)))), DecimalType(22,6), true), false)) / promote_precision(cast(avg_monthly_sales#9150 as decimal(22,6)))), DecimalType(38,16), true) > 0.1000000000000000))
         :     :                 +- Window [avg(_w0#9163) windowspecdefinition(i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#9150], [i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618]
         :     :                    +- *(44) Filter (isnotnull(d_year#618) AND (d_year#618 = 2000))
         :     :                       +- Window [rank(d_year#618, d_moy#620) windowspecdefinition(i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618 ASC NULLS FIRST, d_moy#620 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#9151], [i_category#680, i_brand#676, s_store_name#717, s_company_name#729], [d_year#618 ASC NULLS FIRST, d_moy#620 ASC NULLS FIRST]
         :     :                          +- *(43) Sort [i_category#680 ASC NULLS FIRST, i_brand#676 ASC NULLS FIRST, s_store_name#717 ASC NULLS FIRST, s_company_name#729 ASC NULLS FIRST, d_year#618 ASC NULLS FIRST, d_moy#620 ASC NULLS FIRST], false, 0
         :     :                             +- AQEShuffleRead coalesced
         :     :                                +- ShuffleQueryStage 35
         :     :                                   +- Exchange hashpartitioning(i_category#680, i_brand#676, s_store_name#717, s_company_name#729, 200), ENSURE_REQUIREMENTS, [id=#76502]
         :     :                                      +- *(40) HashAggregate(keys=[i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620], functions=[sum(UnscaledValue(ss_sales_price#265))], output=[i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620, sum_sales#9149, _w0#9163])
         :     :                                         +- AQEShuffleRead coalesced
         :     :                                            +- ShuffleQueryStage 30
         :     :                                               +- Exchange hashpartitioning(i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620, 200), ENSURE_REQUIREMENTS, [id=#76216]
         :     :                                                  +- *(33) HashAggregate(keys=[i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620], functions=[partial_sum(UnscaledValue(ss_sales_price#265))], output=[i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620, sum#9409L])
         :     :                                                     +- *(33) Project [i_brand#676, i_category#680, ss_sales_price#265, d_year#618, d_moy#620, s_store_name#717, s_company_name#729]
         :     :                                                        +- *(33) SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
         :     :                                                           :- *(31) Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
         :     :                                                           :  +- AQEShuffleRead coalesced
         :     :                                                           :     +- ShuffleQueryStage 25
         :     :                                                           :        +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#75816]
         :     :                                                           :           +- *(24) Project [i_brand#676, i_category#680, ss_store_sk#259, ss_sales_price#265, d_year#618, d_moy#620]
         :     :                                                           :              +- *(24) SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
         :     :                                                           :                 :- *(22) Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
         :     :                                                           :                 :  +- AQEShuffleRead coalesced
         :     :                                                           :                 :     +- ShuffleQueryStage 20
         :     :                                                           :                 :        +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#75413]
         :     :                                                           :                 :           +- *(15) Project [i_brand#676, i_category#680, ss_sold_date_sk#252, ss_store_sk#259, ss_sales_price#265]
         :     :                                                           :                 :              +- *(15) SortMergeJoin [i_item_sk#668], [ss_item_sk#254], Inner
         :     :                                                           :                 :                 :- *(13) Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
         :     :                                                           :                 :                 :  +- AQEShuffleRead coalesced
         :     :                                                           :                 :                 :     +- ShuffleQueryStage 0
         :     :                                                           :                 :                 :        +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#73911]
         :     :                                                           :                 :                 :           +- *(1) Filter ((isnotnull(i_item_sk#668) AND isnotnull(i_category#680)) AND isnotnull(i_brand#676))
         :     :                                                           :                 :                 :              +- *(1) ColumnarToRow
         :     :                                                           :                 :                 :                 +- FileScan parquet [i_item_sk#668,i_brand#676,i_category#680] Batched: true, DataFilters: [isnotnull(i_item_sk#668), isnotnull(i_category#680), isnotnull(i_brand#676)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
         :     :                                                           :                 :                 +- *(14) Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
         :     :                                                           :                 :                    +- AQEShuffleRead coalesced
         :     :                                                           :                 :                       +- ShuffleQueryStage 1
         :     :                                                           :                 :                          +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#73928]
         :     :                                                           :                 :                             +- *(2) Filter ((isnotnull(ss_item_sk#254) AND isnotnull(ss_sold_date_sk#252)) AND isnotnull(ss_store_sk#259))
         :     :                                                           :                 :                                +- *(2) ColumnarToRow
         :     :                                                           :                 :                                   +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_store_sk#259,ss_sales_price#265] Batched: true, DataFilters: [isnotnull(ss_item_sk#254), isnotnull(ss_sold_date_sk#252), isnotnull(ss_store_sk#259)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
         :     :                                                           :                 +- *(23) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
         :     :                                                           :                    +- AQEShuffleRead coalesced
         :     :                                                           :                       +- ShuffleQueryStage 2
         :     :                                                           :                          +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#73949]
         :     :                                                           :                             +- *(3) Filter ((((d_year#618 = 2000) OR ((d_year#618 = 1999) AND (d_moy#620 = 12))) OR ((d_year#618 = 2001) AND (d_moy#620 = 1))) AND isnotnull(d_date_sk#612))
         :     :                                                           :                                +- *(3) ColumnarToRow
         :     :                                                           :                                   +- FileScan parquet [d_date_sk#612,d_year#618,d_moy#620] Batched: true, DataFilters: [(((d_year#618 = 2000) OR ((d_year#618 = 1999) AND (d_moy#620 = 12))) OR ((d_year#618 = 2001) AND..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
         :     :                                                           +- *(32) Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
         :     :                                                              +- AQEShuffleRead coalesced
         :     :                                                                 +- ShuffleQueryStage 3
         :     :                                                                    +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#73970]
         :     :                                                                       +- *(4) Filter ((isnotnull(s_store_sk#712) AND isnotnull(s_store_name#717)) AND isnotnull(s_company_name#729))
         :     :                                                                          +- *(4) ColumnarToRow
         :     :                                                                             +- FileScan parquet [s_store_sk#712,s_store_name#717,s_company_name#729] Batched: true, DataFilters: [isnotnull(s_store_sk#712), isnotnull(s_store_name#717), isnotnull(s_company_name#729)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_name), IsNotNull(s_company_name)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
         :     +- *(51) Sort [i_category#9206 ASC NULLS FIRST, i_brand#9202 ASC NULLS FIRST, s_store_name#9272 ASC NULLS FIRST, s_company_name#9284 ASC NULLS FIRST, (rn#9300 + 1) ASC NULLS FIRST], false, 0
         :        +- AQEShuffleRead coalesced
         :           +- ShuffleQueryStage 40
         :              +- Exchange hashpartitioning(i_category#9206, i_brand#9202, s_store_name#9272, s_company_name#9284, (rn#9300 + 1), 200), ENSURE_REQUIREMENTS, [id=#76805]
         :                 +- *(47) Project [i_category#9206, i_brand#9202, s_store_name#9272, s_company_name#9284, sum_sales#9149 AS sum_sales#9170, rn#9300]
         :                    +- Window [rank(d_year#9245, d_moy#9247) windowspecdefinition(i_category#9206, i_brand#9202, s_store_name#9272, s_company_name#9284, d_year#9245 ASC NULLS FIRST, d_moy#9247 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#9300], [i_category#9206, i_brand#9202, s_store_name#9272, s_company_name#9284], [d_year#9245 ASC NULLS FIRST, d_moy#9247 ASC NULLS FIRST]
         :                       +- *(46) Sort [i_category#9206 ASC NULLS FIRST, i_brand#9202 ASC NULLS FIRST, s_store_name#9272 ASC NULLS FIRST, s_company_name#9284 ASC NULLS FIRST, d_year#9245 ASC NULLS FIRST, d_moy#9247 ASC NULLS FIRST], false, 0
         :                          +- AQEShuffleRead coalesced
         :                             +- ShuffleQueryStage 36
         :                                +- Exchange hashpartitioning(i_category#9206, i_brand#9202, s_store_name#9272, s_company_name#9284, 200), ENSURE_REQUIREMENTS, [id=#76537]
         :                                   +- *(41) HashAggregate(keys=[i_category#9206, i_brand#9202, s_store_name#9272, s_company_name#9284, d_year#9245, d_moy#9247], functions=[sum(UnscaledValue(ss_sales_price#9229))], output=[i_category#9206, i_brand#9202, s_store_name#9272, s_company_name#9284, d_year#9245, d_moy#9247, sum_sales#9149])
         :                                      +- AQEShuffleRead coalesced
         :                                         +- ShuffleQueryStage 32
         :                                            +- ReusedExchange [i_category#9206, i_brand#9202, s_store_name#9272, s_company_name#9284, d_year#9245, d_moy#9247, sum#9411L], Exchange hashpartitioning(i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620, 200), ENSURE_REQUIREMENTS, [id=#76216]
         +- *(53) Sort [i_category#9313 ASC NULLS FIRST, i_brand#9309 ASC NULLS FIRST, s_store_name#9379 ASC NULLS FIRST, s_company_name#9391 ASC NULLS FIRST, (rn#9407 - 1) ASC NULLS FIRST], false, 0
            +- AQEShuffleRead coalesced
               +- ShuffleQueryStage 41
                  +- Exchange hashpartitioning(i_category#9313, i_brand#9309, s_store_name#9379, s_company_name#9391, (rn#9407 - 1), 200), ENSURE_REQUIREMENTS, [id=#76835]
                     +- *(49) Project [i_category#9313, i_brand#9309, s_store_name#9379, s_company_name#9391, sum_sales#9149 AS sum_sales#9179, rn#9407]
                        +- Window [rank(d_year#9352, d_moy#9354) windowspecdefinition(i_category#9313, i_brand#9309, s_store_name#9379, s_company_name#9391, d_year#9352 ASC NULLS FIRST, d_moy#9354 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#9407], [i_category#9313, i_brand#9309, s_store_name#9379, s_company_name#9391], [d_year#9352 ASC NULLS FIRST, d_moy#9354 ASC NULLS FIRST]
                           +- *(48) Sort [i_category#9313 ASC NULLS FIRST, i_brand#9309 ASC NULLS FIRST, s_store_name#9379 ASC NULLS FIRST, s_company_name#9391 ASC NULLS FIRST, d_year#9352 ASC NULLS FIRST, d_moy#9354 ASC NULLS FIRST], false, 0
                              +- AQEShuffleRead coalesced
                                 +- ShuffleQueryStage 38
                                    +- ReusedExchange [i_category#9313, i_brand#9309, s_store_name#9379, s_company_name#9391, d_year#9352, d_moy#9354, sum_sales#9149], Exchange hashpartitioning(i_category#9206, i_brand#9202, s_store_name#9272, s_company_name#9284, 200), ENSURE_REQUIREMENTS, [id=#76537]
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#9149 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#9150 as decimal(22,6)))), DecimalType(22,6), true) ASC NULLS FIRST,nsum#9153 ASC NULLS FIRST], output=[i_category#680,i_brand#676,d_year#618,d_moy#620,avg_monthly_sales#9150,sum_sales#9149,psum#9152,nsum#9153])
   +- Project [i_category#680, i_brand#676, d_year#618, d_moy#620, avg_monthly_sales#9150, sum_sales#9149, sum_sales#9170 AS psum#9152, sum_sales#9179 AS nsum#9153]
      +- SortMergeJoin [i_category#680, i_brand#676, s_store_name#717, s_company_name#729, rn#9151], [i_category#9313, i_brand#9309, s_store_name#9379, s_company_name#9391, (rn#9407 - 1)], Inner
         :- Project [i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620, sum_sales#9149, avg_monthly_sales#9150, rn#9151, sum_sales#9170]
         :  +- SortMergeJoin [i_category#680, i_brand#676, s_store_name#717, s_company_name#729, rn#9151], [i_category#9206, i_brand#9202, s_store_name#9272, s_company_name#9284, (rn#9300 + 1)], Inner
         :     :- Sort [i_category#680 ASC NULLS FIRST, i_brand#676 ASC NULLS FIRST, s_store_name#717 ASC NULLS FIRST, s_company_name#729 ASC NULLS FIRST, rn#9151 ASC NULLS FIRST], false, 0
         :     :  +- Exchange hashpartitioning(i_category#680, i_brand#676, s_store_name#717, s_company_name#729, rn#9151, 200), ENSURE_REQUIREMENTS, [id=#73789]
         :     :     +- Project [i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620, sum_sales#9149, avg_monthly_sales#9150, rn#9151]
         :     :        +- Filter ((isnotnull(avg_monthly_sales#9150) AND (avg_monthly_sales#9150 > 0.000000)) AND (CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#9149 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#9150 as decimal(22,6)))), DecimalType(22,6), true), false)) / promote_precision(cast(avg_monthly_sales#9150 as decimal(22,6)))), DecimalType(38,16), true) > 0.1000000000000000))
         :     :           +- Window [avg(_w0#9163) windowspecdefinition(i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#9150], [i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618]
         :     :              +- Filter (isnotnull(d_year#618) AND (d_year#618 = 2000))
         :     :                 +- Window [rank(d_year#618, d_moy#620) windowspecdefinition(i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618 ASC NULLS FIRST, d_moy#620 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#9151], [i_category#680, i_brand#676, s_store_name#717, s_company_name#729], [d_year#618 ASC NULLS FIRST, d_moy#620 ASC NULLS FIRST]
         :     :                    +- Sort [i_category#680 ASC NULLS FIRST, i_brand#676 ASC NULLS FIRST, s_store_name#717 ASC NULLS FIRST, s_company_name#729 ASC NULLS FIRST, d_year#618 ASC NULLS FIRST, d_moy#620 ASC NULLS FIRST], false, 0
         :     :                       +- Exchange hashpartitioning(i_category#680, i_brand#676, s_store_name#717, s_company_name#729, 200), ENSURE_REQUIREMENTS, [id=#73748]
         :     :                          +- HashAggregate(keys=[i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620], functions=[sum(UnscaledValue(ss_sales_price#265))], output=[i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620, sum_sales#9149, _w0#9163])
         :     :                             +- Exchange hashpartitioning(i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620, 200), ENSURE_REQUIREMENTS, [id=#73745]
         :     :                                +- HashAggregate(keys=[i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620], functions=[partial_sum(UnscaledValue(ss_sales_price#265))], output=[i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620, sum#9409L])
         :     :                                   +- Project [i_brand#676, i_category#680, ss_sales_price#265, d_year#618, d_moy#620, s_store_name#717, s_company_name#729]
         :     :                                      +- SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
         :     :                                         :- Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
         :     :                                         :  +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#73737]
         :     :                                         :     +- Project [i_brand#676, i_category#680, ss_store_sk#259, ss_sales_price#265, d_year#618, d_moy#620]
         :     :                                         :        +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
         :     :                                         :           :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
         :     :                                         :           :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#73729]
         :     :                                         :           :     +- Project [i_brand#676, i_category#680, ss_sold_date_sk#252, ss_store_sk#259, ss_sales_price#265]
         :     :                                         :           :        +- SortMergeJoin [i_item_sk#668], [ss_item_sk#254], Inner
         :     :                                         :           :           :- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
         :     :                                         :           :           :  +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#73721]
         :     :                                         :           :           :     +- Filter ((isnotnull(i_item_sk#668) AND isnotnull(i_category#680)) AND isnotnull(i_brand#676))
         :     :                                         :           :           :        +- FileScan parquet [i_item_sk#668,i_brand#676,i_category#680] Batched: true, DataFilters: [isnotnull(i_item_sk#668), isnotnull(i_category#680), isnotnull(i_brand#676)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
         :     :                                         :           :           +- Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
         :     :                                         :           :              +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#73722]
         :     :                                         :           :                 +- Filter ((isnotnull(ss_item_sk#254) AND isnotnull(ss_sold_date_sk#252)) AND isnotnull(ss_store_sk#259))
         :     :                                         :           :                    +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_store_sk#259,ss_sales_price#265] Batched: true, DataFilters: [isnotnull(ss_item_sk#254), isnotnull(ss_sold_date_sk#252), isnotnull(ss_store_sk#259)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
         :     :                                         :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
         :     :                                         :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#73730]
         :     :                                         :                 +- Filter ((((d_year#618 = 2000) OR ((d_year#618 = 1999) AND (d_moy#620 = 12))) OR ((d_year#618 = 2001) AND (d_moy#620 = 1))) AND isnotnull(d_date_sk#612))
         :     :                                         :                    +- FileScan parquet [d_date_sk#612,d_year#618,d_moy#620] Batched: true, DataFilters: [(((d_year#618 = 2000) OR ((d_year#618 = 1999) AND (d_moy#620 = 12))) OR ((d_year#618 = 2001) AND..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
         :     :                                         +- Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
         :     :                                            +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#73738]
         :     :                                               +- Filter ((isnotnull(s_store_sk#712) AND isnotnull(s_store_name#717)) AND isnotnull(s_company_name#729))
         :     :                                                  +- FileScan parquet [s_store_sk#712,s_store_name#717,s_company_name#729] Batched: true, DataFilters: [isnotnull(s_store_sk#712), isnotnull(s_store_name#717), isnotnull(s_company_name#729)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_name), IsNotNull(s_company_name)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
         :     +- Sort [i_category#9206 ASC NULLS FIRST, i_brand#9202 ASC NULLS FIRST, s_store_name#9272 ASC NULLS FIRST, s_company_name#9284 ASC NULLS FIRST, (rn#9300 + 1) ASC NULLS FIRST], false, 0
         :        +- Exchange hashpartitioning(i_category#9206, i_brand#9202, s_store_name#9272, s_company_name#9284, (rn#9300 + 1), 200), ENSURE_REQUIREMENTS, [id=#73790]
         :           +- Project [i_category#9206, i_brand#9202, s_store_name#9272, s_company_name#9284, sum_sales#9149 AS sum_sales#9170, rn#9300]
         :              +- Window [rank(d_year#9245, d_moy#9247) windowspecdefinition(i_category#9206, i_brand#9202, s_store_name#9272, s_company_name#9284, d_year#9245 ASC NULLS FIRST, d_moy#9247 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#9300], [i_category#9206, i_brand#9202, s_store_name#9272, s_company_name#9284], [d_year#9245 ASC NULLS FIRST, d_moy#9247 ASC NULLS FIRST]
         :                 +- Sort [i_category#9206 ASC NULLS FIRST, i_brand#9202 ASC NULLS FIRST, s_store_name#9272 ASC NULLS FIRST, s_company_name#9284 ASC NULLS FIRST, d_year#9245 ASC NULLS FIRST, d_moy#9247 ASC NULLS FIRST], false, 0
         :                    +- Exchange hashpartitioning(i_category#9206, i_brand#9202, s_store_name#9272, s_company_name#9284, 200), ENSURE_REQUIREMENTS, [id=#73783]
         :                       +- HashAggregate(keys=[i_category#9206, i_brand#9202, s_store_name#9272, s_company_name#9284, d_year#9245, d_moy#9247], functions=[sum(UnscaledValue(ss_sales_price#9229))], output=[i_category#9206, i_brand#9202, s_store_name#9272, s_company_name#9284, d_year#9245, d_moy#9247, sum_sales#9149])
         :                          +- Exchange hashpartitioning(i_category#9206, i_brand#9202, s_store_name#9272, s_company_name#9284, d_year#9245, d_moy#9247, 200), ENSURE_REQUIREMENTS, [id=#73780]
         :                             +- HashAggregate(keys=[i_category#9206, i_brand#9202, s_store_name#9272, s_company_name#9284, d_year#9245, d_moy#9247], functions=[partial_sum(UnscaledValue(ss_sales_price#9229))], output=[i_category#9206, i_brand#9202, s_store_name#9272, s_company_name#9284, d_year#9245, d_moy#9247, sum#9411L])
         :                                +- Project [i_brand#9202, i_category#9206, ss_sales_price#9229, d_year#9245, d_moy#9247, s_store_name#9272, s_company_name#9284]
         :                                   +- SortMergeJoin [ss_store_sk#9223], [s_store_sk#9267], Inner
         :                                      :- Sort [ss_store_sk#9223 ASC NULLS FIRST], false, 0
         :                                      :  +- Exchange hashpartitioning(ss_store_sk#9223, 200), ENSURE_REQUIREMENTS, [id=#73772]
         :                                      :     +- Project [i_brand#9202, i_category#9206, ss_store_sk#9223, ss_sales_price#9229, d_year#9245, d_moy#9247]
         :                                      :        +- SortMergeJoin [ss_sold_date_sk#9216], [d_date_sk#9239], Inner
         :                                      :           :- Sort [ss_sold_date_sk#9216 ASC NULLS FIRST], false, 0
         :                                      :           :  +- Exchange hashpartitioning(ss_sold_date_sk#9216, 200), ENSURE_REQUIREMENTS, [id=#73764]
         :                                      :           :     +- Project [i_brand#9202, i_category#9206, ss_sold_date_sk#9216, ss_store_sk#9223, ss_sales_price#9229]
         :                                      :           :        +- SortMergeJoin [i_item_sk#9194], [ss_item_sk#9218], Inner
         :                                      :           :           :- Sort [i_item_sk#9194 ASC NULLS FIRST], false, 0
         :                                      :           :           :  +- Exchange hashpartitioning(i_item_sk#9194, 200), ENSURE_REQUIREMENTS, [id=#73756]
         :                                      :           :           :     +- Filter ((isnotnull(i_item_sk#9194) AND isnotnull(i_category#9206)) AND isnotnull(i_brand#9202))
         :                                      :           :           :        +- FileScan parquet [i_item_sk#9194,i_brand#9202,i_category#9206] Batched: true, DataFilters: [isnotnull(i_item_sk#9194), isnotnull(i_category#9206), isnotnull(i_brand#9202)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
         :                                      :           :           +- Sort [ss_item_sk#9218 ASC NULLS FIRST], false, 0
         :                                      :           :              +- Exchange hashpartitioning(ss_item_sk#9218, 200), ENSURE_REQUIREMENTS, [id=#73757]
         :                                      :           :                 +- Filter ((isnotnull(ss_item_sk#9218) AND isnotnull(ss_sold_date_sk#9216)) AND isnotnull(ss_store_sk#9223))
         :                                      :           :                    +- FileScan parquet [ss_sold_date_sk#9216,ss_item_sk#9218,ss_store_sk#9223,ss_sales_price#9229] Batched: true, DataFilters: [isnotnull(ss_item_sk#9218), isnotnull(ss_sold_date_sk#9216), isnotnull(ss_store_sk#9223)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
         :                                      :           +- Sort [d_date_sk#9239 ASC NULLS FIRST], false, 0
         :                                      :              +- Exchange hashpartitioning(d_date_sk#9239, 200), ENSURE_REQUIREMENTS, [id=#73765]
         :                                      :                 +- Filter ((((d_year#9245 = 2000) OR ((d_year#9245 = 1999) AND (d_moy#9247 = 12))) OR ((d_year#9245 = 2001) AND (d_moy#9247 = 1))) AND isnotnull(d_date_sk#9239))
         :                                      :                    +- FileScan parquet [d_date_sk#9239,d_year#9245,d_moy#9247] Batched: true, DataFilters: [(((d_year#9245 = 2000) OR ((d_year#9245 = 1999) AND (d_moy#9247 = 12))) OR ((d_year#9245 = 2001)..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
         :                                      +- Sort [s_store_sk#9267 ASC NULLS FIRST], false, 0
         :                                         +- Exchange hashpartitioning(s_store_sk#9267, 200), ENSURE_REQUIREMENTS, [id=#73773]
         :                                            +- Filter ((isnotnull(s_store_sk#9267) AND isnotnull(s_store_name#9272)) AND isnotnull(s_company_name#9284))
         :                                               +- FileScan parquet [s_store_sk#9267,s_store_name#9272,s_company_name#9284] Batched: true, DataFilters: [isnotnull(s_store_sk#9267), isnotnull(s_store_name#9272), isnotnull(s_company_name#9284)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_name), IsNotNull(s_company_name)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
         +- Sort [i_category#9313 ASC NULLS FIRST, i_brand#9309 ASC NULLS FIRST, s_store_name#9379 ASC NULLS FIRST, s_company_name#9391 ASC NULLS FIRST, (rn#9407 - 1) ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(i_category#9313, i_brand#9309, s_store_name#9379, s_company_name#9391, (rn#9407 - 1), 200), ENSURE_REQUIREMENTS, [id=#73829]
               +- Project [i_category#9313, i_brand#9309, s_store_name#9379, s_company_name#9391, sum_sales#9149 AS sum_sales#9179, rn#9407]
                  +- Window [rank(d_year#9352, d_moy#9354) windowspecdefinition(i_category#9313, i_brand#9309, s_store_name#9379, s_company_name#9391, d_year#9352 ASC NULLS FIRST, d_moy#9354 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#9407], [i_category#9313, i_brand#9309, s_store_name#9379, s_company_name#9391], [d_year#9352 ASC NULLS FIRST, d_moy#9354 ASC NULLS FIRST]
                     +- Sort [i_category#9313 ASC NULLS FIRST, i_brand#9309 ASC NULLS FIRST, s_store_name#9379 ASC NULLS FIRST, s_company_name#9391 ASC NULLS FIRST, d_year#9352 ASC NULLS FIRST, d_moy#9354 ASC NULLS FIRST], false, 0
                        +- Exchange hashpartitioning(i_category#9313, i_brand#9309, s_store_name#9379, s_company_name#9391, 200), ENSURE_REQUIREMENTS, [id=#73823]
                           +- HashAggregate(keys=[i_category#9313, i_brand#9309, s_store_name#9379, s_company_name#9391, d_year#9352, d_moy#9354], functions=[sum(UnscaledValue(ss_sales_price#9336))], output=[i_category#9313, i_brand#9309, s_store_name#9379, s_company_name#9391, d_year#9352, d_moy#9354, sum_sales#9149])
                              +- Exchange hashpartitioning(i_category#9313, i_brand#9309, s_store_name#9379, s_company_name#9391, d_year#9352, d_moy#9354, 200), ENSURE_REQUIREMENTS, [id=#73820]
                                 +- HashAggregate(keys=[i_category#9313, i_brand#9309, s_store_name#9379, s_company_name#9391, d_year#9352, d_moy#9354], functions=[partial_sum(UnscaledValue(ss_sales_price#9336))], output=[i_category#9313, i_brand#9309, s_store_name#9379, s_company_name#9391, d_year#9352, d_moy#9354, sum#9413L])
                                    +- Project [i_brand#9309, i_category#9313, ss_sales_price#9336, d_year#9352, d_moy#9354, s_store_name#9379, s_company_name#9391]
                                       +- SortMergeJoin [ss_store_sk#9330], [s_store_sk#9374], Inner
                                          :- Sort [ss_store_sk#9330 ASC NULLS FIRST], false, 0
                                          :  +- Exchange hashpartitioning(ss_store_sk#9330, 200), ENSURE_REQUIREMENTS, [id=#73812]
                                          :     +- Project [i_brand#9309, i_category#9313, ss_store_sk#9330, ss_sales_price#9336, d_year#9352, d_moy#9354]
                                          :        +- SortMergeJoin [ss_sold_date_sk#9323], [d_date_sk#9346], Inner
                                          :           :- Sort [ss_sold_date_sk#9323 ASC NULLS FIRST], false, 0
                                          :           :  +- Exchange hashpartitioning(ss_sold_date_sk#9323, 200), ENSURE_REQUIREMENTS, [id=#73804]
                                          :           :     +- Project [i_brand#9309, i_category#9313, ss_sold_date_sk#9323, ss_store_sk#9330, ss_sales_price#9336]
                                          :           :        +- SortMergeJoin [i_item_sk#9301], [ss_item_sk#9325], Inner
                                          :           :           :- Sort [i_item_sk#9301 ASC NULLS FIRST], false, 0
                                          :           :           :  +- Exchange hashpartitioning(i_item_sk#9301, 200), ENSURE_REQUIREMENTS, [id=#73796]
                                          :           :           :     +- Filter ((isnotnull(i_item_sk#9301) AND isnotnull(i_category#9313)) AND isnotnull(i_brand#9309))
                                          :           :           :        +- FileScan parquet [i_item_sk#9301,i_brand#9309,i_category#9313] Batched: true, DataFilters: [isnotnull(i_item_sk#9301), isnotnull(i_category#9313), isnotnull(i_brand#9309)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
                                          :           :           +- Sort [ss_item_sk#9325 ASC NULLS FIRST], false, 0
                                          :           :              +- Exchange hashpartitioning(ss_item_sk#9325, 200), ENSURE_REQUIREMENTS, [id=#73797]
                                          :           :                 +- Filter ((isnotnull(ss_item_sk#9325) AND isnotnull(ss_sold_date_sk#9323)) AND isnotnull(ss_store_sk#9330))
                                          :           :                    +- FileScan parquet [ss_sold_date_sk#9323,ss_item_sk#9325,ss_store_sk#9330,ss_sales_price#9336] Batched: true, DataFilters: [isnotnull(ss_item_sk#9325), isnotnull(ss_sold_date_sk#9323), isnotnull(ss_store_sk#9330)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
                                          :           +- Sort [d_date_sk#9346 ASC NULLS FIRST], false, 0
                                          :              +- Exchange hashpartitioning(d_date_sk#9346, 200), ENSURE_REQUIREMENTS, [id=#73805]
                                          :                 +- Filter ((((d_year#9352 = 2000) OR ((d_year#9352 = 1999) AND (d_moy#9354 = 12))) OR ((d_year#9352 = 2001) AND (d_moy#9354 = 1))) AND isnotnull(d_date_sk#9346))
                                          :                    +- FileScan parquet [d_date_sk#9346,d_year#9352,d_moy#9354] Batched: true, DataFilters: [(((d_year#9352 = 2000) OR ((d_year#9352 = 1999) AND (d_moy#9354 = 12))) OR ((d_year#9352 = 2001)..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                                          +- Sort [s_store_sk#9374 ASC NULLS FIRST], false, 0
                                             +- Exchange hashpartitioning(s_store_sk#9374, 200), ENSURE_REQUIREMENTS, [id=#73813]
                                                +- Filter ((isnotnull(s_store_sk#9374) AND isnotnull(s_store_name#9379)) AND isnotnull(s_company_name#9391))
                                                   +- FileScan parquet [s_store_sk#9374,s_store_name#9379,s_company_name#9391] Batched: true, DataFilters: [isnotnull(s_store_sk#9374), isnotnull(s_store_name#9379), isnotnull(s_company_name#9391)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_name), IsNotNull(s_company_name)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
