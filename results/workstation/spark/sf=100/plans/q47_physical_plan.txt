AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#11362 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#11363 as decimal(22,6)))), DecimalType(22,6), true) ASC NULLS FIRST,psum#11365 ASC NULLS FIRST], output=[i_category#680,i_brand#676,d_year#618,d_moy#620,avg_monthly_sales#11363,sum_sales#11362,psum#11365,nsum#11366])
   +- *(54) Project [i_category#680, i_brand#676, d_year#618, d_moy#620, avg_monthly_sales#11363, sum_sales#11362, sum_sales#11383 AS psum#11365, sum_sales#11392 AS nsum#11366]
      +- *(54) SortMergeJoin [i_category#680, i_brand#676, s_store_name#717, s_company_name#729, rn#11364], [i_category#11526, i_brand#11522, s_store_name#11592, s_company_name#11604, (rn#11620 - 1)], Inner
         :- *(52) Project [i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620, sum_sales#11362, avg_monthly_sales#11363, rn#11364, sum_sales#11383]
         :  +- *(52) SortMergeJoin [i_category#680, i_brand#676, s_store_name#717, s_company_name#729, rn#11364], [i_category#11419, i_brand#11415, s_store_name#11485, s_company_name#11497, (rn#11513 + 1)], Inner
         :     :- *(50) Sort [i_category#680 ASC NULLS FIRST, i_brand#676 ASC NULLS FIRST, s_store_name#717 ASC NULLS FIRST, s_company_name#729 ASC NULLS FIRST, rn#11364 ASC NULLS FIRST], false, 0
         :     :  +- AQEShuffleRead coalesced
         :     :     +- ShuffleQueryStage 39
         :     :        +- Exchange hashpartitioning(i_category#680, i_brand#676, s_store_name#717, s_company_name#729, rn#11364, 200), ENSURE_REQUIREMENTS, [id=#148641]
         :     :           +- *(45) Project [i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620, sum_sales#11362, avg_monthly_sales#11363, rn#11364]
         :     :              +- *(45) Filter ((isnotnull(avg_monthly_sales#11363) AND (avg_monthly_sales#11363 > 0.000000)) AND (CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#11362 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#11363 as decimal(22,6)))), DecimalType(22,6), true), false)) / promote_precision(cast(avg_monthly_sales#11363 as decimal(22,6)))), DecimalType(38,16), true) > 0.1000000000000000))
         :     :                 +- Window [avg(_w0#11376) windowspecdefinition(i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#11363], [i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618]
         :     :                    +- *(44) Filter (isnotnull(d_year#618) AND (d_year#618 = 2000))
         :     :                       +- Window [rank(d_year#618, d_moy#620) windowspecdefinition(i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618 ASC NULLS FIRST, d_moy#620 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#11364], [i_category#680, i_brand#676, s_store_name#717, s_company_name#729], [d_year#618 ASC NULLS FIRST, d_moy#620 ASC NULLS FIRST]
         :     :                          +- *(43) Sort [i_category#680 ASC NULLS FIRST, i_brand#676 ASC NULLS FIRST, s_store_name#717 ASC NULLS FIRST, s_company_name#729 ASC NULLS FIRST, d_year#618 ASC NULLS FIRST, d_moy#620 ASC NULLS FIRST], false, 0
         :     :                             +- AQEShuffleRead coalesced
         :     :                                +- ShuffleQueryStage 35
         :     :                                   +- Exchange hashpartitioning(i_category#680, i_brand#676, s_store_name#717, s_company_name#729, 200), ENSURE_REQUIREMENTS, [id=#148470]
         :     :                                      +- *(40) HashAggregate(keys=[i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620], functions=[sum(UnscaledValue(ss_sales_price#265))], output=[i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620, sum_sales#11362, _w0#11376])
         :     :                                         +- AQEShuffleRead coalesced
         :     :                                            +- ShuffleQueryStage 30
         :     :                                               +- Exchange hashpartitioning(i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620, 200), ENSURE_REQUIREMENTS, [id=#148128]
         :     :                                                  +- *(33) HashAggregate(keys=[i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620], functions=[partial_sum(UnscaledValue(ss_sales_price#265))], output=[i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620, sum#11622L])
         :     :                                                     +- *(33) Project [i_brand#676, i_category#680, ss_sales_price#265, d_year#618, d_moy#620, s_store_name#717, s_company_name#729]
         :     :                                                        +- *(33) SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
         :     :                                                           :- *(31) Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
         :     :                                                           :  +- AQEShuffleRead coalesced
         :     :                                                           :     +- ShuffleQueryStage 25
         :     :                                                           :        +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#147539]
         :     :                                                           :           +- *(24) Project [i_brand#676, i_category#680, ss_store_sk#259, ss_sales_price#265, d_year#618, d_moy#620]
         :     :                                                           :              +- *(24) SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
         :     :                                                           :                 :- *(22) Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
         :     :                                                           :                 :  +- AQEShuffleRead coalesced
         :     :                                                           :                 :     +- ShuffleQueryStage 20
         :     :                                                           :                 :        +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#147136]
         :     :                                                           :                 :           +- *(15) Project [i_brand#676, i_category#680, ss_sold_date_sk#252, ss_store_sk#259, ss_sales_price#265]
         :     :                                                           :                 :              +- *(15) SortMergeJoin [i_item_sk#668], [ss_item_sk#254], Inner
         :     :                                                           :                 :                 :- *(13) Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
         :     :                                                           :                 :                 :  +- AQEShuffleRead coalesced
         :     :                                                           :                 :                 :     +- ShuffleQueryStage 0
         :     :                                                           :                 :                 :        +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#145634]
         :     :                                                           :                 :                 :           +- *(1) Filter ((isnotnull(i_item_sk#668) AND isnotnull(i_category#680)) AND isnotnull(i_brand#676))
         :     :                                                           :                 :                 :              +- *(1) ColumnarToRow
         :     :                                                           :                 :                 :                 +- FileScan parquet [i_item_sk#668,i_brand#676,i_category#680] Batched: true, DataFilters: [isnotnull(i_item_sk#668), isnotnull(i_category#680), isnotnull(i_brand#676)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
         :     :                                                           :                 :                 +- *(14) Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
         :     :                                                           :                 :                    +- AQEShuffleRead coalesced
         :     :                                                           :                 :                       +- ShuffleQueryStage 1
         :     :                                                           :                 :                          +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#145651]
         :     :                                                           :                 :                             +- *(2) Filter ((isnotnull(ss_item_sk#254) AND isnotnull(ss_sold_date_sk#252)) AND isnotnull(ss_store_sk#259))
         :     :                                                           :                 :                                +- *(2) ColumnarToRow
         :     :                                                           :                 :                                   +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_store_sk#259,ss_sales_price#265] Batched: true, DataFilters: [isnotnull(ss_item_sk#254), isnotnull(ss_sold_date_sk#252), isnotnull(ss_store_sk#259)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
         :     :                                                           :                 +- *(23) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
         :     :                                                           :                    +- AQEShuffleRead coalesced
         :     :                                                           :                       +- ShuffleQueryStage 2
         :     :                                                           :                          +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#145672]
         :     :                                                           :                             +- *(3) Filter ((((d_year#618 = 2000) OR ((d_year#618 = 1999) AND (d_moy#620 = 12))) OR ((d_year#618 = 2001) AND (d_moy#620 = 1))) AND isnotnull(d_date_sk#612))
         :     :                                                           :                                +- *(3) ColumnarToRow
         :     :                                                           :                                   +- FileScan parquet [d_date_sk#612,d_year#618,d_moy#620] Batched: true, DataFilters: [(((d_year#618 = 2000) OR ((d_year#618 = 1999) AND (d_moy#620 = 12))) OR ((d_year#618 = 2001) AND..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
         :     :                                                           +- *(32) Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
         :     :                                                              +- AQEShuffleRead coalesced
         :     :                                                                 +- ShuffleQueryStage 3
         :     :                                                                    +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#145693]
         :     :                                                                       +- *(4) Filter ((isnotnull(s_store_sk#712) AND isnotnull(s_store_name#717)) AND isnotnull(s_company_name#729))
         :     :                                                                          +- *(4) ColumnarToRow
         :     :                                                                             +- FileScan parquet [s_store_sk#712,s_store_name#717,s_company_name#729] Batched: true, DataFilters: [isnotnull(s_store_sk#712), isnotnull(s_store_name#717), isnotnull(s_company_name#729)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_name), IsNotNull(s_company_name)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
         :     +- *(51) Sort [i_category#11419 ASC NULLS FIRST, i_brand#11415 ASC NULLS FIRST, s_store_name#11485 ASC NULLS FIRST, s_company_name#11497 ASC NULLS FIRST, (rn#11513 + 1) ASC NULLS FIRST], false, 0
         :        +- AQEShuffleRead coalesced
         :           +- ShuffleQueryStage 40
         :              +- Exchange hashpartitioning(i_category#11419, i_brand#11415, s_store_name#11485, s_company_name#11497, (rn#11513 + 1), 200), ENSURE_REQUIREMENTS, [id=#148749]
         :                 +- *(47) Project [i_category#11419, i_brand#11415, s_store_name#11485, s_company_name#11497, sum_sales#11362 AS sum_sales#11383, rn#11513]
         :                    +- Window [rank(d_year#11458, d_moy#11460) windowspecdefinition(i_category#11419, i_brand#11415, s_store_name#11485, s_company_name#11497, d_year#11458 ASC NULLS FIRST, d_moy#11460 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#11513], [i_category#11419, i_brand#11415, s_store_name#11485, s_company_name#11497], [d_year#11458 ASC NULLS FIRST, d_moy#11460 ASC NULLS FIRST]
         :                       +- *(46) Sort [i_category#11419 ASC NULLS FIRST, i_brand#11415 ASC NULLS FIRST, s_store_name#11485 ASC NULLS FIRST, s_company_name#11497 ASC NULLS FIRST, d_year#11458 ASC NULLS FIRST, d_moy#11460 ASC NULLS FIRST], false, 0
         :                          +- AQEShuffleRead coalesced
         :                             +- ShuffleQueryStage 36
         :                                +- Exchange hashpartitioning(i_category#11419, i_brand#11415, s_store_name#11485, s_company_name#11497, 200), ENSURE_REQUIREMENTS, [id=#148493]
         :                                   +- *(41) HashAggregate(keys=[i_category#11419, i_brand#11415, s_store_name#11485, s_company_name#11497, d_year#11458, d_moy#11460], functions=[sum(UnscaledValue(ss_sales_price#11442))], output=[i_category#11419, i_brand#11415, s_store_name#11485, s_company_name#11497, d_year#11458, d_moy#11460, sum_sales#11362])
         :                                      +- AQEShuffleRead coalesced
         :                                         +- ShuffleQueryStage 32
         :                                            +- ReusedExchange [i_category#11419, i_brand#11415, s_store_name#11485, s_company_name#11497, d_year#11458, d_moy#11460, sum#11624L], Exchange hashpartitioning(i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620, 200), ENSURE_REQUIREMENTS, [id=#148128]
         +- *(53) Sort [i_category#11526 ASC NULLS FIRST, i_brand#11522 ASC NULLS FIRST, s_store_name#11592 ASC NULLS FIRST, s_company_name#11604 ASC NULLS FIRST, (rn#11620 - 1) ASC NULLS FIRST], false, 0
            +- AQEShuffleRead coalesced
               +- ShuffleQueryStage 41
                  +- Exchange hashpartitioning(i_category#11526, i_brand#11522, s_store_name#11592, s_company_name#11604, (rn#11620 - 1), 200), ENSURE_REQUIREMENTS, [id=#148779]
                     +- *(49) Project [i_category#11526, i_brand#11522, s_store_name#11592, s_company_name#11604, sum_sales#11362 AS sum_sales#11392, rn#11620]
                        +- Window [rank(d_year#11565, d_moy#11567) windowspecdefinition(i_category#11526, i_brand#11522, s_store_name#11592, s_company_name#11604, d_year#11565 ASC NULLS FIRST, d_moy#11567 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#11620], [i_category#11526, i_brand#11522, s_store_name#11592, s_company_name#11604], [d_year#11565 ASC NULLS FIRST, d_moy#11567 ASC NULLS FIRST]
                           +- *(48) Sort [i_category#11526 ASC NULLS FIRST, i_brand#11522 ASC NULLS FIRST, s_store_name#11592 ASC NULLS FIRST, s_company_name#11604 ASC NULLS FIRST, d_year#11565 ASC NULLS FIRST, d_moy#11567 ASC NULLS FIRST], false, 0
                              +- AQEShuffleRead coalesced
                                 +- ShuffleQueryStage 38
                                    +- ReusedExchange [i_category#11526, i_brand#11522, s_store_name#11592, s_company_name#11604, d_year#11565, d_moy#11567, sum_sales#11362], Exchange hashpartitioning(i_category#11419, i_brand#11415, s_store_name#11485, s_company_name#11497, 200), ENSURE_REQUIREMENTS, [id=#148493]
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#11362 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#11363 as decimal(22,6)))), DecimalType(22,6), true) ASC NULLS FIRST,psum#11365 ASC NULLS FIRST], output=[i_category#680,i_brand#676,d_year#618,d_moy#620,avg_monthly_sales#11363,sum_sales#11362,psum#11365,nsum#11366])
   +- Project [i_category#680, i_brand#676, d_year#618, d_moy#620, avg_monthly_sales#11363, sum_sales#11362, sum_sales#11383 AS psum#11365, sum_sales#11392 AS nsum#11366]
      +- SortMergeJoin [i_category#680, i_brand#676, s_store_name#717, s_company_name#729, rn#11364], [i_category#11526, i_brand#11522, s_store_name#11592, s_company_name#11604, (rn#11620 - 1)], Inner
         :- Project [i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620, sum_sales#11362, avg_monthly_sales#11363, rn#11364, sum_sales#11383]
         :  +- SortMergeJoin [i_category#680, i_brand#676, s_store_name#717, s_company_name#729, rn#11364], [i_category#11419, i_brand#11415, s_store_name#11485, s_company_name#11497, (rn#11513 + 1)], Inner
         :     :- Sort [i_category#680 ASC NULLS FIRST, i_brand#676 ASC NULLS FIRST, s_store_name#717 ASC NULLS FIRST, s_company_name#729 ASC NULLS FIRST, rn#11364 ASC NULLS FIRST], false, 0
         :     :  +- Exchange hashpartitioning(i_category#680, i_brand#676, s_store_name#717, s_company_name#729, rn#11364, 200), ENSURE_REQUIREMENTS, [id=#145512]
         :     :     +- Project [i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620, sum_sales#11362, avg_monthly_sales#11363, rn#11364]
         :     :        +- Filter ((isnotnull(avg_monthly_sales#11363) AND (avg_monthly_sales#11363 > 0.000000)) AND (CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#11362 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#11363 as decimal(22,6)))), DecimalType(22,6), true), false)) / promote_precision(cast(avg_monthly_sales#11363 as decimal(22,6)))), DecimalType(38,16), true) > 0.1000000000000000))
         :     :           +- Window [avg(_w0#11376) windowspecdefinition(i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#11363], [i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618]
         :     :              +- Filter (isnotnull(d_year#618) AND (d_year#618 = 2000))
         :     :                 +- Window [rank(d_year#618, d_moy#620) windowspecdefinition(i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618 ASC NULLS FIRST, d_moy#620 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#11364], [i_category#680, i_brand#676, s_store_name#717, s_company_name#729], [d_year#618 ASC NULLS FIRST, d_moy#620 ASC NULLS FIRST]
         :     :                    +- Sort [i_category#680 ASC NULLS FIRST, i_brand#676 ASC NULLS FIRST, s_store_name#717 ASC NULLS FIRST, s_company_name#729 ASC NULLS FIRST, d_year#618 ASC NULLS FIRST, d_moy#620 ASC NULLS FIRST], false, 0
         :     :                       +- Exchange hashpartitioning(i_category#680, i_brand#676, s_store_name#717, s_company_name#729, 200), ENSURE_REQUIREMENTS, [id=#145471]
         :     :                          +- HashAggregate(keys=[i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620], functions=[sum(UnscaledValue(ss_sales_price#265))], output=[i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620, sum_sales#11362, _w0#11376])
         :     :                             +- Exchange hashpartitioning(i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620, 200), ENSURE_REQUIREMENTS, [id=#145468]
         :     :                                +- HashAggregate(keys=[i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620], functions=[partial_sum(UnscaledValue(ss_sales_price#265))], output=[i_category#680, i_brand#676, s_store_name#717, s_company_name#729, d_year#618, d_moy#620, sum#11622L])
         :     :                                   +- Project [i_brand#676, i_category#680, ss_sales_price#265, d_year#618, d_moy#620, s_store_name#717, s_company_name#729]
         :     :                                      +- SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
         :     :                                         :- Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
         :     :                                         :  +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#145460]
         :     :                                         :     +- Project [i_brand#676, i_category#680, ss_store_sk#259, ss_sales_price#265, d_year#618, d_moy#620]
         :     :                                         :        +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
         :     :                                         :           :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
         :     :                                         :           :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#145452]
         :     :                                         :           :     +- Project [i_brand#676, i_category#680, ss_sold_date_sk#252, ss_store_sk#259, ss_sales_price#265]
         :     :                                         :           :        +- SortMergeJoin [i_item_sk#668], [ss_item_sk#254], Inner
         :     :                                         :           :           :- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
         :     :                                         :           :           :  +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#145444]
         :     :                                         :           :           :     +- Filter ((isnotnull(i_item_sk#668) AND isnotnull(i_category#680)) AND isnotnull(i_brand#676))
         :     :                                         :           :           :        +- FileScan parquet [i_item_sk#668,i_brand#676,i_category#680] Batched: true, DataFilters: [isnotnull(i_item_sk#668), isnotnull(i_category#680), isnotnull(i_brand#676)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
         :     :                                         :           :           +- Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
         :     :                                         :           :              +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#145445]
         :     :                                         :           :                 +- Filter ((isnotnull(ss_item_sk#254) AND isnotnull(ss_sold_date_sk#252)) AND isnotnull(ss_store_sk#259))
         :     :                                         :           :                    +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_store_sk#259,ss_sales_price#265] Batched: true, DataFilters: [isnotnull(ss_item_sk#254), isnotnull(ss_sold_date_sk#252), isnotnull(ss_store_sk#259)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
         :     :                                         :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
         :     :                                         :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#145453]
         :     :                                         :                 +- Filter ((((d_year#618 = 2000) OR ((d_year#618 = 1999) AND (d_moy#620 = 12))) OR ((d_year#618 = 2001) AND (d_moy#620 = 1))) AND isnotnull(d_date_sk#612))
         :     :                                         :                    +- FileScan parquet [d_date_sk#612,d_year#618,d_moy#620] Batched: true, DataFilters: [(((d_year#618 = 2000) OR ((d_year#618 = 1999) AND (d_moy#620 = 12))) OR ((d_year#618 = 2001) AND..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
         :     :                                         +- Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
         :     :                                            +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#145461]
         :     :                                               +- Filter ((isnotnull(s_store_sk#712) AND isnotnull(s_store_name#717)) AND isnotnull(s_company_name#729))
         :     :                                                  +- FileScan parquet [s_store_sk#712,s_store_name#717,s_company_name#729] Batched: true, DataFilters: [isnotnull(s_store_sk#712), isnotnull(s_store_name#717), isnotnull(s_company_name#729)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_name), IsNotNull(s_company_name)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
         :     +- Sort [i_category#11419 ASC NULLS FIRST, i_brand#11415 ASC NULLS FIRST, s_store_name#11485 ASC NULLS FIRST, s_company_name#11497 ASC NULLS FIRST, (rn#11513 + 1) ASC NULLS FIRST], false, 0
         :        +- Exchange hashpartitioning(i_category#11419, i_brand#11415, s_store_name#11485, s_company_name#11497, (rn#11513 + 1), 200), ENSURE_REQUIREMENTS, [id=#145513]
         :           +- Project [i_category#11419, i_brand#11415, s_store_name#11485, s_company_name#11497, sum_sales#11362 AS sum_sales#11383, rn#11513]
         :              +- Window [rank(d_year#11458, d_moy#11460) windowspecdefinition(i_category#11419, i_brand#11415, s_store_name#11485, s_company_name#11497, d_year#11458 ASC NULLS FIRST, d_moy#11460 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#11513], [i_category#11419, i_brand#11415, s_store_name#11485, s_company_name#11497], [d_year#11458 ASC NULLS FIRST, d_moy#11460 ASC NULLS FIRST]
         :                 +- Sort [i_category#11419 ASC NULLS FIRST, i_brand#11415 ASC NULLS FIRST, s_store_name#11485 ASC NULLS FIRST, s_company_name#11497 ASC NULLS FIRST, d_year#11458 ASC NULLS FIRST, d_moy#11460 ASC NULLS FIRST], false, 0
         :                    +- Exchange hashpartitioning(i_category#11419, i_brand#11415, s_store_name#11485, s_company_name#11497, 200), ENSURE_REQUIREMENTS, [id=#145506]
         :                       +- HashAggregate(keys=[i_category#11419, i_brand#11415, s_store_name#11485, s_company_name#11497, d_year#11458, d_moy#11460], functions=[sum(UnscaledValue(ss_sales_price#11442))], output=[i_category#11419, i_brand#11415, s_store_name#11485, s_company_name#11497, d_year#11458, d_moy#11460, sum_sales#11362])
         :                          +- Exchange hashpartitioning(i_category#11419, i_brand#11415, s_store_name#11485, s_company_name#11497, d_year#11458, d_moy#11460, 200), ENSURE_REQUIREMENTS, [id=#145503]
         :                             +- HashAggregate(keys=[i_category#11419, i_brand#11415, s_store_name#11485, s_company_name#11497, d_year#11458, d_moy#11460], functions=[partial_sum(UnscaledValue(ss_sales_price#11442))], output=[i_category#11419, i_brand#11415, s_store_name#11485, s_company_name#11497, d_year#11458, d_moy#11460, sum#11624L])
         :                                +- Project [i_brand#11415, i_category#11419, ss_sales_price#11442, d_year#11458, d_moy#11460, s_store_name#11485, s_company_name#11497]
         :                                   +- SortMergeJoin [ss_store_sk#11436], [s_store_sk#11480], Inner
         :                                      :- Sort [ss_store_sk#11436 ASC NULLS FIRST], false, 0
         :                                      :  +- Exchange hashpartitioning(ss_store_sk#11436, 200), ENSURE_REQUIREMENTS, [id=#145495]
         :                                      :     +- Project [i_brand#11415, i_category#11419, ss_store_sk#11436, ss_sales_price#11442, d_year#11458, d_moy#11460]
         :                                      :        +- SortMergeJoin [ss_sold_date_sk#11429], [d_date_sk#11452], Inner
         :                                      :           :- Sort [ss_sold_date_sk#11429 ASC NULLS FIRST], false, 0
         :                                      :           :  +- Exchange hashpartitioning(ss_sold_date_sk#11429, 200), ENSURE_REQUIREMENTS, [id=#145487]
         :                                      :           :     +- Project [i_brand#11415, i_category#11419, ss_sold_date_sk#11429, ss_store_sk#11436, ss_sales_price#11442]
         :                                      :           :        +- SortMergeJoin [i_item_sk#11407], [ss_item_sk#11431], Inner
         :                                      :           :           :- Sort [i_item_sk#11407 ASC NULLS FIRST], false, 0
         :                                      :           :           :  +- Exchange hashpartitioning(i_item_sk#11407, 200), ENSURE_REQUIREMENTS, [id=#145479]
         :                                      :           :           :     +- Filter ((isnotnull(i_item_sk#11407) AND isnotnull(i_category#11419)) AND isnotnull(i_brand#11415))
         :                                      :           :           :        +- FileScan parquet [i_item_sk#11407,i_brand#11415,i_category#11419] Batched: true, DataFilters: [isnotnull(i_item_sk#11407), isnotnull(i_category#11419), isnotnull(i_brand#11415)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
         :                                      :           :           +- Sort [ss_item_sk#11431 ASC NULLS FIRST], false, 0
         :                                      :           :              +- Exchange hashpartitioning(ss_item_sk#11431, 200), ENSURE_REQUIREMENTS, [id=#145480]
         :                                      :           :                 +- Filter ((isnotnull(ss_item_sk#11431) AND isnotnull(ss_sold_date_sk#11429)) AND isnotnull(ss_store_sk#11436))
         :                                      :           :                    +- FileScan parquet [ss_sold_date_sk#11429,ss_item_sk#11431,ss_store_sk#11436,ss_sales_price#11442] Batched: true, DataFilters: [isnotnull(ss_item_sk#11431), isnotnull(ss_sold_date_sk#11429), isnotnull(ss_store_sk#11436)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
         :                                      :           +- Sort [d_date_sk#11452 ASC NULLS FIRST], false, 0
         :                                      :              +- Exchange hashpartitioning(d_date_sk#11452, 200), ENSURE_REQUIREMENTS, [id=#145488]
         :                                      :                 +- Filter ((((d_year#11458 = 2000) OR ((d_year#11458 = 1999) AND (d_moy#11460 = 12))) OR ((d_year#11458 = 2001) AND (d_moy#11460 = 1))) AND isnotnull(d_date_sk#11452))
         :                                      :                    +- FileScan parquet [d_date_sk#11452,d_year#11458,d_moy#11460] Batched: true, DataFilters: [(((d_year#11458 = 2000) OR ((d_year#11458 = 1999) AND (d_moy#11460 = 12))) OR ((d_year#11458 = 2..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
         :                                      +- Sort [s_store_sk#11480 ASC NULLS FIRST], false, 0
         :                                         +- Exchange hashpartitioning(s_store_sk#11480, 200), ENSURE_REQUIREMENTS, [id=#145496]
         :                                            +- Filter ((isnotnull(s_store_sk#11480) AND isnotnull(s_store_name#11485)) AND isnotnull(s_company_name#11497))
         :                                               +- FileScan parquet [s_store_sk#11480,s_store_name#11485,s_company_name#11497] Batched: true, DataFilters: [isnotnull(s_store_sk#11480), isnotnull(s_store_name#11485), isnotnull(s_company_name#11497)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_name), IsNotNull(s_company_name)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
         +- Sort [i_category#11526 ASC NULLS FIRST, i_brand#11522 ASC NULLS FIRST, s_store_name#11592 ASC NULLS FIRST, s_company_name#11604 ASC NULLS FIRST, (rn#11620 - 1) ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(i_category#11526, i_brand#11522, s_store_name#11592, s_company_name#11604, (rn#11620 - 1), 200), ENSURE_REQUIREMENTS, [id=#145552]
               +- Project [i_category#11526, i_brand#11522, s_store_name#11592, s_company_name#11604, sum_sales#11362 AS sum_sales#11392, rn#11620]
                  +- Window [rank(d_year#11565, d_moy#11567) windowspecdefinition(i_category#11526, i_brand#11522, s_store_name#11592, s_company_name#11604, d_year#11565 ASC NULLS FIRST, d_moy#11567 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#11620], [i_category#11526, i_brand#11522, s_store_name#11592, s_company_name#11604], [d_year#11565 ASC NULLS FIRST, d_moy#11567 ASC NULLS FIRST]
                     +- Sort [i_category#11526 ASC NULLS FIRST, i_brand#11522 ASC NULLS FIRST, s_store_name#11592 ASC NULLS FIRST, s_company_name#11604 ASC NULLS FIRST, d_year#11565 ASC NULLS FIRST, d_moy#11567 ASC NULLS FIRST], false, 0
                        +- Exchange hashpartitioning(i_category#11526, i_brand#11522, s_store_name#11592, s_company_name#11604, 200), ENSURE_REQUIREMENTS, [id=#145546]
                           +- HashAggregate(keys=[i_category#11526, i_brand#11522, s_store_name#11592, s_company_name#11604, d_year#11565, d_moy#11567], functions=[sum(UnscaledValue(ss_sales_price#11549))], output=[i_category#11526, i_brand#11522, s_store_name#11592, s_company_name#11604, d_year#11565, d_moy#11567, sum_sales#11362])
                              +- Exchange hashpartitioning(i_category#11526, i_brand#11522, s_store_name#11592, s_company_name#11604, d_year#11565, d_moy#11567, 200), ENSURE_REQUIREMENTS, [id=#145543]
                                 +- HashAggregate(keys=[i_category#11526, i_brand#11522, s_store_name#11592, s_company_name#11604, d_year#11565, d_moy#11567], functions=[partial_sum(UnscaledValue(ss_sales_price#11549))], output=[i_category#11526, i_brand#11522, s_store_name#11592, s_company_name#11604, d_year#11565, d_moy#11567, sum#11626L])
                                    +- Project [i_brand#11522, i_category#11526, ss_sales_price#11549, d_year#11565, d_moy#11567, s_store_name#11592, s_company_name#11604]
                                       +- SortMergeJoin [ss_store_sk#11543], [s_store_sk#11587], Inner
                                          :- Sort [ss_store_sk#11543 ASC NULLS FIRST], false, 0
                                          :  +- Exchange hashpartitioning(ss_store_sk#11543, 200), ENSURE_REQUIREMENTS, [id=#145535]
                                          :     +- Project [i_brand#11522, i_category#11526, ss_store_sk#11543, ss_sales_price#11549, d_year#11565, d_moy#11567]
                                          :        +- SortMergeJoin [ss_sold_date_sk#11536], [d_date_sk#11559], Inner
                                          :           :- Sort [ss_sold_date_sk#11536 ASC NULLS FIRST], false, 0
                                          :           :  +- Exchange hashpartitioning(ss_sold_date_sk#11536, 200), ENSURE_REQUIREMENTS, [id=#145527]
                                          :           :     +- Project [i_brand#11522, i_category#11526, ss_sold_date_sk#11536, ss_store_sk#11543, ss_sales_price#11549]
                                          :           :        +- SortMergeJoin [i_item_sk#11514], [ss_item_sk#11538], Inner
                                          :           :           :- Sort [i_item_sk#11514 ASC NULLS FIRST], false, 0
                                          :           :           :  +- Exchange hashpartitioning(i_item_sk#11514, 200), ENSURE_REQUIREMENTS, [id=#145519]
                                          :           :           :     +- Filter ((isnotnull(i_item_sk#11514) AND isnotnull(i_category#11526)) AND isnotnull(i_brand#11522))
                                          :           :           :        +- FileScan parquet [i_item_sk#11514,i_brand#11522,i_category#11526] Batched: true, DataFilters: [isnotnull(i_item_sk#11514), isnotnull(i_category#11526), isnotnull(i_brand#11522)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
                                          :           :           +- Sort [ss_item_sk#11538 ASC NULLS FIRST], false, 0
                                          :           :              +- Exchange hashpartitioning(ss_item_sk#11538, 200), ENSURE_REQUIREMENTS, [id=#145520]
                                          :           :                 +- Filter ((isnotnull(ss_item_sk#11538) AND isnotnull(ss_sold_date_sk#11536)) AND isnotnull(ss_store_sk#11543))
                                          :           :                    +- FileScan parquet [ss_sold_date_sk#11536,ss_item_sk#11538,ss_store_sk#11543,ss_sales_price#11549] Batched: true, DataFilters: [isnotnull(ss_item_sk#11538), isnotnull(ss_sold_date_sk#11536), isnotnull(ss_store_sk#11543)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
                                          :           +- Sort [d_date_sk#11559 ASC NULLS FIRST], false, 0
                                          :              +- Exchange hashpartitioning(d_date_sk#11559, 200), ENSURE_REQUIREMENTS, [id=#145528]
                                          :                 +- Filter ((((d_year#11565 = 2000) OR ((d_year#11565 = 1999) AND (d_moy#11567 = 12))) OR ((d_year#11565 = 2001) AND (d_moy#11567 = 1))) AND isnotnull(d_date_sk#11559))
                                          :                    +- FileScan parquet [d_date_sk#11559,d_year#11565,d_moy#11567] Batched: true, DataFilters: [(((d_year#11565 = 2000) OR ((d_year#11565 = 1999) AND (d_moy#11567 = 12))) OR ((d_year#11565 = 2..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                                          +- Sort [s_store_sk#11587 ASC NULLS FIRST], false, 0
                                             +- Exchange hashpartitioning(s_store_sk#11587, 200), ENSURE_REQUIREMENTS, [id=#145536]
                                                +- Filter ((isnotnull(s_store_sk#11587) AND isnotnull(s_store_name#11592)) AND isnotnull(s_company_name#11604))
                                                   +- FileScan parquet [s_store_sk#11587,s_store_name#11592,s_company_name#11604] Batched: true, DataFilters: [isnotnull(s_store_sk#11587), isnotnull(s_store_name#11592), isnotnull(s_company_name#11604)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_name), IsNotNull(s_company_name)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
