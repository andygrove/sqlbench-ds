AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(22) HashAggregate(keys=[], functions=[sum(UnscaledValue(ws_ext_ship_cost#504)), sum(UnscaledValue(ws_net_profit#509)), count(distinct ws_order_number#493L)], output=[order count#850L, total shipping cost#851, total net profit#852])
   +- ShuffleQueryStage 10
      +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#1488]
         +- *(21) HashAggregate(keys=[], functions=[merge_sum(UnscaledValue(ws_ext_ship_cost#504)), merge_sum(UnscaledValue(ws_net_profit#509)), partial_count(distinct ws_order_number#493L)], output=[sum#897L, sum#899L, count#902L])
            +- *(21) HashAggregate(keys=[ws_order_number#493L], functions=[merge_sum(UnscaledValue(ws_ext_ship_cost#504)), merge_sum(UnscaledValue(ws_net_profit#509))], output=[ws_order_number#493L, sum#897L, sum#899L])
               +- AQEShuffleRead coalesced
                  +- ShuffleQueryStage 9
                     +- Exchange hashpartitioning(ws_order_number#493L, 200), ENSURE_REQUIREMENTS, [id=#1447]
                        +- *(20) HashAggregate(keys=[ws_order_number#493L], functions=[partial_sum(UnscaledValue(ws_ext_ship_cost#504)), partial_sum(UnscaledValue(ws_net_profit#509))], output=[ws_order_number#493L, sum#897L, sum#899L])
                           +- *(20) Project [ws_order_number#493L, ws_ext_ship_cost#504, ws_net_profit#509]
                              +- *(20) SortMergeJoin [ws_web_site_sk#489], [web_site_sk#798], Inner
                                 :- *(18) Sort [ws_web_site_sk#489 ASC NULLS FIRST], false, 0
                                 :  +- AQEShuffleRead coalesced
                                 :     +- ShuffleQueryStage 8
                                 :        +- Exchange hashpartitioning(ws_web_site_sk#489, 200), ENSURE_REQUIREMENTS, [id=#1349]
                                 :           +- *(17) Project [ws_web_site_sk#489, ws_order_number#493L, ws_ext_ship_cost#504, ws_net_profit#509]
                                 :              +- *(17) SortMergeJoin [ws_ship_addr_sk#487], [ca_address_sk#62], Inner
                                 :                 :- *(15) Sort [ws_ship_addr_sk#487 ASC NULLS FIRST], false, 0
                                 :                 :  +- AQEShuffleRead coalesced
                                 :                 :     +- ShuffleQueryStage 7
                                 :                 :        +- Exchange hashpartitioning(ws_ship_addr_sk#487, 200), ENSURE_REQUIREMENTS, [id=#1224]
                                 :                 :           +- *(14) Project [ws_ship_addr_sk#487, ws_web_site_sk#489, ws_order_number#493L, ws_ext_ship_cost#504, ws_net_profit#509]
                                 :                 :              +- *(14) SortMergeJoin [ws_ship_date_sk#478], [d_date_sk#612], Inner
                                 :                 :                 :- *(12) Sort [ws_ship_date_sk#478 ASC NULLS FIRST], false, 0
                                 :                 :                 :  +- AQEShuffleRead coalesced
                                 :                 :                 :     +- ShuffleQueryStage 6
                                 :                 :                 :        +- Exchange hashpartitioning(ws_ship_date_sk#478, 200), ENSURE_REQUIREMENTS, [id=#864]
                                 :                 :                 :           +- *(11) SortMergeJoin [ws_order_number#493L], [wr_order_number#311L], LeftAnti
                                 :                 :                 :              :- *(9) Project [ws_ship_date_sk#478, ws_ship_addr_sk#487, ws_web_site_sk#489, ws_order_number#493L, ws_ext_ship_cost#504, ws_net_profit#509]
                                 :                 :                 :              :  +- *(9) SortMergeJoin [ws_order_number#493L], [ws_order_number#872L], LeftSemi, NOT (ws_warehouse_sk#491 = ws_warehouse_sk#870)
                                 :                 :                 :              :     :- *(7) Sort [ws_order_number#493L ASC NULLS FIRST], false, 0
                                 :                 :                 :              :     :  +- AQEShuffleRead coalesced
                                 :                 :                 :              :     :     +- ShuffleQueryStage 0
                                 :                 :                 :              :     :        +- Exchange hashpartitioning(ws_order_number#493L, 200), ENSURE_REQUIREMENTS, [id=#308]
                                 :                 :                 :              :     :           +- *(1) Filter ((isnotnull(ws_ship_date_sk#478) AND isnotnull(ws_ship_addr_sk#487)) AND isnotnull(ws_web_site_sk#489))
                                 :                 :                 :              :     :              +- *(1) ColumnarToRow
                                 :                 :                 :              :     :                 +- FileScan parquet [ws_ship_date_sk#478,ws_ship_addr_sk#487,ws_web_site_sk#489,ws_warehouse_sk#491,ws_order_number#493L,ws_ext_ship_cost#504,ws_net_profit#509] Batched: true, DataFilters: [isnotnull(ws_ship_date_sk#478), isnotnull(ws_ship_addr_sk#487), isnotnull(ws_web_site_sk#489)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_ship_date_sk), IsNotNull(ws_ship_addr_sk), IsNotNull(ws_web_site_sk)], ReadSchema: struct<ws_ship_date_sk:int,ws_ship_addr_sk:int,ws_web_site_sk:int,ws_warehouse_sk:int,ws_order_nu...
                                 :                 :                 :              :     +- *(8) Sort [ws_order_number#872L ASC NULLS FIRST], false, 0
                                 :                 :                 :              :        +- AQEShuffleRead coalesced
                                 :                 :                 :              :           +- ShuffleQueryStage 1
                                 :                 :                 :              :              +- Exchange hashpartitioning(ws_order_number#872L, 200), ENSURE_REQUIREMENTS, [id=#323]
                                 :                 :                 :              :                 +- *(2) ColumnarToRow
                                 :                 :                 :              :                    +- FileScan parquet [ws_warehouse_sk#870,ws_order_number#872L] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<ws_warehouse_sk:int,ws_order_number:bigint>
                                 :                 :                 :              +- *(10) Sort [wr_order_number#311L ASC NULLS FIRST], false, 0
                                 :                 :                 :                 +- AQEShuffleRead coalesced
                                 :                 :                 :                    +- ShuffleQueryStage 2
                                 :                 :                 :                       +- Exchange hashpartitioning(wr_order_number#311L, 200), ENSURE_REQUIREMENTS, [id=#338]
                                 :                 :                 :                          +- *(3) ColumnarToRow
                                 :                 :                 :                             +- FileScan parquet [wr_order_number#311L] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_returns.parquet], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<wr_order_number:bigint>
                                 :                 :                 +- *(13) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                                 :                 :                    +- AQEShuffleRead coalesced
                                 :                 :                       +- ShuffleQueryStage 3
                                 :                 :                          +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#358]
                                 :                 :                             +- *(4) Project [d_date_sk#612]
                                 :                 :                                +- *(4) Filter (((isnotnull(d_date#614) AND (d_date#614 >= 2000-04-01)) AND (d_date#614 <= 2000-05-31)) AND isnotnull(d_date_sk#612))
                                 :                 :                                   +- *(4) ColumnarToRow
                                 :                 :                                      +- FileScan parquet [d_date_sk#612,d_date#614] Batched: true, DataFilters: [isnotnull(d_date#614), (d_date#614 >= 2000-04-01), (d_date#614 <= 2000-05-31), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-04-01), LessThanOrEqual(d_date,2000-05-31), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                                 :                 +- *(16) Sort [ca_address_sk#62 ASC NULLS FIRST], false, 0
                                 :                    +- AQEShuffleRead coalesced
                                 :                       +- ShuffleQueryStage 4
                                 :                          +- Exchange hashpartitioning(ca_address_sk#62, 200), ENSURE_REQUIREMENTS, [id=#383]
                                 :                             +- *(5) Project [ca_address_sk#62]
                                 :                                +- *(5) Filter ((isnotnull(ca_state#70) AND (ca_state#70 = LA)) AND isnotnull(ca_address_sk#62))
                                 :                                   +- *(5) ColumnarToRow
                                 :                                      +- FileScan parquet [ca_address_sk#62,ca_state#70] Batched: true, DataFilters: [isnotnull(ca_state#70), (ca_state#70 = LA), isnotnull(ca_address_sk#62)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer_address.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,LA), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>
                                 +- *(19) Sort [web_site_sk#798 ASC NULLS FIRST], false, 0
                                    +- AQEShuffleRead coalesced
                                       +- ShuffleQueryStage 5
                                          +- Exchange hashpartitioning(web_site_sk#798, 200), ENSURE_REQUIREMENTS, [id=#408]
                                             +- *(6) Project [web_site_sk#798]
                                                +- *(6) Filter ((isnotnull(web_company_name#812) AND (web_company_name#812 = pri)) AND isnotnull(web_site_sk#798))
                                                   +- *(6) ColumnarToRow
                                                      +- FileScan parquet [web_site_sk#798,web_company_name#812] Batched: true, DataFilters: [isnotnull(web_company_name#812), (web_company_name#812 = pri), isnotnull(web_site_sk#798)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_site.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(web_company_name), EqualTo(web_company_name,pri), IsNotNull(web_site_sk)], ReadSchema: struct<web_site_sk:int,web_company_name:string>
+- == Initial Plan ==
   HashAggregate(keys=[], functions=[sum(UnscaledValue(ws_ext_ship_cost#504)), sum(UnscaledValue(ws_net_profit#509)), count(distinct ws_order_number#493L)], output=[order count#850L, total shipping cost#851, total net profit#852])
   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#216]
      +- HashAggregate(keys=[], functions=[merge_sum(UnscaledValue(ws_ext_ship_cost#504)), merge_sum(UnscaledValue(ws_net_profit#509)), partial_count(distinct ws_order_number#493L)], output=[sum#897L, sum#899L, count#902L])
         +- HashAggregate(keys=[ws_order_number#493L], functions=[merge_sum(UnscaledValue(ws_ext_ship_cost#504)), merge_sum(UnscaledValue(ws_net_profit#509))], output=[ws_order_number#493L, sum#897L, sum#899L])
            +- Exchange hashpartitioning(ws_order_number#493L, 200), ENSURE_REQUIREMENTS, [id=#212]
               +- HashAggregate(keys=[ws_order_number#493L], functions=[partial_sum(UnscaledValue(ws_ext_ship_cost#504)), partial_sum(UnscaledValue(ws_net_profit#509))], output=[ws_order_number#493L, sum#897L, sum#899L])
                  +- Project [ws_order_number#493L, ws_ext_ship_cost#504, ws_net_profit#509]
                     +- SortMergeJoin [ws_web_site_sk#489], [web_site_sk#798], Inner
                        :- Sort [ws_web_site_sk#489 ASC NULLS FIRST], false, 0
                        :  +- Exchange hashpartitioning(ws_web_site_sk#489, 200), ENSURE_REQUIREMENTS, [id=#204]
                        :     +- Project [ws_web_site_sk#489, ws_order_number#493L, ws_ext_ship_cost#504, ws_net_profit#509]
                        :        +- SortMergeJoin [ws_ship_addr_sk#487], [ca_address_sk#62], Inner
                        :           :- Sort [ws_ship_addr_sk#487 ASC NULLS FIRST], false, 0
                        :           :  +- Exchange hashpartitioning(ws_ship_addr_sk#487, 200), ENSURE_REQUIREMENTS, [id=#196]
                        :           :     +- Project [ws_ship_addr_sk#487, ws_web_site_sk#489, ws_order_number#493L, ws_ext_ship_cost#504, ws_net_profit#509]
                        :           :        +- SortMergeJoin [ws_ship_date_sk#478], [d_date_sk#612], Inner
                        :           :           :- Sort [ws_ship_date_sk#478 ASC NULLS FIRST], false, 0
                        :           :           :  +- Exchange hashpartitioning(ws_ship_date_sk#478, 200), ENSURE_REQUIREMENTS, [id=#188]
                        :           :           :     +- SortMergeJoin [ws_order_number#493L], [wr_order_number#311L], LeftAnti
                        :           :           :        :- Project [ws_ship_date_sk#478, ws_ship_addr_sk#487, ws_web_site_sk#489, ws_order_number#493L, ws_ext_ship_cost#504, ws_net_profit#509]
                        :           :           :        :  +- SortMergeJoin [ws_order_number#493L], [ws_order_number#872L], LeftSemi, NOT (ws_warehouse_sk#491 = ws_warehouse_sk#870)
                        :           :           :        :     :- Sort [ws_order_number#493L ASC NULLS FIRST], false, 0
                        :           :           :        :     :  +- Exchange hashpartitioning(ws_order_number#493L, 200), ENSURE_REQUIREMENTS, [id=#175]
                        :           :           :        :     :     +- Filter ((isnotnull(ws_ship_date_sk#478) AND isnotnull(ws_ship_addr_sk#487)) AND isnotnull(ws_web_site_sk#489))
                        :           :           :        :     :        +- FileScan parquet [ws_ship_date_sk#478,ws_ship_addr_sk#487,ws_web_site_sk#489,ws_warehouse_sk#491,ws_order_number#493L,ws_ext_ship_cost#504,ws_net_profit#509] Batched: true, DataFilters: [isnotnull(ws_ship_date_sk#478), isnotnull(ws_ship_addr_sk#487), isnotnull(ws_web_site_sk#489)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_ship_date_sk), IsNotNull(ws_ship_addr_sk), IsNotNull(ws_web_site_sk)], ReadSchema: struct<ws_ship_date_sk:int,ws_ship_addr_sk:int,ws_web_site_sk:int,ws_warehouse_sk:int,ws_order_nu...
                        :           :           :        :     +- Sort [ws_order_number#872L ASC NULLS FIRST], false, 0
                        :           :           :        :        +- Exchange hashpartitioning(ws_order_number#872L, 200), ENSURE_REQUIREMENTS, [id=#176]
                        :           :           :        :           +- FileScan parquet [ws_warehouse_sk#870,ws_order_number#872L] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<ws_warehouse_sk:int,ws_order_number:bigint>
                        :           :           :        +- Sort [wr_order_number#311L ASC NULLS FIRST], false, 0
                        :           :           :           +- Exchange hashpartitioning(wr_order_number#311L, 200), ENSURE_REQUIREMENTS, [id=#183]
                        :           :           :              +- FileScan parquet [wr_order_number#311L] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_returns.parquet], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<wr_order_number:bigint>
                        :           :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                        :           :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#189]
                        :           :                 +- Project [d_date_sk#612]
                        :           :                    +- Filter (((isnotnull(d_date#614) AND (d_date#614 >= 2000-04-01)) AND (d_date#614 <= 2000-05-31)) AND isnotnull(d_date_sk#612))
                        :           :                       +- FileScan parquet [d_date_sk#612,d_date#614] Batched: true, DataFilters: [isnotnull(d_date#614), (d_date#614 >= 2000-04-01), (d_date#614 <= 2000-05-31), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-04-01), LessThanOrEqual(d_date,2000-05-31), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                        :           +- Sort [ca_address_sk#62 ASC NULLS FIRST], false, 0
                        :              +- Exchange hashpartitioning(ca_address_sk#62, 200), ENSURE_REQUIREMENTS, [id=#197]
                        :                 +- Project [ca_address_sk#62]
                        :                    +- Filter ((isnotnull(ca_state#70) AND (ca_state#70 = LA)) AND isnotnull(ca_address_sk#62))
                        :                       +- FileScan parquet [ca_address_sk#62,ca_state#70] Batched: true, DataFilters: [isnotnull(ca_state#70), (ca_state#70 = LA), isnotnull(ca_address_sk#62)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer_address.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,LA), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>
                        +- Sort [web_site_sk#798 ASC NULLS FIRST], false, 0
                           +- Exchange hashpartitioning(web_site_sk#798, 200), ENSURE_REQUIREMENTS, [id=#205]
                              +- Project [web_site_sk#798]
                                 +- Filter ((isnotnull(web_company_name#812) AND (web_company_name#812 = pri)) AND isnotnull(web_site_sk#798))
                                    +- FileScan parquet [web_site_sk#798,web_company_name#812] Batched: true, DataFilters: [isnotnull(web_company_name#812), (web_company_name#812 = pri), isnotnull(web_site_sk#798)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_site.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(web_company_name), EqualTo(web_company_name,pri), IsNotNull(web_site_sk)], ReadSchema: struct<web_site_sk:int,web_company_name:string>
