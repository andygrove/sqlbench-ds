AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[lochierarchy#7725 DESC NULLS LAST,CASE WHEN (lochierarchy#7725 = 0) THEN i_category#7736 END ASC NULLS FIRST,rank_within_parent#7726 ASC NULLS FIRST], output=[gross_margin#7724,i_category#7736,i_class#7737,lochierarchy#7725,rank_within_parent#7726])
   +- *(16) Project [gross_margin#7724, i_category#7736, i_class#7737, lochierarchy#7725, rank_within_parent#7726]
      +- Window [rank(_w3#7752) windowspecdefinition(_w1#7750, _w2#7751, _w3#7752 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#7726], [_w1#7750, _w2#7751], [_w3#7752 ASC NULLS FIRST]
         +- *(15) Sort [_w1#7750 ASC NULLS FIRST, _w2#7751 ASC NULLS FIRST, _w3#7752 ASC NULLS FIRST], false, 0
            +- AQEShuffleRead coalesced
               +- ShuffleQueryStage 7
                  +- Exchange hashpartitioning(_w1#7750, _w2#7751, 200), ENSURE_REQUIREMENTS, [id=#58021]
                     +- *(14) HashAggregate(keys=[i_category#7736, i_class#7737, spark_grouping_id#7735L], functions=[sum(UnscaledValue(ss_net_profit#274)), sum(UnscaledValue(ss_ext_sales_price#267))], output=[gross_margin#7724, i_category#7736, i_class#7737, lochierarchy#7725, _w1#7750, _w2#7751, _w3#7752])
                        +- AQEShuffleRead coalesced
                           +- ShuffleQueryStage 6
                              +- Exchange hashpartitioning(i_category#7736, i_class#7737, spark_grouping_id#7735L, 200), ENSURE_REQUIREMENTS, [id=#57966]
                                 +- *(13) HashAggregate(keys=[i_category#7736, i_class#7737, spark_grouping_id#7735L], functions=[partial_sum(UnscaledValue(ss_net_profit#274)), partial_sum(UnscaledValue(ss_ext_sales_price#267))], output=[i_category#7736, i_class#7737, spark_grouping_id#7735L, sum#7766L, sum#7767L])
                                    +- *(13) Expand [[ss_ext_sales_price#267, ss_net_profit#274, i_category#680, i_class#678, 0], [ss_ext_sales_price#267, ss_net_profit#274, i_category#680, null, 1], [ss_ext_sales_price#267, ss_net_profit#274, null, null, 3]], [ss_ext_sales_price#267, ss_net_profit#274, i_category#7736, i_class#7737, spark_grouping_id#7735L]
                                       +- *(13) Project [ss_ext_sales_price#267, ss_net_profit#274, i_category#680, i_class#678]
                                          +- *(13) SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
                                             :- *(11) Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
                                             :  +- AQEShuffleRead coalesced
                                             :     +- ShuffleQueryStage 5
                                             :        +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#57854]
                                             :           +- *(10) Project [ss_store_sk#259, ss_ext_sales_price#267, ss_net_profit#274, i_class#678, i_category#680]
                                             :              +- *(10) SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
                                             :                 :- *(8) Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                                             :                 :  +- AQEShuffleRead coalesced
                                             :                 :     +- ShuffleQueryStage 4
                                             :                 :        +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#57719]
                                             :                 :           +- *(7) Project [ss_item_sk#254, ss_store_sk#259, ss_ext_sales_price#267, ss_net_profit#274]
                                             :                 :              +- *(7) SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
                                             :                 :                 :- *(5) Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                                             :                 :                 :  +- AQEShuffleRead coalesced
                                             :                 :                 :     +- ShuffleQueryStage 0
                                             :                 :                 :        +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#57291]
                                             :                 :                 :           +- *(1) Filter ((isnotnull(ss_sold_date_sk#252) AND isnotnull(ss_item_sk#254)) AND isnotnull(ss_store_sk#259))
                                             :                 :                 :              +- *(1) ColumnarToRow
                                             :                 :                 :                 +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_store_sk#259,ss_ext_sales_price#267,ss_net_profit#274] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_item_sk#254), isnotnull(ss_store_sk#259)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_...
                                             :                 :                 +- *(6) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                                             :                 :                    +- AQEShuffleRead coalesced
                                             :                 :                       +- ShuffleQueryStage 1
                                             :                 :                          +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#57310]
                                             :                 :                             +- *(2) Project [d_date_sk#612]
                                             :                 :                                +- *(2) Filter ((isnotnull(d_year#618) AND (d_year#618 = 2000)) AND isnotnull(d_date_sk#612))
                                             :                 :                                   +- *(2) ColumnarToRow
                                             :                 :                                      +- FileScan parquet [d_date_sk#612,d_year#618] Batched: true, DataFilters: [isnotnull(d_year#618), (d_year#618 = 2000), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                             :                 +- *(9) Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                                             :                    +- AQEShuffleRead coalesced
                                             :                       +- ShuffleQueryStage 2
                                             :                          +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#57333]
                                             :                             +- *(3) Filter isnotnull(i_item_sk#668)
                                             :                                +- *(3) ColumnarToRow
                                             :                                   +- FileScan parquet [i_item_sk#668,i_class#678,i_category#680] Batched: true, DataFilters: [isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>
                                             +- *(12) Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
                                                +- AQEShuffleRead coalesced
                                                   +- ShuffleQueryStage 3
                                                      +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#57356]
                                                         +- *(4) Project [s_store_sk#712]
                                                            +- *(4) Filter (s_state#736 IN (MO,LA,GA,MI,SC,OH,SD,AL) AND isnotnull(s_store_sk#712))
                                                               +- *(4) ColumnarToRow
                                                                  +- FileScan parquet [s_store_sk#712,s_state#736] Batched: true, DataFilters: [s_state#736 IN (MO,LA,GA,MI,SC,OH,SD,AL), isnotnull(s_store_sk#712)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [In(s_state, [AL,GA,LA,MI,MO,OH,SC,SD]), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_state:string>
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[lochierarchy#7725 DESC NULLS LAST,CASE WHEN (lochierarchy#7725 = 0) THEN i_category#7736 END ASC NULLS FIRST,rank_within_parent#7726 ASC NULLS FIRST], output=[gross_margin#7724,i_category#7736,i_class#7737,lochierarchy#7725,rank_within_parent#7726])
   +- Project [gross_margin#7724, i_category#7736, i_class#7737, lochierarchy#7725, rank_within_parent#7726]
      +- Window [rank(_w3#7752) windowspecdefinition(_w1#7750, _w2#7751, _w3#7752 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#7726], [_w1#7750, _w2#7751], [_w3#7752 ASC NULLS FIRST]
         +- Sort [_w1#7750 ASC NULLS FIRST, _w2#7751 ASC NULLS FIRST, _w3#7752 ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(_w1#7750, _w2#7751, 200), ENSURE_REQUIREMENTS, [id=#57217]
               +- HashAggregate(keys=[i_category#7736, i_class#7737, spark_grouping_id#7735L], functions=[sum(UnscaledValue(ss_net_profit#274)), sum(UnscaledValue(ss_ext_sales_price#267))], output=[gross_margin#7724, i_category#7736, i_class#7737, lochierarchy#7725, _w1#7750, _w2#7751, _w3#7752])
                  +- Exchange hashpartitioning(i_category#7736, i_class#7737, spark_grouping_id#7735L, 200), ENSURE_REQUIREMENTS, [id=#57214]
                     +- HashAggregate(keys=[i_category#7736, i_class#7737, spark_grouping_id#7735L], functions=[partial_sum(UnscaledValue(ss_net_profit#274)), partial_sum(UnscaledValue(ss_ext_sales_price#267))], output=[i_category#7736, i_class#7737, spark_grouping_id#7735L, sum#7766L, sum#7767L])
                        +- Expand [[ss_ext_sales_price#267, ss_net_profit#274, i_category#680, i_class#678, 0], [ss_ext_sales_price#267, ss_net_profit#274, i_category#680, null, 1], [ss_ext_sales_price#267, ss_net_profit#274, null, null, 3]], [ss_ext_sales_price#267, ss_net_profit#274, i_category#7736, i_class#7737, spark_grouping_id#7735L]
                           +- Project [ss_ext_sales_price#267, ss_net_profit#274, i_category#680, i_class#678]
                              +- SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
                                 :- Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
                                 :  +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#57205]
                                 :     +- Project [ss_store_sk#259, ss_ext_sales_price#267, ss_net_profit#274, i_class#678, i_category#680]
                                 :        +- SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
                                 :           :- Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                                 :           :  +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#57197]
                                 :           :     +- Project [ss_item_sk#254, ss_store_sk#259, ss_ext_sales_price#267, ss_net_profit#274]
                                 :           :        +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
                                 :           :           :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                                 :           :           :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#57189]
                                 :           :           :     +- Filter ((isnotnull(ss_sold_date_sk#252) AND isnotnull(ss_item_sk#254)) AND isnotnull(ss_store_sk#259))
                                 :           :           :        +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_store_sk#259,ss_ext_sales_price#267,ss_net_profit#274] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_item_sk#254), isnotnull(ss_store_sk#259)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_...
                                 :           :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                                 :           :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#57190]
                                 :           :                 +- Project [d_date_sk#612]
                                 :           :                    +- Filter ((isnotnull(d_year#618) AND (d_year#618 = 2000)) AND isnotnull(d_date_sk#612))
                                 :           :                       +- FileScan parquet [d_date_sk#612,d_year#618] Batched: true, DataFilters: [isnotnull(d_year#618), (d_year#618 = 2000), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                 :           +- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                                 :              +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#57198]
                                 :                 +- Filter isnotnull(i_item_sk#668)
                                 :                    +- FileScan parquet [i_item_sk#668,i_class#678,i_category#680] Batched: true, DataFilters: [isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>
                                 +- Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
                                    +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#57206]
                                       +- Project [s_store_sk#712]
                                          +- Filter (s_state#736 IN (MO,LA,GA,MI,SC,OH,SD,AL) AND isnotnull(s_store_sk#712))
                                             +- FileScan parquet [s_store_sk#712,s_state#736] Batched: true, DataFilters: [s_state#736 IN (MO,LA,GA,MI,SC,OH,SD,AL), isnotnull(s_store_sk#712)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [In(s_state, [AL,GA,LA,MI,MO,OH,SC,SD]), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_state:string>
