AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(22) HashAggregate(keys=[], functions=[sum(UnscaledValue(cs_ext_ship_cost#572)), sum(UnscaledValue(cs_net_profit#577)), count(distinct cs_order_number#561L)], output=[order count#850L, total shipping cost#851, total net profit#852])
   +- ShuffleQueryStage 10
      +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#1662]
         +- *(21) HashAggregate(keys=[], functions=[merge_sum(UnscaledValue(cs_ext_ship_cost#572)), merge_sum(UnscaledValue(cs_net_profit#577)), partial_count(distinct cs_order_number#561L)], output=[sum#897L, sum#899L, count#902L])
            +- *(21) HashAggregate(keys=[cs_order_number#561L], functions=[merge_sum(UnscaledValue(cs_ext_ship_cost#572)), merge_sum(UnscaledValue(cs_net_profit#577))], output=[cs_order_number#561L, sum#897L, sum#899L])
               +- AQEShuffleRead coalesced
                  +- ShuffleQueryStage 9
                     +- Exchange hashpartitioning(cs_order_number#561L, 200), ENSURE_REQUIREMENTS, [id=#1621]
                        +- *(20) HashAggregate(keys=[cs_order_number#561L], functions=[partial_sum(UnscaledValue(cs_ext_ship_cost#572)), partial_sum(UnscaledValue(cs_net_profit#577))], output=[cs_order_number#561L, sum#897L, sum#899L])
                           +- *(20) Project [cs_order_number#561L, cs_ext_ship_cost#572, cs_net_profit#577]
                              +- *(20) SortMergeJoin [cs_call_center_sk#555], [cc_call_center_sk#0], Inner
                                 :- *(18) Sort [cs_call_center_sk#555 ASC NULLS FIRST], false, 0
                                 :  +- AQEShuffleRead coalesced
                                 :     +- ShuffleQueryStage 8
                                 :        +- Exchange hashpartitioning(cs_call_center_sk#555, 200), ENSURE_REQUIREMENTS, [id=#1523]
                                 :           +- *(17) Project [cs_call_center_sk#555, cs_order_number#561L, cs_ext_ship_cost#572, cs_net_profit#577]
                                 :              +- *(17) SortMergeJoin [cs_ship_addr_sk#554], [ca_address_sk#62], Inner
                                 :                 :- *(15) Sort [cs_ship_addr_sk#554 ASC NULLS FIRST], false, 0
                                 :                 :  +- AQEShuffleRead coalesced
                                 :                 :     +- ShuffleQueryStage 7
                                 :                 :        +- Exchange hashpartitioning(cs_ship_addr_sk#554, 200), ENSURE_REQUIREMENTS, [id=#1398]
                                 :                 :           +- *(14) Project [cs_ship_addr_sk#554, cs_call_center_sk#555, cs_order_number#561L, cs_ext_ship_cost#572, cs_net_profit#577]
                                 :                 :              +- *(14) SortMergeJoin [cs_ship_date_sk#546], [d_date_sk#612], Inner
                                 :                 :                 :- *(12) Sort [cs_ship_date_sk#546 ASC NULLS FIRST], false, 0
                                 :                 :                 :  +- AQEShuffleRead coalesced
                                 :                 :                 :     +- ShuffleQueryStage 6
                                 :                 :                 :        +- Exchange hashpartitioning(cs_ship_date_sk#546, 200), ENSURE_REQUIREMENTS, [id=#1136]
                                 :                 :                 :           +- *(11) SortMergeJoin [cs_order_number#561L], [cr_order_number#362L], LeftAnti
                                 :                 :                 :              :- *(9) Project [cs_ship_date_sk#546, cs_ship_addr_sk#554, cs_call_center_sk#555, cs_order_number#561L, cs_ext_ship_cost#572, cs_net_profit#577]
                                 :                 :                 :              :  +- *(9) SortMergeJoin [cs_order_number#561L], [cs_order_number#872L], LeftSemi, NOT (cs_warehouse_sk#558 = cs_warehouse_sk#869)
                                 :                 :                 :              :     :- *(7) Sort [cs_order_number#561L ASC NULLS FIRST], false, 0
                                 :                 :                 :              :     :  +- AQEShuffleRead coalesced
                                 :                 :                 :              :     :     +- ShuffleQueryStage 0
                                 :                 :                 :              :     :        +- Exchange hashpartitioning(cs_order_number#561L, 200), ENSURE_REQUIREMENTS, [id=#308]
                                 :                 :                 :              :     :           +- *(1) Filter ((isnotnull(cs_ship_date_sk#546) AND isnotnull(cs_ship_addr_sk#554)) AND isnotnull(cs_call_center_sk#555))
                                 :                 :                 :              :     :              +- *(1) ColumnarToRow
                                 :                 :                 :              :     :                 +- FileScan parquet [cs_ship_date_sk#546,cs_ship_addr_sk#554,cs_call_center_sk#555,cs_warehouse_sk#558,cs_order_number#561L,cs_ext_ship_cost#572,cs_net_profit#577] Batched: true, DataFilters: [isnotnull(cs_ship_date_sk#546), isnotnull(cs_ship_addr_sk#554), isnotnull(cs_call_center_sk#555)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_ship_date_sk), IsNotNull(cs_ship_addr_sk), IsNotNull(cs_call_center_sk)], ReadSchema: struct<cs_ship_date_sk:int,cs_ship_addr_sk:int,cs_call_center_sk:int,cs_warehouse_sk:int,cs_order...
                                 :                 :                 :              :     +- *(8) Sort [cs_order_number#872L ASC NULLS FIRST], false, 0
                                 :                 :                 :              :        +- AQEShuffleRead coalesced
                                 :                 :                 :              :           +- ShuffleQueryStage 1
                                 :                 :                 :              :              +- Exchange hashpartitioning(cs_order_number#872L, 200), ENSURE_REQUIREMENTS, [id=#323]
                                 :                 :                 :              :                 +- *(2) ColumnarToRow
                                 :                 :                 :              :                    +- FileScan parquet [cs_warehouse_sk#869,cs_order_number#872L] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<cs_warehouse_sk:int,cs_order_number:bigint>
                                 :                 :                 :              +- *(10) Sort [cr_order_number#362L ASC NULLS FIRST], false, 0
                                 :                 :                 :                 +- AQEShuffleRead coalesced
                                 :                 :                 :                    +- ShuffleQueryStage 2
                                 :                 :                 :                       +- Exchange hashpartitioning(cr_order_number#362L, 200), ENSURE_REQUIREMENTS, [id=#338]
                                 :                 :                 :                          +- *(3) ColumnarToRow
                                 :                 :                 :                             +- FileScan parquet [cr_order_number#362L] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_returns.parquet], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<cr_order_number:bigint>
                                 :                 :                 +- *(13) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                                 :                 :                    +- AQEShuffleRead coalesced
                                 :                 :                       +- ShuffleQueryStage 3
                                 :                 :                          +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#358]
                                 :                 :                             +- *(4) Project [d_date_sk#612]
                                 :                 :                                +- *(4) Filter (((isnotnull(d_date#614) AND (d_date#614 >= 2001-04-01)) AND (d_date#614 <= 2001-05-31)) AND isnotnull(d_date_sk#612))
                                 :                 :                                   +- *(4) ColumnarToRow
                                 :                 :                                      +- FileScan parquet [d_date_sk#612,d_date#614] Batched: true, DataFilters: [isnotnull(d_date#614), (d_date#614 >= 2001-04-01), (d_date#614 <= 2001-05-31), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2001-04-01), LessThanOrEqual(d_date,2001-05-31), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                                 :                 +- *(16) Sort [ca_address_sk#62 ASC NULLS FIRST], false, 0
                                 :                    +- AQEShuffleRead coalesced
                                 :                       +- ShuffleQueryStage 4
                                 :                          +- Exchange hashpartitioning(ca_address_sk#62, 200), ENSURE_REQUIREMENTS, [id=#383]
                                 :                             +- *(5) Project [ca_address_sk#62]
                                 :                                +- *(5) Filter ((isnotnull(ca_state#70) AND (ca_state#70 = TX)) AND isnotnull(ca_address_sk#62))
                                 :                                   +- *(5) ColumnarToRow
                                 :                                      +- FileScan parquet [ca_address_sk#62,ca_state#70] Batched: true, DataFilters: [isnotnull(ca_state#70), (ca_state#70 = TX), isnotnull(ca_address_sk#62)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer_address.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,TX), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>
                                 +- *(19) Sort [cc_call_center_sk#0 ASC NULLS FIRST], false, 0
                                    +- AQEShuffleRead coalesced
                                       +- ShuffleQueryStage 5
                                          +- Exchange hashpartitioning(cc_call_center_sk#0, 200), ENSURE_REQUIREMENTS, [id=#408]
                                             +- *(6) Project [cc_call_center_sk#0]
                                                +- *(6) Filter (cc_county#25 IN (Franklin Parish,Walker County,Ziebach County,Fairfield County,Daviess County) AND isnotnull(cc_call_center_sk#0))
                                                   +- *(6) ColumnarToRow
                                                      +- FileScan parquet [cc_call_center_sk#0,cc_county#25] Batched: true, DataFilters: [cc_county#25 IN (Franklin Parish,Walker County,Ziebach County,Fairfield County,Daviess County), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/call_center.parquet], PartitionFilters: [], PushedFilters: [In(cc_county, [Daviess County,Fairfield County,Franklin Parish,Walker County,Ziebach County]), I..., ReadSchema: struct<cc_call_center_sk:int,cc_county:string>
+- == Initial Plan ==
   HashAggregate(keys=[], functions=[sum(UnscaledValue(cs_ext_ship_cost#572)), sum(UnscaledValue(cs_net_profit#577)), count(distinct cs_order_number#561L)], output=[order count#850L, total shipping cost#851, total net profit#852])
   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#216]
      +- HashAggregate(keys=[], functions=[merge_sum(UnscaledValue(cs_ext_ship_cost#572)), merge_sum(UnscaledValue(cs_net_profit#577)), partial_count(distinct cs_order_number#561L)], output=[sum#897L, sum#899L, count#902L])
         +- HashAggregate(keys=[cs_order_number#561L], functions=[merge_sum(UnscaledValue(cs_ext_ship_cost#572)), merge_sum(UnscaledValue(cs_net_profit#577))], output=[cs_order_number#561L, sum#897L, sum#899L])
            +- Exchange hashpartitioning(cs_order_number#561L, 200), ENSURE_REQUIREMENTS, [id=#212]
               +- HashAggregate(keys=[cs_order_number#561L], functions=[partial_sum(UnscaledValue(cs_ext_ship_cost#572)), partial_sum(UnscaledValue(cs_net_profit#577))], output=[cs_order_number#561L, sum#897L, sum#899L])
                  +- Project [cs_order_number#561L, cs_ext_ship_cost#572, cs_net_profit#577]
                     +- SortMergeJoin [cs_call_center_sk#555], [cc_call_center_sk#0], Inner
                        :- Sort [cs_call_center_sk#555 ASC NULLS FIRST], false, 0
                        :  +- Exchange hashpartitioning(cs_call_center_sk#555, 200), ENSURE_REQUIREMENTS, [id=#204]
                        :     +- Project [cs_call_center_sk#555, cs_order_number#561L, cs_ext_ship_cost#572, cs_net_profit#577]
                        :        +- SortMergeJoin [cs_ship_addr_sk#554], [ca_address_sk#62], Inner
                        :           :- Sort [cs_ship_addr_sk#554 ASC NULLS FIRST], false, 0
                        :           :  +- Exchange hashpartitioning(cs_ship_addr_sk#554, 200), ENSURE_REQUIREMENTS, [id=#196]
                        :           :     +- Project [cs_ship_addr_sk#554, cs_call_center_sk#555, cs_order_number#561L, cs_ext_ship_cost#572, cs_net_profit#577]
                        :           :        +- SortMergeJoin [cs_ship_date_sk#546], [d_date_sk#612], Inner
                        :           :           :- Sort [cs_ship_date_sk#546 ASC NULLS FIRST], false, 0
                        :           :           :  +- Exchange hashpartitioning(cs_ship_date_sk#546, 200), ENSURE_REQUIREMENTS, [id=#188]
                        :           :           :     +- SortMergeJoin [cs_order_number#561L], [cr_order_number#362L], LeftAnti
                        :           :           :        :- Project [cs_ship_date_sk#546, cs_ship_addr_sk#554, cs_call_center_sk#555, cs_order_number#561L, cs_ext_ship_cost#572, cs_net_profit#577]
                        :           :           :        :  +- SortMergeJoin [cs_order_number#561L], [cs_order_number#872L], LeftSemi, NOT (cs_warehouse_sk#558 = cs_warehouse_sk#869)
                        :           :           :        :     :- Sort [cs_order_number#561L ASC NULLS FIRST], false, 0
                        :           :           :        :     :  +- Exchange hashpartitioning(cs_order_number#561L, 200), ENSURE_REQUIREMENTS, [id=#175]
                        :           :           :        :     :     +- Filter ((isnotnull(cs_ship_date_sk#546) AND isnotnull(cs_ship_addr_sk#554)) AND isnotnull(cs_call_center_sk#555))
                        :           :           :        :     :        +- FileScan parquet [cs_ship_date_sk#546,cs_ship_addr_sk#554,cs_call_center_sk#555,cs_warehouse_sk#558,cs_order_number#561L,cs_ext_ship_cost#572,cs_net_profit#577] Batched: true, DataFilters: [isnotnull(cs_ship_date_sk#546), isnotnull(cs_ship_addr_sk#554), isnotnull(cs_call_center_sk#555)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_ship_date_sk), IsNotNull(cs_ship_addr_sk), IsNotNull(cs_call_center_sk)], ReadSchema: struct<cs_ship_date_sk:int,cs_ship_addr_sk:int,cs_call_center_sk:int,cs_warehouse_sk:int,cs_order...
                        :           :           :        :     +- Sort [cs_order_number#872L ASC NULLS FIRST], false, 0
                        :           :           :        :        +- Exchange hashpartitioning(cs_order_number#872L, 200), ENSURE_REQUIREMENTS, [id=#176]
                        :           :           :        :           +- FileScan parquet [cs_warehouse_sk#869,cs_order_number#872L] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<cs_warehouse_sk:int,cs_order_number:bigint>
                        :           :           :        +- Sort [cr_order_number#362L ASC NULLS FIRST], false, 0
                        :           :           :           +- Exchange hashpartitioning(cr_order_number#362L, 200), ENSURE_REQUIREMENTS, [id=#183]
                        :           :           :              +- FileScan parquet [cr_order_number#362L] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_returns.parquet], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<cr_order_number:bigint>
                        :           :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                        :           :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#189]
                        :           :                 +- Project [d_date_sk#612]
                        :           :                    +- Filter (((isnotnull(d_date#614) AND (d_date#614 >= 2001-04-01)) AND (d_date#614 <= 2001-05-31)) AND isnotnull(d_date_sk#612))
                        :           :                       +- FileScan parquet [d_date_sk#612,d_date#614] Batched: true, DataFilters: [isnotnull(d_date#614), (d_date#614 >= 2001-04-01), (d_date#614 <= 2001-05-31), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2001-04-01), LessThanOrEqual(d_date,2001-05-31), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                        :           +- Sort [ca_address_sk#62 ASC NULLS FIRST], false, 0
                        :              +- Exchange hashpartitioning(ca_address_sk#62, 200), ENSURE_REQUIREMENTS, [id=#197]
                        :                 +- Project [ca_address_sk#62]
                        :                    +- Filter ((isnotnull(ca_state#70) AND (ca_state#70 = TX)) AND isnotnull(ca_address_sk#62))
                        :                       +- FileScan parquet [ca_address_sk#62,ca_state#70] Batched: true, DataFilters: [isnotnull(ca_state#70), (ca_state#70 = TX), isnotnull(ca_address_sk#62)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer_address.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,TX), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>
                        +- Sort [cc_call_center_sk#0 ASC NULLS FIRST], false, 0
                           +- Exchange hashpartitioning(cc_call_center_sk#0, 200), ENSURE_REQUIREMENTS, [id=#205]
                              +- Project [cc_call_center_sk#0]
                                 +- Filter (cc_county#25 IN (Franklin Parish,Walker County,Ziebach County,Fairfield County,Daviess County) AND isnotnull(cc_call_center_sk#0))
                                    +- FileScan parquet [cc_call_center_sk#0,cc_county#25] Batched: true, DataFilters: [cc_county#25 IN (Franklin Parish,Walker County,Ziebach County,Fairfield County,Daviess County), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/call_center.parquet], PartitionFilters: [], PushedFilters: [In(cc_county, [Daviess County,Fairfield County,Franklin Parish,Walker County,Ziebach County]), I..., ReadSchema: struct<cc_call_center_sk:int,cc_county:string>
