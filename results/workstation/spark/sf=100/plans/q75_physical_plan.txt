AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[sales_cnt_diff#18998L ASC NULLS FIRST,sales_amt_diff#18999 ASC NULLS FIRST], output=[prev_year#18994,year#18995,i_brand_id#675,i_class_id#677,i_category_id#679,i_manufact_id#681,prev_yr_cnt#18996L,curr_yr_cnt#18997L,sales_cnt_diff#18998L,sales_amt_diff#18999])
   +- *(87) Project [d_year#19189 AS prev_year#18994, d_year#618 AS year#18995, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#19115L AS prev_yr_cnt#18996L, sales_cnt#19006L AS curr_yr_cnt#18997L, (sales_cnt#19006L - sales_cnt#19115L) AS sales_cnt_diff#18998L, CheckOverflow((promote_precision(cast(sales_amt#19007 as decimal(19,2))) - promote_precision(cast(sales_amt#19116 as decimal(19,2)))), DecimalType(19,2), true) AS sales_amt_diff#18999]
      +- *(87) SortMergeJoin [i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681], [i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174], Inner, (CheckOverflow((promote_precision(cast(sales_cnt#19006L as decimal(17,2))) / promote_precision(cast(sales_cnt#19115L as decimal(17,2)))), DecimalType(37,20), true) < 0.90000000000000000000)
         :- *(85) Sort [i_brand_id#675 ASC NULLS FIRST, i_class_id#677 ASC NULLS FIRST, i_category_id#679 ASC NULLS FIRST, i_manufact_id#681 ASC NULLS FIRST], false, 0
         :  +- AQEShuffleRead coalesced
         :     +- ShuffleQueryStage 58
         :        +- Exchange hashpartitioning(i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, 200), ENSURE_REQUIREMENTS, [id=#232753]
         :           +- *(83) HashAggregate(keys=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681], functions=[sum(sales_cnt#19000), sum(UnscaledValue(sales_amt#19001))], output=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#19006L, sales_amt#19007])
         :              +- AQEShuffleRead coalesced
         :                 +- ShuffleQueryStage 56
         :                    +- Exchange hashpartitioning(d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, 200), ENSURE_REQUIREMENTS, [id=#232645]
         :                       +- *(81) HashAggregate(keys=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681], functions=[partial_sum(sales_cnt#19000), partial_sum(UnscaledValue(sales_amt#19001))], output=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sum#19443L, sum#19444L])
         :                          +- *(81) HashAggregate(keys=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#19000, sales_amt#19001], functions=[], output=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#19000, sales_amt#19001])
         :                             +- AQEShuffleRead coalesced
         :                                +- ShuffleQueryStage 54
         :                                   +- Exchange hashpartitioning(d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#19000, sales_amt#19001, 200), ENSURE_REQUIREMENTS, [id=#232305]
         :                                      +- *(70) HashAggregate(keys=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#19000, sales_amt#19001], functions=[], output=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#19000, sales_amt#19001])
         :                                         +- Union
         :                                            :- *(63) Project [d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, (cs_quantity#562 - coalesce(cr_return_quantity#363, 0)) AS sales_cnt#19000, CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#364, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19001]
         :                                            :  +- *(63) SortMergeJoin [cs_order_number#561L, cs_item_sk#559], [cr_order_number#362L, cr_item_sk#348], LeftOuter
         :                                            :     :- *(61) Sort [cs_order_number#561L ASC NULLS FIRST, cs_item_sk#559 ASC NULLS FIRST], false, 0
         :                                            :     :  +- AQEShuffleRead coalesced
         :                                            :     :     +- ShuffleQueryStage 48
         :                                            :     :        +- Exchange hashpartitioning(cs_order_number#561L, cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#230445]
         :                                            :     :           +- *(45) Project [cs_item_sk#559, cs_order_number#561L, cs_quantity#562, cs_ext_sales_price#567, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, d_year#618]
         :                                            :     :              +- *(45) SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#612], Inner
         :                                            :     :                 :- *(43) Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
         :                                            :     :                 :  +- AQEShuffleRead coalesced
         :                                            :     :                 :     +- ShuffleQueryStage 39
         :                                            :     :                 :        +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#228305]
         :                                            :     :                 :           +- *(27) Project [cs_sold_date_sk#544, cs_item_sk#559, cs_order_number#561L, cs_quantity#562, cs_ext_sales_price#567, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681]
         :                                            :     :                 :              +- *(27) SortMergeJoin [cs_item_sk#559], [i_item_sk#668], Inner
         :                                            :     :                 :                 :- *(25) Sort [cs_item_sk#559 ASC NULLS FIRST], false, 0
         :                                            :     :                 :                 :  +- AQEShuffleRead coalesced
         :                                            :     :                 :                 :     +- ShuffleQueryStage 0
         :                                            :     :                 :                 :        +- Exchange hashpartitioning(cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#225408]
         :                                            :     :                 :                 :           +- *(1) Filter (isnotnull(cs_item_sk#559) AND isnotnull(cs_sold_date_sk#544))
         :                                            :     :                 :                 :              +- *(1) ColumnarToRow
         :                                            :     :                 :                 :                 +- FileScan parquet [cs_sold_date_sk#544,cs_item_sk#559,cs_order_number#561L,cs_quantity#562,cs_ext_sales_price#567] Batched: true, DataFilters: [isnotnull(cs_item_sk#559), isnotnull(cs_sold_date_sk#544)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_pri...
         :                                            :     :                 :                 +- *(26) Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
         :                                            :     :                 :                    +- AQEShuffleRead coalesced
         :                                            :     :                 :                       +- ShuffleQueryStage 1
         :                                            :     :                 :                          +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#225427]
         :                                            :     :                 :                             +- *(2) Project [i_item_sk#668, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681]
         :                                            :     :                 :                                +- *(2) Filter ((((((isnotnull(i_category#680) AND (i_category#680 = Shoes)) AND isnotnull(i_item_sk#668)) AND isnotnull(i_brand_id#675)) AND isnotnull(i_class_id#677)) AND isnotnull(i_category_id#679)) AND isnotnull(i_manufact_id#681))
         :                                            :     :                 :                                   +- *(2) ColumnarToRow
         :                                            :     :                 :                                      +- FileScan parquet [i_item_sk#668,i_brand_id#675,i_class_id#677,i_category_id#679,i_category#680,i_manufact_id#681] Batched: true, DataFilters: [isnotnull(i_category#680), (i_category#680 = Shoes), isnotnull(i_item_sk#668), isnotnull(i_brand..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Shoes), IsNotNull(i_item_sk), IsNotNull(i_brand_id), I..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
         :                                            :     :                 +- *(44) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
         :                                            :     :                    +- AQEShuffleRead coalesced
         :                                            :     :                       +- ShuffleQueryStage 2
         :                                            :     :                          +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#225450]
         :                                            :     :                             +- *(3) Filter ((isnotnull(d_year#618) AND (d_year#618 = 2000)) AND isnotnull(d_date_sk#612))
         :                                            :     :                                +- *(3) ColumnarToRow
         :                                            :     :                                   +- FileScan parquet [d_date_sk#612,d_year#618] Batched: true, DataFilters: [isnotnull(d_year#618), (d_year#618 = 2000), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :                                            :     +- *(62) Sort [cr_order_number#362L ASC NULLS FIRST, cr_item_sk#348 ASC NULLS FIRST], false, 0
         :                                            :        +- AQEShuffleRead coalesced
         :                                            :           +- ShuffleQueryStage 3
         :                                            :              +- Exchange hashpartitioning(cr_order_number#362L, cr_item_sk#348, 200), ENSURE_REQUIREMENTS, [id=#225471]
         :                                            :                 +- *(4) Filter (isnotnull(cr_order_number#362L) AND isnotnull(cr_item_sk#348))
         :                                            :                    +- *(4) ColumnarToRow
         :                                            :                       +- FileScan parquet [cr_item_sk#348,cr_order_number#362L,cr_return_quantity#363,cr_return_amount#364] Batched: true, DataFilters: [isnotnull(cr_order_number#362L), isnotnull(cr_item_sk#348)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>
         :                                            :- *(66) Project [d_year#19036, i_brand_id#19015, i_class_id#19017, i_category_id#19019, i_manufact_id#19021, (ss_quantity#262 - coalesce(sr_return_quantity#146, 0)) AS sales_cnt#19002, CheckOverflow((promote_precision(cast(ss_ext_sales_price#267 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#147, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19003]
         :                                            :  +- *(66) SortMergeJoin [ss_ticket_number#261L, ss_item_sk#254], [sr_ticket_number#145L, sr_item_sk#138], LeftOuter
         :                                            :     :- *(64) Sort [ss_ticket_number#261L ASC NULLS FIRST, ss_item_sk#254 ASC NULLS FIRST], false, 0
         :                                            :     :  +- AQEShuffleRead coalesced
         :                                            :     :     +- ShuffleQueryStage 50
         :                                            :     :        +- Exchange hashpartitioning(ss_ticket_number#261L, ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#230810]
         :                                            :     :           +- *(51) Project [ss_item_sk#254, ss_ticket_number#261L, ss_quantity#262, ss_ext_sales_price#267, i_brand_id#19015, i_class_id#19017, i_category_id#19019, i_manufact_id#19021, d_year#19036]
         :                                            :     :              +- *(51) SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#19030], Inner
         :                                            :     :                 :- *(49) Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
         :                                            :     :                 :  +- AQEShuffleRead coalesced
         :                                            :     :                 :     +- ShuffleQueryStage 42
         :                                            :     :                 :        +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#229078]
         :                                            :     :                 :           +- *(33) Project [ss_sold_date_sk#252, ss_item_sk#254, ss_ticket_number#261L, ss_quantity#262, ss_ext_sales_price#267, i_brand_id#19015, i_class_id#19017, i_category_id#19019, i_manufact_id#19021]
         :                                            :     :                 :              +- *(33) SortMergeJoin [ss_item_sk#254], [i_item_sk#19008], Inner
         :                                            :     :                 :                 :- *(31) Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
         :                                            :     :                 :                 :  +- AQEShuffleRead coalesced
         :                                            :     :                 :                 :     +- ShuffleQueryStage 4
         :                                            :     :                 :                 :        +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#225490]
         :                                            :     :                 :                 :           +- *(5) Filter (isnotnull(ss_item_sk#254) AND isnotnull(ss_sold_date_sk#252))
         :                                            :     :                 :                 :              +- *(5) ColumnarToRow
         :                                            :     :                 :                 :                 +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_ticket_number#261L,ss_quantity#262,ss_ext_sales_price#267] Batched: true, DataFilters: [isnotnull(ss_item_sk#254), isnotnull(ss_sold_date_sk#252)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_pr...
         :                                            :     :                 :                 +- *(32) Sort [i_item_sk#19008 ASC NULLS FIRST], false, 0
         :                                            :     :                 :                    +- AQEShuffleRead coalesced
         :                                            :     :                 :                       +- ShuffleQueryStage 6
         :                                            :     :                 :                          +- ReusedExchange [i_item_sk#19008, i_brand_id#19015, i_class_id#19017, i_category_id#19019, i_manufact_id#19021], Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#225427]
         :                                            :     :                 +- *(50) Sort [d_date_sk#19030 ASC NULLS FIRST], false, 0
         :                                            :     :                    +- AQEShuffleRead coalesced
         :                                            :     :                       +- ShuffleQueryStage 8
         :                                            :     :                          +- ReusedExchange [d_date_sk#19030, d_year#19036], Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#225450]
         :                                            :     +- *(65) Sort [sr_ticket_number#145L ASC NULLS FIRST, sr_item_sk#138 ASC NULLS FIRST], false, 0
         :                                            :        +- AQEShuffleRead coalesced
         :                                            :           +- ShuffleQueryStage 9
         :                                            :              +- Exchange hashpartitioning(sr_ticket_number#145L, sr_item_sk#138, 200), ENSURE_REQUIREMENTS, [id=#225557]
         :                                            :                 +- *(8) Filter (isnotnull(sr_ticket_number#145L) AND isnotnull(sr_item_sk#138))
         :                                            :                    +- *(8) ColumnarToRow
         :                                            :                       +- FileScan parquet [sr_item_sk#138,sr_ticket_number#145L,sr_return_quantity#146,sr_return_amt#147] Batched: true, DataFilters: [isnotnull(sr_ticket_number#145L), isnotnull(sr_item_sk#138)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>
         :                                            +- *(69) Project [d_year#19086, i_brand_id#19065, i_class_id#19067, i_category_id#19069, i_manufact_id#19071, (ws_quantity#494 - coalesce(wr_return_quantity#312, 0)) AS sales_cnt#19004, CheckOverflow((promote_precision(cast(ws_ext_sales_price#499 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#313, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19005]
         :                                               +- *(69) SortMergeJoin [ws_order_number#493L, ws_item_sk#479], [wr_order_number#311L, wr_item_sk#300], LeftOuter
         :                                                  :- *(67) Sort [ws_order_number#493L ASC NULLS FIRST, ws_item_sk#479 ASC NULLS FIRST], false, 0
         :                                                  :  +- AQEShuffleRead coalesced
         :                                                  :     +- ShuffleQueryStage 52
         :                                                  :        +- Exchange hashpartitioning(ws_order_number#493L, ws_item_sk#479, 200), ENSURE_REQUIREMENTS, [id=#231518]
         :                                                  :           +- *(57) Project [ws_item_sk#479, ws_order_number#493L, ws_quantity#494, ws_ext_sales_price#499, i_brand_id#19065, i_class_id#19067, i_category_id#19069, i_manufact_id#19071, d_year#19086]
         :                                                  :              +- *(57) SortMergeJoin [ws_sold_date_sk#476], [d_date_sk#19080], Inner
         :                                                  :                 :- *(55) Sort [ws_sold_date_sk#476 ASC NULLS FIRST], false, 0
         :                                                  :                 :  +- AQEShuffleRead coalesced
         :                                                  :                 :     +- ShuffleQueryStage 45
         :                                                  :                 :        +- Exchange hashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#230061]
         :                                                  :                 :           +- *(39) Project [ws_sold_date_sk#476, ws_item_sk#479, ws_order_number#493L, ws_quantity#494, ws_ext_sales_price#499, i_brand_id#19065, i_class_id#19067, i_category_id#19069, i_manufact_id#19071]
         :                                                  :                 :              +- *(39) SortMergeJoin [ws_item_sk#479], [i_item_sk#19058], Inner
         :                                                  :                 :                 :- *(37) Sort [ws_item_sk#479 ASC NULLS FIRST], false, 0
         :                                                  :                 :                 :  +- AQEShuffleRead coalesced
         :                                                  :                 :                 :     +- ShuffleQueryStage 10
         :                                                  :                 :                 :        +- Exchange hashpartitioning(ws_item_sk#479, 200), ENSURE_REQUIREMENTS, [id=#225576]
         :                                                  :                 :                 :           +- *(9) Filter (isnotnull(ws_item_sk#479) AND isnotnull(ws_sold_date_sk#476))
         :                                                  :                 :                 :              +- *(9) ColumnarToRow
         :                                                  :                 :                 :                 +- FileScan parquet [ws_sold_date_sk#476,ws_item_sk#479,ws_order_number#493L,ws_quantity#494,ws_ext_sales_price#499] Batched: true, DataFilters: [isnotnull(ws_item_sk#479), isnotnull(ws_sold_date_sk#476)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_pri...
         :                                                  :                 :                 +- *(38) Sort [i_item_sk#19058 ASC NULLS FIRST], false, 0
         :                                                  :                 :                    +- AQEShuffleRead coalesced
         :                                                  :                 :                       +- ShuffleQueryStage 12
         :                                                  :                 :                          +- ReusedExchange [i_item_sk#19058, i_brand_id#19065, i_class_id#19067, i_category_id#19069, i_manufact_id#19071], Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#225427]
         :                                                  :                 +- *(56) Sort [d_date_sk#19080 ASC NULLS FIRST], false, 0
         :                                                  :                    +- AQEShuffleRead coalesced
         :                                                  :                       +- ShuffleQueryStage 14
         :                                                  :                          +- ReusedExchange [d_date_sk#19080, d_year#19086], Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#225450]
         :                                                  +- *(68) Sort [wr_order_number#311L ASC NULLS FIRST, wr_item_sk#300 ASC NULLS FIRST], false, 0
         :                                                     +- AQEShuffleRead coalesced
         :                                                        +- ShuffleQueryStage 15
         :                                                           +- Exchange hashpartitioning(wr_order_number#311L, wr_item_sk#300, 200), ENSURE_REQUIREMENTS, [id=#225643]
         :                                                              +- *(12) Filter (isnotnull(wr_order_number#311L) AND isnotnull(wr_item_sk#300))
         :                                                                 +- *(12) ColumnarToRow
         :                                                                    +- FileScan parquet [wr_item_sk#300,wr_order_number#311L,wr_return_quantity#312,wr_return_amt#313] Batched: true, DataFilters: [isnotnull(wr_order_number#311L), isnotnull(wr_item_sk#300)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(wr_order_number), IsNotNull(wr_item_sk)], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>
         +- *(86) Sort [i_brand_id#19168 ASC NULLS FIRST, i_class_id#19170 ASC NULLS FIRST, i_category_id#19172 ASC NULLS FIRST, i_manufact_id#19174 ASC NULLS FIRST], false, 0
            +- AQEShuffleRead coalesced
               +- ShuffleQueryStage 59
                  +- Exchange hashpartitioning(i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174, 200), ENSURE_REQUIREMENTS, [id=#232794]
                     +- *(84) HashAggregate(keys=[d_year#19189, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174], functions=[sum(sales_cnt#19000), sum(UnscaledValue(sales_amt#19001))], output=[d_year#19189, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174, sales_cnt#19115L, sales_amt#19116])
                        +- AQEShuffleRead coalesced
                           +- ShuffleQueryStage 57
                              +- Exchange hashpartitioning(d_year#19189, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174, 200), ENSURE_REQUIREMENTS, [id=#232711]
                                 +- *(82) HashAggregate(keys=[d_year#19189, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174], functions=[partial_sum(sales_cnt#19000), partial_sum(UnscaledValue(sales_amt#19001))], output=[d_year#19189, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174, sum#19443L, sum#19446L])
                                    +- *(82) HashAggregate(keys=[d_year#19189, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174, sales_cnt#19000, sales_amt#19001], functions=[], output=[d_year#19189, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174, sales_cnt#19000, sales_amt#19001])
                                       +- AQEShuffleRead coalesced
                                          +- ShuffleQueryStage 55
                                             +- Exchange hashpartitioning(d_year#19189, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174, sales_cnt#19000, sales_amt#19001, 200), ENSURE_REQUIREMENTS, [id=#232534]
                                                +- *(80) HashAggregate(keys=[d_year#19189, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174, sales_cnt#19000, sales_amt#19001], functions=[], output=[d_year#19189, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174, sales_cnt#19000, sales_amt#19001])
                                                   +- Union
                                                      :- *(73) Project [d_year#19189, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174, (cs_quantity#19145 - coalesce(cr_return_quantity#19228, 0)) AS sales_cnt#19000, CheckOverflow((promote_precision(cast(cs_ext_sales_price#19150 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#19229, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19001]
                                                      :  +- *(73) SortMergeJoin [cs_order_number#19144L, cs_item_sk#19142], [cr_order_number#19227L, cr_item_sk#19213], LeftOuter
                                                      :     :- *(71) Sort [cs_order_number#19144L ASC NULLS FIRST, cs_item_sk#19142 ASC NULLS FIRST], false, 0
                                                      :     :  +- AQEShuffleRead coalesced
                                                      :     :     +- ShuffleQueryStage 49
                                                      :     :        +- Exchange hashpartitioning(cs_order_number#19144L, cs_item_sk#19142, 200), ENSURE_REQUIREMENTS, [id=#230525]
                                                      :     :           +- *(48) Project [cs_item_sk#19142, cs_order_number#19144L, cs_quantity#19145, cs_ext_sales_price#19150, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174, d_year#19189]
                                                      :     :              +- *(48) SortMergeJoin [cs_sold_date_sk#19127], [d_date_sk#19183], Inner
                                                      :     :                 :- *(46) Sort [cs_sold_date_sk#19127 ASC NULLS FIRST], false, 0
                                                      :     :                 :  +- AQEShuffleRead coalesced
                                                      :     :                 :     +- ShuffleQueryStage 41
                                                      :     :                 :        +- ReusedExchange [cs_sold_date_sk#19127, cs_item_sk#19142, cs_order_number#19144L, cs_quantity#19145, cs_ext_sales_price#19150, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174], Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#228305]
                                                      :     :                 +- *(47) Sort [d_date_sk#19183 ASC NULLS FIRST], false, 0
                                                      :     :                    +- AQEShuffleRead coalesced
                                                      :     :                       +- ShuffleQueryStage 20
                                                      :     :                          +- Exchange hashpartitioning(d_date_sk#19183, 200), ENSURE_REQUIREMENTS, [id=#225882]
                                                      :     :                             +- *(15) Filter ((isnotnull(d_year#19189) AND (d_year#19189 = 1999)) AND isnotnull(d_date_sk#19183))
                                                      :     :                                +- *(15) ColumnarToRow
                                                      :     :                                   +- FileScan parquet [d_date_sk#19183,d_year#19189] Batched: true, DataFilters: [isnotnull(d_year#19189), (d_year#19189 = 1999), isnotnull(d_date_sk#19183)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                      :     +- *(72) Sort [cr_order_number#19227L ASC NULLS FIRST, cr_item_sk#19213 ASC NULLS FIRST], false, 0
                                                      :        +- AQEShuffleRead coalesced
                                                      :           +- ShuffleQueryStage 22
                                                      :              +- ReusedExchange [cr_item_sk#19213, cr_order_number#19227L, cr_return_quantity#19228, cr_return_amount#19229], Exchange hashpartitioning(cr_order_number#362L, cr_item_sk#348, 200), ENSURE_REQUIREMENTS, [id=#225471]
                                                      :- *(76) Project [d_year#19289, i_brand_id#19268, i_class_id#19270, i_category_id#19272, i_manufact_id#19274, (ss_quantity#19248 - coalesce(sr_return_quantity#19321, 0)) AS sales_cnt#19002, CheckOverflow((promote_precision(cast(ss_ext_sales_price#19253 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#19322, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19003]
                                                      :  +- *(76) SortMergeJoin [ss_ticket_number#19247L, ss_item_sk#19240], [sr_ticket_number#19320L, sr_item_sk#19313], LeftOuter
                                                      :     :- *(74) Sort [ss_ticket_number#19247L ASC NULLS FIRST, ss_item_sk#19240 ASC NULLS FIRST], false, 0
                                                      :     :  +- AQEShuffleRead coalesced
                                                      :     :     +- ShuffleQueryStage 51
                                                      :     :        +- Exchange hashpartitioning(ss_ticket_number#19247L, ss_item_sk#19240, 200), ENSURE_REQUIREMENTS, [id=#230882]
                                                      :     :           +- *(54) Project [ss_item_sk#19240, ss_ticket_number#19247L, ss_quantity#19248, ss_ext_sales_price#19253, i_brand_id#19268, i_class_id#19270, i_category_id#19272, i_manufact_id#19274, d_year#19289]
                                                      :     :              +- *(54) SortMergeJoin [ss_sold_date_sk#19238], [d_date_sk#19283], Inner
                                                      :     :                 :- *(52) Sort [ss_sold_date_sk#19238 ASC NULLS FIRST], false, 0
                                                      :     :                 :  +- AQEShuffleRead coalesced
                                                      :     :                 :     +- ShuffleQueryStage 44
                                                      :     :                 :        +- ReusedExchange [ss_sold_date_sk#19238, ss_item_sk#19240, ss_ticket_number#19247L, ss_quantity#19248, ss_ext_sales_price#19253, i_brand_id#19268, i_class_id#19270, i_category_id#19272, i_manufact_id#19274], Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#229078]
                                                      :     :                 +- *(53) Sort [d_date_sk#19283 ASC NULLS FIRST], false, 0
                                                      :     :                    +- AQEShuffleRead coalesced
                                                      :     :                       +- ShuffleQueryStage 28
                                                      :     :                          +- ReusedExchange [d_date_sk#19283, d_year#19289], Exchange hashpartitioning(d_date_sk#19183, 200), ENSURE_REQUIREMENTS, [id=#225882]
                                                      :     +- *(75) Sort [sr_ticket_number#19320L ASC NULLS FIRST, sr_item_sk#19313 ASC NULLS FIRST], false, 0
                                                      :        +- AQEShuffleRead coalesced
                                                      :           +- ShuffleQueryStage 30
                                                      :              +- ReusedExchange [sr_item_sk#19313, sr_ticket_number#19320L, sr_return_quantity#19321, sr_return_amt#19322], Exchange hashpartitioning(sr_ticket_number#145L, sr_item_sk#138, 200), ENSURE_REQUIREMENTS, [id=#225557]
                                                      +- *(79) Project [d_year#19393, i_brand_id#19372, i_class_id#19374, i_category_id#19376, i_manufact_id#19378, (ws_quantity#19349 - coalesce(wr_return_quantity#19429, 0)) AS sales_cnt#19004, CheckOverflow((promote_precision(cast(ws_ext_sales_price#19354 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#19430, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19005]
                                                         +- *(79) SortMergeJoin [ws_order_number#19348L, ws_item_sk#19334], [wr_order_number#19428L, wr_item_sk#19417], LeftOuter
                                                            :- *(77) Sort [ws_order_number#19348L ASC NULLS FIRST, ws_item_sk#19334 ASC NULLS FIRST], false, 0
                                                            :  +- AQEShuffleRead coalesced
                                                            :     +- ShuffleQueryStage 53
                                                            :        +- Exchange hashpartitioning(ws_order_number#19348L, ws_item_sk#19334, 200), ENSURE_REQUIREMENTS, [id=#231569]
                                                            :           +- *(60) Project [ws_item_sk#19334, ws_order_number#19348L, ws_quantity#19349, ws_ext_sales_price#19354, i_brand_id#19372, i_class_id#19374, i_category_id#19376, i_manufact_id#19378, d_year#19393]
                                                            :              +- *(60) SortMergeJoin [ws_sold_date_sk#19331], [d_date_sk#19387], Inner
                                                            :                 :- *(58) Sort [ws_sold_date_sk#19331 ASC NULLS FIRST], false, 0
                                                            :                 :  +- AQEShuffleRead coalesced
                                                            :                 :     +- ShuffleQueryStage 47
                                                            :                 :        +- ReusedExchange [ws_sold_date_sk#19331, ws_item_sk#19334, ws_order_number#19348L, ws_quantity#19349, ws_ext_sales_price#19354, i_brand_id#19372, i_class_id#19374, i_category_id#19376, i_manufact_id#19378], Exchange hashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#230061]
                                                            :                 +- *(59) Sort [d_date_sk#19387 ASC NULLS FIRST], false, 0
                                                            :                    +- AQEShuffleRead coalesced
                                                            :                       +- ShuffleQueryStage 36
                                                            :                          +- ReusedExchange [d_date_sk#19387, d_year#19393], Exchange hashpartitioning(d_date_sk#19183, 200), ENSURE_REQUIREMENTS, [id=#225882]
                                                            +- *(78) Sort [wr_order_number#19428L ASC NULLS FIRST, wr_item_sk#19417 ASC NULLS FIRST], false, 0
                                                               +- AQEShuffleRead coalesced
                                                                  +- ShuffleQueryStage 38
                                                                     +- ReusedExchange [wr_item_sk#19417, wr_order_number#19428L, wr_return_quantity#19429, wr_return_amt#19430], Exchange hashpartitioning(wr_order_number#311L, wr_item_sk#300, 200), ENSURE_REQUIREMENTS, [id=#225643]
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[sales_cnt_diff#18998L ASC NULLS FIRST,sales_amt_diff#18999 ASC NULLS FIRST], output=[prev_year#18994,year#18995,i_brand_id#675,i_class_id#677,i_category_id#679,i_manufact_id#681,prev_yr_cnt#18996L,curr_yr_cnt#18997L,sales_cnt_diff#18998L,sales_amt_diff#18999])
   +- Project [d_year#19189 AS prev_year#18994, d_year#618 AS year#18995, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#19115L AS prev_yr_cnt#18996L, sales_cnt#19006L AS curr_yr_cnt#18997L, (sales_cnt#19006L - sales_cnt#19115L) AS sales_cnt_diff#18998L, CheckOverflow((promote_precision(cast(sales_amt#19007 as decimal(19,2))) - promote_precision(cast(sales_amt#19116 as decimal(19,2)))), DecimalType(19,2), true) AS sales_amt_diff#18999]
      +- SortMergeJoin [i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681], [i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174], Inner, (CheckOverflow((promote_precision(cast(sales_cnt#19006L as decimal(17,2))) / promote_precision(cast(sales_cnt#19115L as decimal(17,2)))), DecimalType(37,20), true) < 0.90000000000000000000)
         :- Sort [i_brand_id#675 ASC NULLS FIRST, i_class_id#677 ASC NULLS FIRST, i_category_id#679 ASC NULLS FIRST, i_manufact_id#681 ASC NULLS FIRST], false, 0
         :  +- Exchange hashpartitioning(i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, 200), ENSURE_REQUIREMENTS, [id=#225229]
         :     +- HashAggregate(keys=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681], functions=[sum(sales_cnt#19000), sum(UnscaledValue(sales_amt#19001))], output=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#19006L, sales_amt#19007])
         :        +- Exchange hashpartitioning(d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, 200), ENSURE_REQUIREMENTS, [id=#225147]
         :           +- HashAggregate(keys=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681], functions=[partial_sum(sales_cnt#19000), partial_sum(UnscaledValue(sales_amt#19001))], output=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sum#19443L, sum#19444L])
         :              +- HashAggregate(keys=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#19000, sales_amt#19001], functions=[], output=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#19000, sales_amt#19001])
         :                 +- Exchange hashpartitioning(d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#19000, sales_amt#19001, 200), ENSURE_REQUIREMENTS, [id=#225143]
         :                    +- HashAggregate(keys=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#19000, sales_amt#19001], functions=[], output=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#19000, sales_amt#19001])
         :                       +- Union
         :                          :- Project [d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, (cs_quantity#562 - coalesce(cr_return_quantity#363, 0)) AS sales_cnt#19000, CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#364, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19001]
         :                          :  +- SortMergeJoin [cs_order_number#561L, cs_item_sk#559], [cr_order_number#362L, cr_item_sk#348], LeftOuter
         :                          :     :- Sort [cs_order_number#561L ASC NULLS FIRST, cs_item_sk#559 ASC NULLS FIRST], false, 0
         :                          :     :  +- Exchange hashpartitioning(cs_order_number#561L, cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#225088]
         :                          :     :     +- Project [cs_item_sk#559, cs_order_number#561L, cs_quantity#562, cs_ext_sales_price#567, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, d_year#618]
         :                          :     :        +- SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#612], Inner
         :                          :     :           :- Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
         :                          :     :           :  +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#225080]
         :                          :     :           :     +- Project [cs_sold_date_sk#544, cs_item_sk#559, cs_order_number#561L, cs_quantity#562, cs_ext_sales_price#567, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681]
         :                          :     :           :        +- SortMergeJoin [cs_item_sk#559], [i_item_sk#668], Inner
         :                          :     :           :           :- Sort [cs_item_sk#559 ASC NULLS FIRST], false, 0
         :                          :     :           :           :  +- Exchange hashpartitioning(cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#225072]
         :                          :     :           :           :     +- Filter (isnotnull(cs_item_sk#559) AND isnotnull(cs_sold_date_sk#544))
         :                          :     :           :           :        +- FileScan parquet [cs_sold_date_sk#544,cs_item_sk#559,cs_order_number#561L,cs_quantity#562,cs_ext_sales_price#567] Batched: true, DataFilters: [isnotnull(cs_item_sk#559), isnotnull(cs_sold_date_sk#544)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_pri...
         :                          :     :           :           +- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
         :                          :     :           :              +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#225073]
         :                          :     :           :                 +- Project [i_item_sk#668, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681]
         :                          :     :           :                    +- Filter ((((((isnotnull(i_category#680) AND (i_category#680 = Shoes)) AND isnotnull(i_item_sk#668)) AND isnotnull(i_brand_id#675)) AND isnotnull(i_class_id#677)) AND isnotnull(i_category_id#679)) AND isnotnull(i_manufact_id#681))
         :                          :     :           :                       +- FileScan parquet [i_item_sk#668,i_brand_id#675,i_class_id#677,i_category_id#679,i_category#680,i_manufact_id#681] Batched: true, DataFilters: [isnotnull(i_category#680), (i_category#680 = Shoes), isnotnull(i_item_sk#668), isnotnull(i_brand..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Shoes), IsNotNull(i_item_sk), IsNotNull(i_brand_id), I..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
         :                          :     :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
         :                          :     :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#225081]
         :                          :     :                 +- Filter ((isnotnull(d_year#618) AND (d_year#618 = 2000)) AND isnotnull(d_date_sk#612))
         :                          :     :                    +- FileScan parquet [d_date_sk#612,d_year#618] Batched: true, DataFilters: [isnotnull(d_year#618), (d_year#618 = 2000), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :                          :     +- Sort [cr_order_number#362L ASC NULLS FIRST, cr_item_sk#348 ASC NULLS FIRST], false, 0
         :                          :        +- Exchange hashpartitioning(cr_order_number#362L, cr_item_sk#348, 200), ENSURE_REQUIREMENTS, [id=#225089]
         :                          :           +- Filter (isnotnull(cr_order_number#362L) AND isnotnull(cr_item_sk#348))
         :                          :              +- FileScan parquet [cr_item_sk#348,cr_order_number#362L,cr_return_quantity#363,cr_return_amount#364] Batched: true, DataFilters: [isnotnull(cr_order_number#362L), isnotnull(cr_item_sk#348)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>
         :                          :- Project [d_year#19036, i_brand_id#19015, i_class_id#19017, i_category_id#19019, i_manufact_id#19021, (ss_quantity#262 - coalesce(sr_return_quantity#146, 0)) AS sales_cnt#19002, CheckOverflow((promote_precision(cast(ss_ext_sales_price#267 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#147, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19003]
         :                          :  +- SortMergeJoin [ss_ticket_number#261L, ss_item_sk#254], [sr_ticket_number#145L, sr_item_sk#138], LeftOuter
         :                          :     :- Sort [ss_ticket_number#261L ASC NULLS FIRST, ss_item_sk#254 ASC NULLS FIRST], false, 0
         :                          :     :  +- Exchange hashpartitioning(ss_ticket_number#261L, ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#225111]
         :                          :     :     +- Project [ss_item_sk#254, ss_ticket_number#261L, ss_quantity#262, ss_ext_sales_price#267, i_brand_id#19015, i_class_id#19017, i_category_id#19019, i_manufact_id#19021, d_year#19036]
         :                          :     :        +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#19030], Inner
         :                          :     :           :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
         :                          :     :           :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#225103]
         :                          :     :           :     +- Project [ss_sold_date_sk#252, ss_item_sk#254, ss_ticket_number#261L, ss_quantity#262, ss_ext_sales_price#267, i_brand_id#19015, i_class_id#19017, i_category_id#19019, i_manufact_id#19021]
         :                          :     :           :        +- SortMergeJoin [ss_item_sk#254], [i_item_sk#19008], Inner
         :                          :     :           :           :- Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
         :                          :     :           :           :  +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#225095]
         :                          :     :           :           :     +- Filter (isnotnull(ss_item_sk#254) AND isnotnull(ss_sold_date_sk#252))
         :                          :     :           :           :        +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_ticket_number#261L,ss_quantity#262,ss_ext_sales_price#267] Batched: true, DataFilters: [isnotnull(ss_item_sk#254), isnotnull(ss_sold_date_sk#252)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_pr...
         :                          :     :           :           +- Sort [i_item_sk#19008 ASC NULLS FIRST], false, 0
         :                          :     :           :              +- Exchange hashpartitioning(i_item_sk#19008, 200), ENSURE_REQUIREMENTS, [id=#225096]
         :                          :     :           :                 +- Project [i_item_sk#19008, i_brand_id#19015, i_class_id#19017, i_category_id#19019, i_manufact_id#19021]
         :                          :     :           :                    +- Filter ((((((isnotnull(i_category#19020) AND (i_category#19020 = Shoes)) AND isnotnull(i_item_sk#19008)) AND isnotnull(i_brand_id#19015)) AND isnotnull(i_class_id#19017)) AND isnotnull(i_category_id#19019)) AND isnotnull(i_manufact_id#19021))
         :                          :     :           :                       +- FileScan parquet [i_item_sk#19008,i_brand_id#19015,i_class_id#19017,i_category_id#19019,i_category#19020,i_manufact_id#19021] Batched: true, DataFilters: [isnotnull(i_category#19020), (i_category#19020 = Shoes), isnotnull(i_item_sk#19008), isnotnull(i..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Shoes), IsNotNull(i_item_sk), IsNotNull(i_brand_id), I..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
         :                          :     :           +- Sort [d_date_sk#19030 ASC NULLS FIRST], false, 0
         :                          :     :              +- Exchange hashpartitioning(d_date_sk#19030, 200), ENSURE_REQUIREMENTS, [id=#225104]
         :                          :     :                 +- Filter ((isnotnull(d_year#19036) AND (d_year#19036 = 2000)) AND isnotnull(d_date_sk#19030))
         :                          :     :                    +- FileScan parquet [d_date_sk#19030,d_year#19036] Batched: true, DataFilters: [isnotnull(d_year#19036), (d_year#19036 = 2000), isnotnull(d_date_sk#19030)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :                          :     +- Sort [sr_ticket_number#145L ASC NULLS FIRST, sr_item_sk#138 ASC NULLS FIRST], false, 0
         :                          :        +- Exchange hashpartitioning(sr_ticket_number#145L, sr_item_sk#138, 200), ENSURE_REQUIREMENTS, [id=#225112]
         :                          :           +- Filter (isnotnull(sr_ticket_number#145L) AND isnotnull(sr_item_sk#138))
         :                          :              +- FileScan parquet [sr_item_sk#138,sr_ticket_number#145L,sr_return_quantity#146,sr_return_amt#147] Batched: true, DataFilters: [isnotnull(sr_ticket_number#145L), isnotnull(sr_item_sk#138)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>
         :                          +- Project [d_year#19086, i_brand_id#19065, i_class_id#19067, i_category_id#19069, i_manufact_id#19071, (ws_quantity#494 - coalesce(wr_return_quantity#312, 0)) AS sales_cnt#19004, CheckOverflow((promote_precision(cast(ws_ext_sales_price#499 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#313, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19005]
         :                             +- SortMergeJoin [ws_order_number#493L, ws_item_sk#479], [wr_order_number#311L, wr_item_sk#300], LeftOuter
         :                                :- Sort [ws_order_number#493L ASC NULLS FIRST, ws_item_sk#479 ASC NULLS FIRST], false, 0
         :                                :  +- Exchange hashpartitioning(ws_order_number#493L, ws_item_sk#479, 200), ENSURE_REQUIREMENTS, [id=#225134]
         :                                :     +- Project [ws_item_sk#479, ws_order_number#493L, ws_quantity#494, ws_ext_sales_price#499, i_brand_id#19065, i_class_id#19067, i_category_id#19069, i_manufact_id#19071, d_year#19086]
         :                                :        +- SortMergeJoin [ws_sold_date_sk#476], [d_date_sk#19080], Inner
         :                                :           :- Sort [ws_sold_date_sk#476 ASC NULLS FIRST], false, 0
         :                                :           :  +- Exchange hashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#225126]
         :                                :           :     +- Project [ws_sold_date_sk#476, ws_item_sk#479, ws_order_number#493L, ws_quantity#494, ws_ext_sales_price#499, i_brand_id#19065, i_class_id#19067, i_category_id#19069, i_manufact_id#19071]
         :                                :           :        +- SortMergeJoin [ws_item_sk#479], [i_item_sk#19058], Inner
         :                                :           :           :- Sort [ws_item_sk#479 ASC NULLS FIRST], false, 0
         :                                :           :           :  +- Exchange hashpartitioning(ws_item_sk#479, 200), ENSURE_REQUIREMENTS, [id=#225118]
         :                                :           :           :     +- Filter (isnotnull(ws_item_sk#479) AND isnotnull(ws_sold_date_sk#476))
         :                                :           :           :        +- FileScan parquet [ws_sold_date_sk#476,ws_item_sk#479,ws_order_number#493L,ws_quantity#494,ws_ext_sales_price#499] Batched: true, DataFilters: [isnotnull(ws_item_sk#479), isnotnull(ws_sold_date_sk#476)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_pri...
         :                                :           :           +- Sort [i_item_sk#19058 ASC NULLS FIRST], false, 0
         :                                :           :              +- Exchange hashpartitioning(i_item_sk#19058, 200), ENSURE_REQUIREMENTS, [id=#225119]
         :                                :           :                 +- Project [i_item_sk#19058, i_brand_id#19065, i_class_id#19067, i_category_id#19069, i_manufact_id#19071]
         :                                :           :                    +- Filter ((((((isnotnull(i_category#19070) AND (i_category#19070 = Shoes)) AND isnotnull(i_item_sk#19058)) AND isnotnull(i_brand_id#19065)) AND isnotnull(i_class_id#19067)) AND isnotnull(i_category_id#19069)) AND isnotnull(i_manufact_id#19071))
         :                                :           :                       +- FileScan parquet [i_item_sk#19058,i_brand_id#19065,i_class_id#19067,i_category_id#19069,i_category#19070,i_manufact_id#19071] Batched: true, DataFilters: [isnotnull(i_category#19070), (i_category#19070 = Shoes), isnotnull(i_item_sk#19058), isnotnull(i..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Shoes), IsNotNull(i_item_sk), IsNotNull(i_brand_id), I..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
         :                                :           +- Sort [d_date_sk#19080 ASC NULLS FIRST], false, 0
         :                                :              +- Exchange hashpartitioning(d_date_sk#19080, 200), ENSURE_REQUIREMENTS, [id=#225127]
         :                                :                 +- Filter ((isnotnull(d_year#19086) AND (d_year#19086 = 2000)) AND isnotnull(d_date_sk#19080))
         :                                :                    +- FileScan parquet [d_date_sk#19080,d_year#19086] Batched: true, DataFilters: [isnotnull(d_year#19086), (d_year#19086 = 2000), isnotnull(d_date_sk#19080)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :                                +- Sort [wr_order_number#311L ASC NULLS FIRST, wr_item_sk#300 ASC NULLS FIRST], false, 0
         :                                   +- Exchange hashpartitioning(wr_order_number#311L, wr_item_sk#300, 200), ENSURE_REQUIREMENTS, [id=#225135]
         :                                      +- Filter (isnotnull(wr_order_number#311L) AND isnotnull(wr_item_sk#300))
         :                                         +- FileScan parquet [wr_item_sk#300,wr_order_number#311L,wr_return_quantity#312,wr_return_amt#313] Batched: true, DataFilters: [isnotnull(wr_order_number#311L), isnotnull(wr_item_sk#300)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(wr_order_number), IsNotNull(wr_item_sk)], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>
         +- Sort [i_brand_id#19168 ASC NULLS FIRST, i_class_id#19170 ASC NULLS FIRST, i_category_id#19172 ASC NULLS FIRST, i_manufact_id#19174 ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174, 200), ENSURE_REQUIREMENTS, [id=#225230]
               +- HashAggregate(keys=[d_year#19189, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174], functions=[sum(sales_cnt#19000), sum(UnscaledValue(sales_amt#19001))], output=[d_year#19189, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174, sales_cnt#19115L, sales_amt#19116])
                  +- Exchange hashpartitioning(d_year#19189, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174, 200), ENSURE_REQUIREMENTS, [id=#225225]
                     +- HashAggregate(keys=[d_year#19189, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174], functions=[partial_sum(sales_cnt#19000), partial_sum(UnscaledValue(sales_amt#19001))], output=[d_year#19189, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174, sum#19443L, sum#19446L])
                        +- HashAggregate(keys=[d_year#19189, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174, sales_cnt#19000, sales_amt#19001], functions=[], output=[d_year#19189, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174, sales_cnt#19000, sales_amt#19001])
                           +- Exchange hashpartitioning(d_year#19189, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174, sales_cnt#19000, sales_amt#19001, 200), ENSURE_REQUIREMENTS, [id=#225221]
                              +- HashAggregate(keys=[d_year#19189, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174, sales_cnt#19000, sales_amt#19001], functions=[], output=[d_year#19189, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174, sales_cnt#19000, sales_amt#19001])
                                 +- Union
                                    :- Project [d_year#19189, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174, (cs_quantity#19145 - coalesce(cr_return_quantity#19228, 0)) AS sales_cnt#19000, CheckOverflow((promote_precision(cast(cs_ext_sales_price#19150 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#19229, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19001]
                                    :  +- SortMergeJoin [cs_order_number#19144L, cs_item_sk#19142], [cr_order_number#19227L, cr_item_sk#19213], LeftOuter
                                    :     :- Sort [cs_order_number#19144L ASC NULLS FIRST, cs_item_sk#19142 ASC NULLS FIRST], false, 0
                                    :     :  +- Exchange hashpartitioning(cs_order_number#19144L, cs_item_sk#19142, 200), ENSURE_REQUIREMENTS, [id=#225166]
                                    :     :     +- Project [cs_item_sk#19142, cs_order_number#19144L, cs_quantity#19145, cs_ext_sales_price#19150, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174, d_year#19189]
                                    :     :        +- SortMergeJoin [cs_sold_date_sk#19127], [d_date_sk#19183], Inner
                                    :     :           :- Sort [cs_sold_date_sk#19127 ASC NULLS FIRST], false, 0
                                    :     :           :  +- Exchange hashpartitioning(cs_sold_date_sk#19127, 200), ENSURE_REQUIREMENTS, [id=#225158]
                                    :     :           :     +- Project [cs_sold_date_sk#19127, cs_item_sk#19142, cs_order_number#19144L, cs_quantity#19145, cs_ext_sales_price#19150, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174]
                                    :     :           :        +- SortMergeJoin [cs_item_sk#19142], [i_item_sk#19161], Inner
                                    :     :           :           :- Sort [cs_item_sk#19142 ASC NULLS FIRST], false, 0
                                    :     :           :           :  +- Exchange hashpartitioning(cs_item_sk#19142, 200), ENSURE_REQUIREMENTS, [id=#225150]
                                    :     :           :           :     +- Filter (isnotnull(cs_item_sk#19142) AND isnotnull(cs_sold_date_sk#19127))
                                    :     :           :           :        +- FileScan parquet [cs_sold_date_sk#19127,cs_item_sk#19142,cs_order_number#19144L,cs_quantity#19145,cs_ext_sales_price#19150] Batched: true, DataFilters: [isnotnull(cs_item_sk#19142), isnotnull(cs_sold_date_sk#19127)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_pri...
                                    :     :           :           +- Sort [i_item_sk#19161 ASC NULLS FIRST], false, 0
                                    :     :           :              +- Exchange hashpartitioning(i_item_sk#19161, 200), ENSURE_REQUIREMENTS, [id=#225151]
                                    :     :           :                 +- Project [i_item_sk#19161, i_brand_id#19168, i_class_id#19170, i_category_id#19172, i_manufact_id#19174]
                                    :     :           :                    +- Filter ((((((isnotnull(i_category#19173) AND (i_category#19173 = Shoes)) AND isnotnull(i_item_sk#19161)) AND isnotnull(i_brand_id#19168)) AND isnotnull(i_class_id#19170)) AND isnotnull(i_category_id#19172)) AND isnotnull(i_manufact_id#19174))
                                    :     :           :                       +- FileScan parquet [i_item_sk#19161,i_brand_id#19168,i_class_id#19170,i_category_id#19172,i_category#19173,i_manufact_id#19174] Batched: true, DataFilters: [isnotnull(i_category#19173), (i_category#19173 = Shoes), isnotnull(i_item_sk#19161), isnotnull(i..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Shoes), IsNotNull(i_item_sk), IsNotNull(i_brand_id), I..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
                                    :     :           +- Sort [d_date_sk#19183 ASC NULLS FIRST], false, 0
                                    :     :              +- Exchange hashpartitioning(d_date_sk#19183, 200), ENSURE_REQUIREMENTS, [id=#225159]
                                    :     :                 +- Filter ((isnotnull(d_year#19189) AND (d_year#19189 = 1999)) AND isnotnull(d_date_sk#19183))
                                    :     :                    +- FileScan parquet [d_date_sk#19183,d_year#19189] Batched: true, DataFilters: [isnotnull(d_year#19189), (d_year#19189 = 1999), isnotnull(d_date_sk#19183)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                    :     +- Sort [cr_order_number#19227L ASC NULLS FIRST, cr_item_sk#19213 ASC NULLS FIRST], false, 0
                                    :        +- Exchange hashpartitioning(cr_order_number#19227L, cr_item_sk#19213, 200), ENSURE_REQUIREMENTS, [id=#225167]
                                    :           +- Filter (isnotnull(cr_order_number#19227L) AND isnotnull(cr_item_sk#19213))
                                    :              +- FileScan parquet [cr_item_sk#19213,cr_order_number#19227L,cr_return_quantity#19228,cr_return_amount#19229] Batched: true, DataFilters: [isnotnull(cr_order_number#19227L), isnotnull(cr_item_sk#19213)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>
                                    :- Project [d_year#19289, i_brand_id#19268, i_class_id#19270, i_category_id#19272, i_manufact_id#19274, (ss_quantity#19248 - coalesce(sr_return_quantity#19321, 0)) AS sales_cnt#19002, CheckOverflow((promote_precision(cast(ss_ext_sales_price#19253 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#19322, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19003]
                                    :  +- SortMergeJoin [ss_ticket_number#19247L, ss_item_sk#19240], [sr_ticket_number#19320L, sr_item_sk#19313], LeftOuter
                                    :     :- Sort [ss_ticket_number#19247L ASC NULLS FIRST, ss_item_sk#19240 ASC NULLS FIRST], false, 0
                                    :     :  +- Exchange hashpartitioning(ss_ticket_number#19247L, ss_item_sk#19240, 200), ENSURE_REQUIREMENTS, [id=#225189]
                                    :     :     +- Project [ss_item_sk#19240, ss_ticket_number#19247L, ss_quantity#19248, ss_ext_sales_price#19253, i_brand_id#19268, i_class_id#19270, i_category_id#19272, i_manufact_id#19274, d_year#19289]
                                    :     :        +- SortMergeJoin [ss_sold_date_sk#19238], [d_date_sk#19283], Inner
                                    :     :           :- Sort [ss_sold_date_sk#19238 ASC NULLS FIRST], false, 0
                                    :     :           :  +- Exchange hashpartitioning(ss_sold_date_sk#19238, 200), ENSURE_REQUIREMENTS, [id=#225181]
                                    :     :           :     +- Project [ss_sold_date_sk#19238, ss_item_sk#19240, ss_ticket_number#19247L, ss_quantity#19248, ss_ext_sales_price#19253, i_brand_id#19268, i_class_id#19270, i_category_id#19272, i_manufact_id#19274]
                                    :     :           :        +- SortMergeJoin [ss_item_sk#19240], [i_item_sk#19261], Inner
                                    :     :           :           :- Sort [ss_item_sk#19240 ASC NULLS FIRST], false, 0
                                    :     :           :           :  +- Exchange hashpartitioning(ss_item_sk#19240, 200), ENSURE_REQUIREMENTS, [id=#225173]
                                    :     :           :           :     +- Filter (isnotnull(ss_item_sk#19240) AND isnotnull(ss_sold_date_sk#19238))
                                    :     :           :           :        +- FileScan parquet [ss_sold_date_sk#19238,ss_item_sk#19240,ss_ticket_number#19247L,ss_quantity#19248,ss_ext_sales_price#19253] Batched: true, DataFilters: [isnotnull(ss_item_sk#19240), isnotnull(ss_sold_date_sk#19238)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_pr...
                                    :     :           :           +- Sort [i_item_sk#19261 ASC NULLS FIRST], false, 0
                                    :     :           :              +- Exchange hashpartitioning(i_item_sk#19261, 200), ENSURE_REQUIREMENTS, [id=#225174]
                                    :     :           :                 +- Project [i_item_sk#19261, i_brand_id#19268, i_class_id#19270, i_category_id#19272, i_manufact_id#19274]
                                    :     :           :                    +- Filter ((((((isnotnull(i_category#19273) AND (i_category#19273 = Shoes)) AND isnotnull(i_item_sk#19261)) AND isnotnull(i_brand_id#19268)) AND isnotnull(i_class_id#19270)) AND isnotnull(i_category_id#19272)) AND isnotnull(i_manufact_id#19274))
                                    :     :           :                       +- FileScan parquet [i_item_sk#19261,i_brand_id#19268,i_class_id#19270,i_category_id#19272,i_category#19273,i_manufact_id#19274] Batched: true, DataFilters: [isnotnull(i_category#19273), (i_category#19273 = Shoes), isnotnull(i_item_sk#19261), isnotnull(i..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Shoes), IsNotNull(i_item_sk), IsNotNull(i_brand_id), I..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
                                    :     :           +- Sort [d_date_sk#19283 ASC NULLS FIRST], false, 0
                                    :     :              +- Exchange hashpartitioning(d_date_sk#19283, 200), ENSURE_REQUIREMENTS, [id=#225182]
                                    :     :                 +- Filter ((isnotnull(d_year#19289) AND (d_year#19289 = 1999)) AND isnotnull(d_date_sk#19283))
                                    :     :                    +- FileScan parquet [d_date_sk#19283,d_year#19289] Batched: true, DataFilters: [isnotnull(d_year#19289), (d_year#19289 = 1999), isnotnull(d_date_sk#19283)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                    :     +- Sort [sr_ticket_number#19320L ASC NULLS FIRST, sr_item_sk#19313 ASC NULLS FIRST], false, 0
                                    :        +- Exchange hashpartitioning(sr_ticket_number#19320L, sr_item_sk#19313, 200), ENSURE_REQUIREMENTS, [id=#225190]
                                    :           +- Filter (isnotnull(sr_ticket_number#19320L) AND isnotnull(sr_item_sk#19313))
                                    :              +- FileScan parquet [sr_item_sk#19313,sr_ticket_number#19320L,sr_return_quantity#19321,sr_return_amt#19322] Batched: true, DataFilters: [isnotnull(sr_ticket_number#19320L), isnotnull(sr_item_sk#19313)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>
                                    +- Project [d_year#19393, i_brand_id#19372, i_class_id#19374, i_category_id#19376, i_manufact_id#19378, (ws_quantity#19349 - coalesce(wr_return_quantity#19429, 0)) AS sales_cnt#19004, CheckOverflow((promote_precision(cast(ws_ext_sales_price#19354 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#19430, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19005]
                                       +- SortMergeJoin [ws_order_number#19348L, ws_item_sk#19334], [wr_order_number#19428L, wr_item_sk#19417], LeftOuter
                                          :- Sort [ws_order_number#19348L ASC NULLS FIRST, ws_item_sk#19334 ASC NULLS FIRST], false, 0
                                          :  +- Exchange hashpartitioning(ws_order_number#19348L, ws_item_sk#19334, 200), ENSURE_REQUIREMENTS, [id=#225212]
                                          :     +- Project [ws_item_sk#19334, ws_order_number#19348L, ws_quantity#19349, ws_ext_sales_price#19354, i_brand_id#19372, i_class_id#19374, i_category_id#19376, i_manufact_id#19378, d_year#19393]
                                          :        +- SortMergeJoin [ws_sold_date_sk#19331], [d_date_sk#19387], Inner
                                          :           :- Sort [ws_sold_date_sk#19331 ASC NULLS FIRST], false, 0
                                          :           :  +- Exchange hashpartitioning(ws_sold_date_sk#19331, 200), ENSURE_REQUIREMENTS, [id=#225204]
                                          :           :     +- Project [ws_sold_date_sk#19331, ws_item_sk#19334, ws_order_number#19348L, ws_quantity#19349, ws_ext_sales_price#19354, i_brand_id#19372, i_class_id#19374, i_category_id#19376, i_manufact_id#19378]
                                          :           :        +- SortMergeJoin [ws_item_sk#19334], [i_item_sk#19365], Inner
                                          :           :           :- Sort [ws_item_sk#19334 ASC NULLS FIRST], false, 0
                                          :           :           :  +- Exchange hashpartitioning(ws_item_sk#19334, 200), ENSURE_REQUIREMENTS, [id=#225196]
                                          :           :           :     +- Filter (isnotnull(ws_item_sk#19334) AND isnotnull(ws_sold_date_sk#19331))
                                          :           :           :        +- FileScan parquet [ws_sold_date_sk#19331,ws_item_sk#19334,ws_order_number#19348L,ws_quantity#19349,ws_ext_sales_price#19354] Batched: true, DataFilters: [isnotnull(ws_item_sk#19334), isnotnull(ws_sold_date_sk#19331)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_pri...
                                          :           :           +- Sort [i_item_sk#19365 ASC NULLS FIRST], false, 0
                                          :           :              +- Exchange hashpartitioning(i_item_sk#19365, 200), ENSURE_REQUIREMENTS, [id=#225197]
                                          :           :                 +- Project [i_item_sk#19365, i_brand_id#19372, i_class_id#19374, i_category_id#19376, i_manufact_id#19378]
                                          :           :                    +- Filter ((((((isnotnull(i_category#19377) AND (i_category#19377 = Shoes)) AND isnotnull(i_item_sk#19365)) AND isnotnull(i_brand_id#19372)) AND isnotnull(i_class_id#19374)) AND isnotnull(i_category_id#19376)) AND isnotnull(i_manufact_id#19378))
                                          :           :                       +- FileScan parquet [i_item_sk#19365,i_brand_id#19372,i_class_id#19374,i_category_id#19376,i_category#19377,i_manufact_id#19378] Batched: true, DataFilters: [isnotnull(i_category#19377), (i_category#19377 = Shoes), isnotnull(i_item_sk#19365), isnotnull(i..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Shoes), IsNotNull(i_item_sk), IsNotNull(i_brand_id), I..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
                                          :           +- Sort [d_date_sk#19387 ASC NULLS FIRST], false, 0
                                          :              +- Exchange hashpartitioning(d_date_sk#19387, 200), ENSURE_REQUIREMENTS, [id=#225205]
                                          :                 +- Filter ((isnotnull(d_year#19393) AND (d_year#19393 = 1999)) AND isnotnull(d_date_sk#19387))
                                          :                    +- FileScan parquet [d_date_sk#19387,d_year#19393] Batched: true, DataFilters: [isnotnull(d_year#19393), (d_year#19393 = 1999), isnotnull(d_date_sk#19387)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                          +- Sort [wr_order_number#19428L ASC NULLS FIRST, wr_item_sk#19417 ASC NULLS FIRST], false, 0
                                             +- Exchange hashpartitioning(wr_order_number#19428L, wr_item_sk#19417, 200), ENSURE_REQUIREMENTS, [id=#225213]
                                                +- Filter (isnotnull(wr_order_number#19428L) AND isnotnull(wr_item_sk#19417))
                                                   +- FileScan parquet [wr_item_sk#19417,wr_order_number#19428L,wr_return_quantity#19429,wr_return_amt#19430] Batched: true, DataFilters: [isnotnull(wr_order_number#19428L), isnotnull(wr_item_sk#19417)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(wr_order_number), IsNotNull(wr_item_sk)], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>
