AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[sales_cnt_diff#16421L ASC NULLS FIRST,sales_amt_diff#16422 ASC NULLS FIRST], output=[prev_year#16417,year#16418,i_brand_id#675,i_class_id#677,i_category_id#679,i_manufact_id#681,prev_yr_cnt#16419L,curr_yr_cnt#16420L,sales_cnt_diff#16421L,sales_amt_diff#16422])
   +- *(87) Project [d_year#16612 AS prev_year#16417, d_year#618 AS year#16418, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#16538L AS prev_yr_cnt#16419L, sales_cnt#16429L AS curr_yr_cnt#16420L, (sales_cnt#16429L - sales_cnt#16538L) AS sales_cnt_diff#16421L, CheckOverflow((promote_precision(cast(sales_amt#16430 as decimal(19,2))) - promote_precision(cast(sales_amt#16539 as decimal(19,2)))), DecimalType(19,2), true) AS sales_amt_diff#16422]
      +- *(87) SortMergeJoin [i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681], [i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597], Inner, (CheckOverflow((promote_precision(cast(sales_cnt#16429L as decimal(17,2))) / promote_precision(cast(sales_cnt#16538L as decimal(17,2)))), DecimalType(37,20), true) < 0.90000000000000000000)
         :- *(85) Sort [i_brand_id#675 ASC NULLS FIRST, i_class_id#677 ASC NULLS FIRST, i_category_id#679 ASC NULLS FIRST, i_manufact_id#681 ASC NULLS FIRST], false, 0
         :  +- AQEShuffleRead coalesced
         :     +- ShuffleQueryStage 58
         :        +- Exchange hashpartitioning(i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, 200), ENSURE_REQUIREMENTS, [id=#159682]
         :           +- *(83) HashAggregate(keys=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681], functions=[sum(sales_cnt#16423), sum(UnscaledValue(sales_amt#16424))], output=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#16429L, sales_amt#16430])
         :              +- AQEShuffleRead coalesced
         :                 +- ShuffleQueryStage 56
         :                    +- Exchange hashpartitioning(d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, 200), ENSURE_REQUIREMENTS, [id=#159574]
         :                       +- *(81) HashAggregate(keys=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681], functions=[partial_sum(sales_cnt#16423), partial_sum(UnscaledValue(sales_amt#16424))], output=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sum#16866L, sum#16867L])
         :                          +- *(81) HashAggregate(keys=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#16423, sales_amt#16424], functions=[], output=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#16423, sales_amt#16424])
         :                             +- AQEShuffleRead coalesced
         :                                +- ShuffleQueryStage 54
         :                                   +- Exchange hashpartitioning(d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#16423, sales_amt#16424, 200), ENSURE_REQUIREMENTS, [id=#159234]
         :                                      +- *(70) HashAggregate(keys=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#16423, sales_amt#16424], functions=[], output=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#16423, sales_amt#16424])
         :                                         +- Union
         :                                            :- *(63) Project [d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, (cs_quantity#562 - coalesce(cr_return_quantity#363, 0)) AS sales_cnt#16423, CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#364, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16424]
         :                                            :  +- *(63) SortMergeJoin [cs_order_number#561L, cs_item_sk#559], [cr_order_number#362L, cr_item_sk#348], LeftOuter
         :                                            :     :- *(61) Sort [cs_order_number#561L ASC NULLS FIRST, cs_item_sk#559 ASC NULLS FIRST], false, 0
         :                                            :     :  +- AQEShuffleRead coalesced
         :                                            :     :     +- ShuffleQueryStage 48
         :                                            :     :        +- Exchange hashpartitioning(cs_order_number#561L, cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#157374]
         :                                            :     :           +- *(45) Project [cs_item_sk#559, cs_order_number#561L, cs_quantity#562, cs_ext_sales_price#567, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, d_year#618]
         :                                            :     :              +- *(45) SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#612], Inner
         :                                            :     :                 :- *(43) Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
         :                                            :     :                 :  +- AQEShuffleRead coalesced
         :                                            :     :                 :     +- ShuffleQueryStage 39
         :                                            :     :                 :        +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#154664]
         :                                            :     :                 :           +- *(27) Project [cs_sold_date_sk#544, cs_item_sk#559, cs_order_number#561L, cs_quantity#562, cs_ext_sales_price#567, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681]
         :                                            :     :                 :              +- *(27) SortMergeJoin [cs_item_sk#559], [i_item_sk#668], Inner
         :                                            :     :                 :                 :- *(25) Sort [cs_item_sk#559 ASC NULLS FIRST], false, 0
         :                                            :     :                 :                 :  +- AQEShuffleRead coalesced
         :                                            :     :                 :                 :     +- ShuffleQueryStage 0
         :                                            :     :                 :                 :        +- Exchange hashpartitioning(cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#152097]
         :                                            :     :                 :                 :           +- *(1) Filter (isnotnull(cs_item_sk#559) AND isnotnull(cs_sold_date_sk#544))
         :                                            :     :                 :                 :              +- *(1) ColumnarToRow
         :                                            :     :                 :                 :                 +- FileScan parquet [cs_sold_date_sk#544,cs_item_sk#559,cs_order_number#561L,cs_quantity#562,cs_ext_sales_price#567] Batched: true, DataFilters: [isnotnull(cs_item_sk#559), isnotnull(cs_sold_date_sk#544)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_pri...
         :                                            :     :                 :                 +- *(26) Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
         :                                            :     :                 :                    +- AQEShuffleRead coalesced
         :                                            :     :                 :                       +- ShuffleQueryStage 1
         :                                            :     :                 :                          +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#152116]
         :                                            :     :                 :                             +- *(2) Project [i_item_sk#668, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681]
         :                                            :     :                 :                                +- *(2) Filter ((((((isnotnull(i_category#680) AND (i_category#680 = Sports)) AND isnotnull(i_item_sk#668)) AND isnotnull(i_brand_id#675)) AND isnotnull(i_class_id#677)) AND isnotnull(i_category_id#679)) AND isnotnull(i_manufact_id#681))
         :                                            :     :                 :                                   +- *(2) ColumnarToRow
         :                                            :     :                 :                                      +- FileScan parquet [i_item_sk#668,i_brand_id#675,i_class_id#677,i_category_id#679,i_category#680,i_manufact_id#681] Batched: true, DataFilters: [isnotnull(i_category#680), (i_category#680 = Sports), isnotnull(i_item_sk#668), isnotnull(i_bran..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Sports), IsNotNull(i_item_sk), IsNotNull(i_brand_id), ..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
         :                                            :     :                 +- *(44) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
         :                                            :     :                    +- AQEShuffleRead coalesced
         :                                            :     :                       +- ShuffleQueryStage 2
         :                                            :     :                          +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#152139]
         :                                            :     :                             +- *(3) Filter ((isnotnull(d_year#618) AND (d_year#618 = 2002)) AND isnotnull(d_date_sk#612))
         :                                            :     :                                +- *(3) ColumnarToRow
         :                                            :     :                                   +- FileScan parquet [d_date_sk#612,d_year#618] Batched: true, DataFilters: [isnotnull(d_year#618), (d_year#618 = 2002), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :                                            :     +- *(62) Sort [cr_order_number#362L ASC NULLS FIRST, cr_item_sk#348 ASC NULLS FIRST], false, 0
         :                                            :        +- AQEShuffleRead coalesced
         :                                            :           +- ShuffleQueryStage 3
         :                                            :              +- Exchange hashpartitioning(cr_order_number#362L, cr_item_sk#348, 200), ENSURE_REQUIREMENTS, [id=#152160]
         :                                            :                 +- *(4) Filter (isnotnull(cr_order_number#362L) AND isnotnull(cr_item_sk#348))
         :                                            :                    +- *(4) ColumnarToRow
         :                                            :                       +- FileScan parquet [cr_item_sk#348,cr_order_number#362L,cr_return_quantity#363,cr_return_amount#364] Batched: true, DataFilters: [isnotnull(cr_order_number#362L), isnotnull(cr_item_sk#348)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>
         :                                            :- *(66) Project [d_year#16459, i_brand_id#16438, i_class_id#16440, i_category_id#16442, i_manufact_id#16444, (ss_quantity#262 - coalesce(sr_return_quantity#146, 0)) AS sales_cnt#16425, CheckOverflow((promote_precision(cast(ss_ext_sales_price#267 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#147, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16426]
         :                                            :  +- *(66) SortMergeJoin [ss_ticket_number#261L, ss_item_sk#254], [sr_ticket_number#145L, sr_item_sk#138], LeftOuter
         :                                            :     :- *(64) Sort [ss_ticket_number#261L ASC NULLS FIRST, ss_item_sk#254 ASC NULLS FIRST], false, 0
         :                                            :     :  +- AQEShuffleRead coalesced
         :                                            :     :     +- ShuffleQueryStage 50
         :                                            :     :        +- Exchange hashpartitioning(ss_ticket_number#261L, ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#157739]
         :                                            :     :           +- *(51) Project [ss_item_sk#254, ss_ticket_number#261L, ss_quantity#262, ss_ext_sales_price#267, i_brand_id#16438, i_class_id#16440, i_category_id#16442, i_manufact_id#16444, d_year#16459]
         :                                            :     :              +- *(51) SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#16453], Inner
         :                                            :     :                 :- *(49) Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
         :                                            :     :                 :  +- AQEShuffleRead coalesced
         :                                            :     :                 :     +- ShuffleQueryStage 42
         :                                            :     :                 :        +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#155737]
         :                                            :     :                 :           +- *(33) Project [ss_sold_date_sk#252, ss_item_sk#254, ss_ticket_number#261L, ss_quantity#262, ss_ext_sales_price#267, i_brand_id#16438, i_class_id#16440, i_category_id#16442, i_manufact_id#16444]
         :                                            :     :                 :              +- *(33) SortMergeJoin [ss_item_sk#254], [i_item_sk#16431], Inner
         :                                            :     :                 :                 :- *(31) Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
         :                                            :     :                 :                 :  +- AQEShuffleRead coalesced
         :                                            :     :                 :                 :     +- ShuffleQueryStage 4
         :                                            :     :                 :                 :        +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#152179]
         :                                            :     :                 :                 :           +- *(5) Filter (isnotnull(ss_item_sk#254) AND isnotnull(ss_sold_date_sk#252))
         :                                            :     :                 :                 :              +- *(5) ColumnarToRow
         :                                            :     :                 :                 :                 +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_ticket_number#261L,ss_quantity#262,ss_ext_sales_price#267] Batched: true, DataFilters: [isnotnull(ss_item_sk#254), isnotnull(ss_sold_date_sk#252)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_pr...
         :                                            :     :                 :                 +- *(32) Sort [i_item_sk#16431 ASC NULLS FIRST], false, 0
         :                                            :     :                 :                    +- AQEShuffleRead coalesced
         :                                            :     :                 :                       +- ShuffleQueryStage 6
         :                                            :     :                 :                          +- ReusedExchange [i_item_sk#16431, i_brand_id#16438, i_class_id#16440, i_category_id#16442, i_manufact_id#16444], Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#152116]
         :                                            :     :                 +- *(50) Sort [d_date_sk#16453 ASC NULLS FIRST], false, 0
         :                                            :     :                    +- AQEShuffleRead coalesced
         :                                            :     :                       +- ShuffleQueryStage 8
         :                                            :     :                          +- ReusedExchange [d_date_sk#16453, d_year#16459], Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#152139]
         :                                            :     +- *(65) Sort [sr_ticket_number#145L ASC NULLS FIRST, sr_item_sk#138 ASC NULLS FIRST], false, 0
         :                                            :        +- AQEShuffleRead coalesced
         :                                            :           +- ShuffleQueryStage 9
         :                                            :              +- Exchange hashpartitioning(sr_ticket_number#145L, sr_item_sk#138, 200), ENSURE_REQUIREMENTS, [id=#152246]
         :                                            :                 +- *(8) Filter (isnotnull(sr_ticket_number#145L) AND isnotnull(sr_item_sk#138))
         :                                            :                    +- *(8) ColumnarToRow
         :                                            :                       +- FileScan parquet [sr_item_sk#138,sr_ticket_number#145L,sr_return_quantity#146,sr_return_amt#147] Batched: true, DataFilters: [isnotnull(sr_ticket_number#145L), isnotnull(sr_item_sk#138)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>
         :                                            +- *(69) Project [d_year#16509, i_brand_id#16488, i_class_id#16490, i_category_id#16492, i_manufact_id#16494, (ws_quantity#494 - coalesce(wr_return_quantity#312, 0)) AS sales_cnt#16427, CheckOverflow((promote_precision(cast(ws_ext_sales_price#499 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#313, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16428]
         :                                               +- *(69) SortMergeJoin [ws_order_number#493L, ws_item_sk#479], [wr_order_number#311L, wr_item_sk#300], LeftOuter
         :                                                  :- *(67) Sort [ws_order_number#493L ASC NULLS FIRST, ws_item_sk#479 ASC NULLS FIRST], false, 0
         :                                                  :  +- AQEShuffleRead coalesced
         :                                                  :     +- ShuffleQueryStage 52
         :                                                  :        +- Exchange hashpartitioning(ws_order_number#493L, ws_item_sk#479, 200), ENSURE_REQUIREMENTS, [id=#158447]
         :                                                  :           +- *(57) Project [ws_item_sk#479, ws_order_number#493L, ws_quantity#494, ws_ext_sales_price#499, i_brand_id#16488, i_class_id#16490, i_category_id#16492, i_manufact_id#16494, d_year#16509]
         :                                                  :              +- *(57) SortMergeJoin [ws_sold_date_sk#476], [d_date_sk#16503], Inner
         :                                                  :                 :- *(55) Sort [ws_sold_date_sk#476 ASC NULLS FIRST], false, 0
         :                                                  :                 :  +- AQEShuffleRead coalesced
         :                                                  :                 :     +- ShuffleQueryStage 45
         :                                                  :                 :        +- Exchange hashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#156990]
         :                                                  :                 :           +- *(39) Project [ws_sold_date_sk#476, ws_item_sk#479, ws_order_number#493L, ws_quantity#494, ws_ext_sales_price#499, i_brand_id#16488, i_class_id#16490, i_category_id#16492, i_manufact_id#16494]
         :                                                  :                 :              +- *(39) SortMergeJoin [ws_item_sk#479], [i_item_sk#16481], Inner
         :                                                  :                 :                 :- *(37) Sort [ws_item_sk#479 ASC NULLS FIRST], false, 0
         :                                                  :                 :                 :  +- AQEShuffleRead coalesced
         :                                                  :                 :                 :     +- ShuffleQueryStage 10
         :                                                  :                 :                 :        +- Exchange hashpartitioning(ws_item_sk#479, 200), ENSURE_REQUIREMENTS, [id=#152265]
         :                                                  :                 :                 :           +- *(9) Filter (isnotnull(ws_item_sk#479) AND isnotnull(ws_sold_date_sk#476))
         :                                                  :                 :                 :              +- *(9) ColumnarToRow
         :                                                  :                 :                 :                 +- FileScan parquet [ws_sold_date_sk#476,ws_item_sk#479,ws_order_number#493L,ws_quantity#494,ws_ext_sales_price#499] Batched: true, DataFilters: [isnotnull(ws_item_sk#479), isnotnull(ws_sold_date_sk#476)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_pri...
         :                                                  :                 :                 +- *(38) Sort [i_item_sk#16481 ASC NULLS FIRST], false, 0
         :                                                  :                 :                    +- AQEShuffleRead coalesced
         :                                                  :                 :                       +- ShuffleQueryStage 12
         :                                                  :                 :                          +- ReusedExchange [i_item_sk#16481, i_brand_id#16488, i_class_id#16490, i_category_id#16492, i_manufact_id#16494], Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#152116]
         :                                                  :                 +- *(56) Sort [d_date_sk#16503 ASC NULLS FIRST], false, 0
         :                                                  :                    +- AQEShuffleRead coalesced
         :                                                  :                       +- ShuffleQueryStage 14
         :                                                  :                          +- ReusedExchange [d_date_sk#16503, d_year#16509], Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#152139]
         :                                                  +- *(68) Sort [wr_order_number#311L ASC NULLS FIRST, wr_item_sk#300 ASC NULLS FIRST], false, 0
         :                                                     +- AQEShuffleRead coalesced
         :                                                        +- ShuffleQueryStage 15
         :                                                           +- Exchange hashpartitioning(wr_order_number#311L, wr_item_sk#300, 200), ENSURE_REQUIREMENTS, [id=#152332]
         :                                                              +- *(12) Filter (isnotnull(wr_order_number#311L) AND isnotnull(wr_item_sk#300))
         :                                                                 +- *(12) ColumnarToRow
         :                                                                    +- FileScan parquet [wr_item_sk#300,wr_order_number#311L,wr_return_quantity#312,wr_return_amt#313] Batched: true, DataFilters: [isnotnull(wr_order_number#311L), isnotnull(wr_item_sk#300)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(wr_order_number), IsNotNull(wr_item_sk)], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>
         +- *(86) Sort [i_brand_id#16591 ASC NULLS FIRST, i_class_id#16593 ASC NULLS FIRST, i_category_id#16595 ASC NULLS FIRST, i_manufact_id#16597 ASC NULLS FIRST], false, 0
            +- AQEShuffleRead coalesced
               +- ShuffleQueryStage 59
                  +- Exchange hashpartitioning(i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597, 200), ENSURE_REQUIREMENTS, [id=#159723]
                     +- *(84) HashAggregate(keys=[d_year#16612, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597], functions=[sum(sales_cnt#16423), sum(UnscaledValue(sales_amt#16424))], output=[d_year#16612, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597, sales_cnt#16538L, sales_amt#16539])
                        +- AQEShuffleRead coalesced
                           +- ShuffleQueryStage 57
                              +- Exchange hashpartitioning(d_year#16612, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597, 200), ENSURE_REQUIREMENTS, [id=#159640]
                                 +- *(82) HashAggregate(keys=[d_year#16612, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597], functions=[partial_sum(sales_cnt#16423), partial_sum(UnscaledValue(sales_amt#16424))], output=[d_year#16612, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597, sum#16866L, sum#16869L])
                                    +- *(82) HashAggregate(keys=[d_year#16612, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597, sales_cnt#16423, sales_amt#16424], functions=[], output=[d_year#16612, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597, sales_cnt#16423, sales_amt#16424])
                                       +- AQEShuffleRead coalesced
                                          +- ShuffleQueryStage 55
                                             +- Exchange hashpartitioning(d_year#16612, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597, sales_cnt#16423, sales_amt#16424, 200), ENSURE_REQUIREMENTS, [id=#159463]
                                                +- *(80) HashAggregate(keys=[d_year#16612, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597, sales_cnt#16423, sales_amt#16424], functions=[], output=[d_year#16612, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597, sales_cnt#16423, sales_amt#16424])
                                                   +- Union
                                                      :- *(73) Project [d_year#16612, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597, (cs_quantity#16568 - coalesce(cr_return_quantity#16651, 0)) AS sales_cnt#16423, CheckOverflow((promote_precision(cast(cs_ext_sales_price#16573 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#16652, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16424]
                                                      :  +- *(73) SortMergeJoin [cs_order_number#16567L, cs_item_sk#16565], [cr_order_number#16650L, cr_item_sk#16636], LeftOuter
                                                      :     :- *(71) Sort [cs_order_number#16567L ASC NULLS FIRST, cs_item_sk#16565 ASC NULLS FIRST], false, 0
                                                      :     :  +- AQEShuffleRead coalesced
                                                      :     :     +- ShuffleQueryStage 49
                                                      :     :        +- Exchange hashpartitioning(cs_order_number#16567L, cs_item_sk#16565, 200), ENSURE_REQUIREMENTS, [id=#157454]
                                                      :     :           +- *(48) Project [cs_item_sk#16565, cs_order_number#16567L, cs_quantity#16568, cs_ext_sales_price#16573, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597, d_year#16612]
                                                      :     :              +- *(48) SortMergeJoin [cs_sold_date_sk#16550], [d_date_sk#16606], Inner
                                                      :     :                 :- *(46) Sort [cs_sold_date_sk#16550 ASC NULLS FIRST], false, 0
                                                      :     :                 :  +- AQEShuffleRead coalesced
                                                      :     :                 :     +- ShuffleQueryStage 41
                                                      :     :                 :        +- ReusedExchange [cs_sold_date_sk#16550, cs_item_sk#16565, cs_order_number#16567L, cs_quantity#16568, cs_ext_sales_price#16573, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597], Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#154664]
                                                      :     :                 +- *(47) Sort [d_date_sk#16606 ASC NULLS FIRST], false, 0
                                                      :     :                    +- AQEShuffleRead coalesced
                                                      :     :                       +- ShuffleQueryStage 20
                                                      :     :                          +- Exchange hashpartitioning(d_date_sk#16606, 200), ENSURE_REQUIREMENTS, [id=#152571]
                                                      :     :                             +- *(15) Filter ((isnotnull(d_year#16612) AND (d_year#16612 = 2001)) AND isnotnull(d_date_sk#16606))
                                                      :     :                                +- *(15) ColumnarToRow
                                                      :     :                                   +- FileScan parquet [d_date_sk#16606,d_year#16612] Batched: true, DataFilters: [isnotnull(d_year#16612), (d_year#16612 = 2001), isnotnull(d_date_sk#16606)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                      :     +- *(72) Sort [cr_order_number#16650L ASC NULLS FIRST, cr_item_sk#16636 ASC NULLS FIRST], false, 0
                                                      :        +- AQEShuffleRead coalesced
                                                      :           +- ShuffleQueryStage 22
                                                      :              +- ReusedExchange [cr_item_sk#16636, cr_order_number#16650L, cr_return_quantity#16651, cr_return_amount#16652], Exchange hashpartitioning(cr_order_number#362L, cr_item_sk#348, 200), ENSURE_REQUIREMENTS, [id=#152160]
                                                      :- *(76) Project [d_year#16712, i_brand_id#16691, i_class_id#16693, i_category_id#16695, i_manufact_id#16697, (ss_quantity#16671 - coalesce(sr_return_quantity#16744, 0)) AS sales_cnt#16425, CheckOverflow((promote_precision(cast(ss_ext_sales_price#16676 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#16745, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16426]
                                                      :  +- *(76) SortMergeJoin [ss_ticket_number#16670L, ss_item_sk#16663], [sr_ticket_number#16743L, sr_item_sk#16736], LeftOuter
                                                      :     :- *(74) Sort [ss_ticket_number#16670L ASC NULLS FIRST, ss_item_sk#16663 ASC NULLS FIRST], false, 0
                                                      :     :  +- AQEShuffleRead coalesced
                                                      :     :     +- ShuffleQueryStage 51
                                                      :     :        +- Exchange hashpartitioning(ss_ticket_number#16670L, ss_item_sk#16663, 200), ENSURE_REQUIREMENTS, [id=#157811]
                                                      :     :           +- *(54) Project [ss_item_sk#16663, ss_ticket_number#16670L, ss_quantity#16671, ss_ext_sales_price#16676, i_brand_id#16691, i_class_id#16693, i_category_id#16695, i_manufact_id#16697, d_year#16712]
                                                      :     :              +- *(54) SortMergeJoin [ss_sold_date_sk#16661], [d_date_sk#16706], Inner
                                                      :     :                 :- *(52) Sort [ss_sold_date_sk#16661 ASC NULLS FIRST], false, 0
                                                      :     :                 :  +- AQEShuffleRead coalesced
                                                      :     :                 :     +- ShuffleQueryStage 44
                                                      :     :                 :        +- ReusedExchange [ss_sold_date_sk#16661, ss_item_sk#16663, ss_ticket_number#16670L, ss_quantity#16671, ss_ext_sales_price#16676, i_brand_id#16691, i_class_id#16693, i_category_id#16695, i_manufact_id#16697], Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#155737]
                                                      :     :                 +- *(53) Sort [d_date_sk#16706 ASC NULLS FIRST], false, 0
                                                      :     :                    +- AQEShuffleRead coalesced
                                                      :     :                       +- ShuffleQueryStage 28
                                                      :     :                          +- ReusedExchange [d_date_sk#16706, d_year#16712], Exchange hashpartitioning(d_date_sk#16606, 200), ENSURE_REQUIREMENTS, [id=#152571]
                                                      :     +- *(75) Sort [sr_ticket_number#16743L ASC NULLS FIRST, sr_item_sk#16736 ASC NULLS FIRST], false, 0
                                                      :        +- AQEShuffleRead coalesced
                                                      :           +- ShuffleQueryStage 30
                                                      :              +- ReusedExchange [sr_item_sk#16736, sr_ticket_number#16743L, sr_return_quantity#16744, sr_return_amt#16745], Exchange hashpartitioning(sr_ticket_number#145L, sr_item_sk#138, 200), ENSURE_REQUIREMENTS, [id=#152246]
                                                      +- *(79) Project [d_year#16816, i_brand_id#16795, i_class_id#16797, i_category_id#16799, i_manufact_id#16801, (ws_quantity#16772 - coalesce(wr_return_quantity#16852, 0)) AS sales_cnt#16427, CheckOverflow((promote_precision(cast(ws_ext_sales_price#16777 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#16853, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16428]
                                                         +- *(79) SortMergeJoin [ws_order_number#16771L, ws_item_sk#16757], [wr_order_number#16851L, wr_item_sk#16840], LeftOuter
                                                            :- *(77) Sort [ws_order_number#16771L ASC NULLS FIRST, ws_item_sk#16757 ASC NULLS FIRST], false, 0
                                                            :  +- AQEShuffleRead coalesced
                                                            :     +- ShuffleQueryStage 53
                                                            :        +- Exchange hashpartitioning(ws_order_number#16771L, ws_item_sk#16757, 200), ENSURE_REQUIREMENTS, [id=#158498]
                                                            :           +- *(60) Project [ws_item_sk#16757, ws_order_number#16771L, ws_quantity#16772, ws_ext_sales_price#16777, i_brand_id#16795, i_class_id#16797, i_category_id#16799, i_manufact_id#16801, d_year#16816]
                                                            :              +- *(60) SortMergeJoin [ws_sold_date_sk#16754], [d_date_sk#16810], Inner
                                                            :                 :- *(58) Sort [ws_sold_date_sk#16754 ASC NULLS FIRST], false, 0
                                                            :                 :  +- AQEShuffleRead coalesced
                                                            :                 :     +- ShuffleQueryStage 47
                                                            :                 :        +- ReusedExchange [ws_sold_date_sk#16754, ws_item_sk#16757, ws_order_number#16771L, ws_quantity#16772, ws_ext_sales_price#16777, i_brand_id#16795, i_class_id#16797, i_category_id#16799, i_manufact_id#16801], Exchange hashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#156990]
                                                            :                 +- *(59) Sort [d_date_sk#16810 ASC NULLS FIRST], false, 0
                                                            :                    +- AQEShuffleRead coalesced
                                                            :                       +- ShuffleQueryStage 36
                                                            :                          +- ReusedExchange [d_date_sk#16810, d_year#16816], Exchange hashpartitioning(d_date_sk#16606, 200), ENSURE_REQUIREMENTS, [id=#152571]
                                                            +- *(78) Sort [wr_order_number#16851L ASC NULLS FIRST, wr_item_sk#16840 ASC NULLS FIRST], false, 0
                                                               +- AQEShuffleRead coalesced
                                                                  +- ShuffleQueryStage 38
                                                                     +- ReusedExchange [wr_item_sk#16840, wr_order_number#16851L, wr_return_quantity#16852, wr_return_amt#16853], Exchange hashpartitioning(wr_order_number#311L, wr_item_sk#300, 200), ENSURE_REQUIREMENTS, [id=#152332]
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[sales_cnt_diff#16421L ASC NULLS FIRST,sales_amt_diff#16422 ASC NULLS FIRST], output=[prev_year#16417,year#16418,i_brand_id#675,i_class_id#677,i_category_id#679,i_manufact_id#681,prev_yr_cnt#16419L,curr_yr_cnt#16420L,sales_cnt_diff#16421L,sales_amt_diff#16422])
   +- Project [d_year#16612 AS prev_year#16417, d_year#618 AS year#16418, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#16538L AS prev_yr_cnt#16419L, sales_cnt#16429L AS curr_yr_cnt#16420L, (sales_cnt#16429L - sales_cnt#16538L) AS sales_cnt_diff#16421L, CheckOverflow((promote_precision(cast(sales_amt#16430 as decimal(19,2))) - promote_precision(cast(sales_amt#16539 as decimal(19,2)))), DecimalType(19,2), true) AS sales_amt_diff#16422]
      +- SortMergeJoin [i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681], [i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597], Inner, (CheckOverflow((promote_precision(cast(sales_cnt#16429L as decimal(17,2))) / promote_precision(cast(sales_cnt#16538L as decimal(17,2)))), DecimalType(37,20), true) < 0.90000000000000000000)
         :- Sort [i_brand_id#675 ASC NULLS FIRST, i_class_id#677 ASC NULLS FIRST, i_category_id#679 ASC NULLS FIRST, i_manufact_id#681 ASC NULLS FIRST], false, 0
         :  +- Exchange hashpartitioning(i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, 200), ENSURE_REQUIREMENTS, [id=#151918]
         :     +- HashAggregate(keys=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681], functions=[sum(sales_cnt#16423), sum(UnscaledValue(sales_amt#16424))], output=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#16429L, sales_amt#16430])
         :        +- Exchange hashpartitioning(d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, 200), ENSURE_REQUIREMENTS, [id=#151836]
         :           +- HashAggregate(keys=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681], functions=[partial_sum(sales_cnt#16423), partial_sum(UnscaledValue(sales_amt#16424))], output=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sum#16866L, sum#16867L])
         :              +- HashAggregate(keys=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#16423, sales_amt#16424], functions=[], output=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#16423, sales_amt#16424])
         :                 +- Exchange hashpartitioning(d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#16423, sales_amt#16424, 200), ENSURE_REQUIREMENTS, [id=#151832]
         :                    +- HashAggregate(keys=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#16423, sales_amt#16424], functions=[], output=[d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, sales_cnt#16423, sales_amt#16424])
         :                       +- Union
         :                          :- Project [d_year#618, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, (cs_quantity#562 - coalesce(cr_return_quantity#363, 0)) AS sales_cnt#16423, CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#364, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16424]
         :                          :  +- SortMergeJoin [cs_order_number#561L, cs_item_sk#559], [cr_order_number#362L, cr_item_sk#348], LeftOuter
         :                          :     :- Sort [cs_order_number#561L ASC NULLS FIRST, cs_item_sk#559 ASC NULLS FIRST], false, 0
         :                          :     :  +- Exchange hashpartitioning(cs_order_number#561L, cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#151777]
         :                          :     :     +- Project [cs_item_sk#559, cs_order_number#561L, cs_quantity#562, cs_ext_sales_price#567, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681, d_year#618]
         :                          :     :        +- SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#612], Inner
         :                          :     :           :- Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
         :                          :     :           :  +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#151769]
         :                          :     :           :     +- Project [cs_sold_date_sk#544, cs_item_sk#559, cs_order_number#561L, cs_quantity#562, cs_ext_sales_price#567, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681]
         :                          :     :           :        +- SortMergeJoin [cs_item_sk#559], [i_item_sk#668], Inner
         :                          :     :           :           :- Sort [cs_item_sk#559 ASC NULLS FIRST], false, 0
         :                          :     :           :           :  +- Exchange hashpartitioning(cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#151761]
         :                          :     :           :           :     +- Filter (isnotnull(cs_item_sk#559) AND isnotnull(cs_sold_date_sk#544))
         :                          :     :           :           :        +- FileScan parquet [cs_sold_date_sk#544,cs_item_sk#559,cs_order_number#561L,cs_quantity#562,cs_ext_sales_price#567] Batched: true, DataFilters: [isnotnull(cs_item_sk#559), isnotnull(cs_sold_date_sk#544)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_pri...
         :                          :     :           :           +- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
         :                          :     :           :              +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#151762]
         :                          :     :           :                 +- Project [i_item_sk#668, i_brand_id#675, i_class_id#677, i_category_id#679, i_manufact_id#681]
         :                          :     :           :                    +- Filter ((((((isnotnull(i_category#680) AND (i_category#680 = Sports)) AND isnotnull(i_item_sk#668)) AND isnotnull(i_brand_id#675)) AND isnotnull(i_class_id#677)) AND isnotnull(i_category_id#679)) AND isnotnull(i_manufact_id#681))
         :                          :     :           :                       +- FileScan parquet [i_item_sk#668,i_brand_id#675,i_class_id#677,i_category_id#679,i_category#680,i_manufact_id#681] Batched: true, DataFilters: [isnotnull(i_category#680), (i_category#680 = Sports), isnotnull(i_item_sk#668), isnotnull(i_bran..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Sports), IsNotNull(i_item_sk), IsNotNull(i_brand_id), ..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
         :                          :     :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
         :                          :     :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#151770]
         :                          :     :                 +- Filter ((isnotnull(d_year#618) AND (d_year#618 = 2002)) AND isnotnull(d_date_sk#612))
         :                          :     :                    +- FileScan parquet [d_date_sk#612,d_year#618] Batched: true, DataFilters: [isnotnull(d_year#618), (d_year#618 = 2002), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :                          :     +- Sort [cr_order_number#362L ASC NULLS FIRST, cr_item_sk#348 ASC NULLS FIRST], false, 0
         :                          :        +- Exchange hashpartitioning(cr_order_number#362L, cr_item_sk#348, 200), ENSURE_REQUIREMENTS, [id=#151778]
         :                          :           +- Filter (isnotnull(cr_order_number#362L) AND isnotnull(cr_item_sk#348))
         :                          :              +- FileScan parquet [cr_item_sk#348,cr_order_number#362L,cr_return_quantity#363,cr_return_amount#364] Batched: true, DataFilters: [isnotnull(cr_order_number#362L), isnotnull(cr_item_sk#348)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>
         :                          :- Project [d_year#16459, i_brand_id#16438, i_class_id#16440, i_category_id#16442, i_manufact_id#16444, (ss_quantity#262 - coalesce(sr_return_quantity#146, 0)) AS sales_cnt#16425, CheckOverflow((promote_precision(cast(ss_ext_sales_price#267 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#147, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16426]
         :                          :  +- SortMergeJoin [ss_ticket_number#261L, ss_item_sk#254], [sr_ticket_number#145L, sr_item_sk#138], LeftOuter
         :                          :     :- Sort [ss_ticket_number#261L ASC NULLS FIRST, ss_item_sk#254 ASC NULLS FIRST], false, 0
         :                          :     :  +- Exchange hashpartitioning(ss_ticket_number#261L, ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#151800]
         :                          :     :     +- Project [ss_item_sk#254, ss_ticket_number#261L, ss_quantity#262, ss_ext_sales_price#267, i_brand_id#16438, i_class_id#16440, i_category_id#16442, i_manufact_id#16444, d_year#16459]
         :                          :     :        +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#16453], Inner
         :                          :     :           :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
         :                          :     :           :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#151792]
         :                          :     :           :     +- Project [ss_sold_date_sk#252, ss_item_sk#254, ss_ticket_number#261L, ss_quantity#262, ss_ext_sales_price#267, i_brand_id#16438, i_class_id#16440, i_category_id#16442, i_manufact_id#16444]
         :                          :     :           :        +- SortMergeJoin [ss_item_sk#254], [i_item_sk#16431], Inner
         :                          :     :           :           :- Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
         :                          :     :           :           :  +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#151784]
         :                          :     :           :           :     +- Filter (isnotnull(ss_item_sk#254) AND isnotnull(ss_sold_date_sk#252))
         :                          :     :           :           :        +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_ticket_number#261L,ss_quantity#262,ss_ext_sales_price#267] Batched: true, DataFilters: [isnotnull(ss_item_sk#254), isnotnull(ss_sold_date_sk#252)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_pr...
         :                          :     :           :           +- Sort [i_item_sk#16431 ASC NULLS FIRST], false, 0
         :                          :     :           :              +- Exchange hashpartitioning(i_item_sk#16431, 200), ENSURE_REQUIREMENTS, [id=#151785]
         :                          :     :           :                 +- Project [i_item_sk#16431, i_brand_id#16438, i_class_id#16440, i_category_id#16442, i_manufact_id#16444]
         :                          :     :           :                    +- Filter ((((((isnotnull(i_category#16443) AND (i_category#16443 = Sports)) AND isnotnull(i_item_sk#16431)) AND isnotnull(i_brand_id#16438)) AND isnotnull(i_class_id#16440)) AND isnotnull(i_category_id#16442)) AND isnotnull(i_manufact_id#16444))
         :                          :     :           :                       +- FileScan parquet [i_item_sk#16431,i_brand_id#16438,i_class_id#16440,i_category_id#16442,i_category#16443,i_manufact_id#16444] Batched: true, DataFilters: [isnotnull(i_category#16443), (i_category#16443 = Sports), isnotnull(i_item_sk#16431), isnotnull(..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Sports), IsNotNull(i_item_sk), IsNotNull(i_brand_id), ..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
         :                          :     :           +- Sort [d_date_sk#16453 ASC NULLS FIRST], false, 0
         :                          :     :              +- Exchange hashpartitioning(d_date_sk#16453, 200), ENSURE_REQUIREMENTS, [id=#151793]
         :                          :     :                 +- Filter ((isnotnull(d_year#16459) AND (d_year#16459 = 2002)) AND isnotnull(d_date_sk#16453))
         :                          :     :                    +- FileScan parquet [d_date_sk#16453,d_year#16459] Batched: true, DataFilters: [isnotnull(d_year#16459), (d_year#16459 = 2002), isnotnull(d_date_sk#16453)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :                          :     +- Sort [sr_ticket_number#145L ASC NULLS FIRST, sr_item_sk#138 ASC NULLS FIRST], false, 0
         :                          :        +- Exchange hashpartitioning(sr_ticket_number#145L, sr_item_sk#138, 200), ENSURE_REQUIREMENTS, [id=#151801]
         :                          :           +- Filter (isnotnull(sr_ticket_number#145L) AND isnotnull(sr_item_sk#138))
         :                          :              +- FileScan parquet [sr_item_sk#138,sr_ticket_number#145L,sr_return_quantity#146,sr_return_amt#147] Batched: true, DataFilters: [isnotnull(sr_ticket_number#145L), isnotnull(sr_item_sk#138)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>
         :                          +- Project [d_year#16509, i_brand_id#16488, i_class_id#16490, i_category_id#16492, i_manufact_id#16494, (ws_quantity#494 - coalesce(wr_return_quantity#312, 0)) AS sales_cnt#16427, CheckOverflow((promote_precision(cast(ws_ext_sales_price#499 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#313, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16428]
         :                             +- SortMergeJoin [ws_order_number#493L, ws_item_sk#479], [wr_order_number#311L, wr_item_sk#300], LeftOuter
         :                                :- Sort [ws_order_number#493L ASC NULLS FIRST, ws_item_sk#479 ASC NULLS FIRST], false, 0
         :                                :  +- Exchange hashpartitioning(ws_order_number#493L, ws_item_sk#479, 200), ENSURE_REQUIREMENTS, [id=#151823]
         :                                :     +- Project [ws_item_sk#479, ws_order_number#493L, ws_quantity#494, ws_ext_sales_price#499, i_brand_id#16488, i_class_id#16490, i_category_id#16492, i_manufact_id#16494, d_year#16509]
         :                                :        +- SortMergeJoin [ws_sold_date_sk#476], [d_date_sk#16503], Inner
         :                                :           :- Sort [ws_sold_date_sk#476 ASC NULLS FIRST], false, 0
         :                                :           :  +- Exchange hashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#151815]
         :                                :           :     +- Project [ws_sold_date_sk#476, ws_item_sk#479, ws_order_number#493L, ws_quantity#494, ws_ext_sales_price#499, i_brand_id#16488, i_class_id#16490, i_category_id#16492, i_manufact_id#16494]
         :                                :           :        +- SortMergeJoin [ws_item_sk#479], [i_item_sk#16481], Inner
         :                                :           :           :- Sort [ws_item_sk#479 ASC NULLS FIRST], false, 0
         :                                :           :           :  +- Exchange hashpartitioning(ws_item_sk#479, 200), ENSURE_REQUIREMENTS, [id=#151807]
         :                                :           :           :     +- Filter (isnotnull(ws_item_sk#479) AND isnotnull(ws_sold_date_sk#476))
         :                                :           :           :        +- FileScan parquet [ws_sold_date_sk#476,ws_item_sk#479,ws_order_number#493L,ws_quantity#494,ws_ext_sales_price#499] Batched: true, DataFilters: [isnotnull(ws_item_sk#479), isnotnull(ws_sold_date_sk#476)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_pri...
         :                                :           :           +- Sort [i_item_sk#16481 ASC NULLS FIRST], false, 0
         :                                :           :              +- Exchange hashpartitioning(i_item_sk#16481, 200), ENSURE_REQUIREMENTS, [id=#151808]
         :                                :           :                 +- Project [i_item_sk#16481, i_brand_id#16488, i_class_id#16490, i_category_id#16492, i_manufact_id#16494]
         :                                :           :                    +- Filter ((((((isnotnull(i_category#16493) AND (i_category#16493 = Sports)) AND isnotnull(i_item_sk#16481)) AND isnotnull(i_brand_id#16488)) AND isnotnull(i_class_id#16490)) AND isnotnull(i_category_id#16492)) AND isnotnull(i_manufact_id#16494))
         :                                :           :                       +- FileScan parquet [i_item_sk#16481,i_brand_id#16488,i_class_id#16490,i_category_id#16492,i_category#16493,i_manufact_id#16494] Batched: true, DataFilters: [isnotnull(i_category#16493), (i_category#16493 = Sports), isnotnull(i_item_sk#16481), isnotnull(..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Sports), IsNotNull(i_item_sk), IsNotNull(i_brand_id), ..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
         :                                :           +- Sort [d_date_sk#16503 ASC NULLS FIRST], false, 0
         :                                :              +- Exchange hashpartitioning(d_date_sk#16503, 200), ENSURE_REQUIREMENTS, [id=#151816]
         :                                :                 +- Filter ((isnotnull(d_year#16509) AND (d_year#16509 = 2002)) AND isnotnull(d_date_sk#16503))
         :                                :                    +- FileScan parquet [d_date_sk#16503,d_year#16509] Batched: true, DataFilters: [isnotnull(d_year#16509), (d_year#16509 = 2002), isnotnull(d_date_sk#16503)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :                                +- Sort [wr_order_number#311L ASC NULLS FIRST, wr_item_sk#300 ASC NULLS FIRST], false, 0
         :                                   +- Exchange hashpartitioning(wr_order_number#311L, wr_item_sk#300, 200), ENSURE_REQUIREMENTS, [id=#151824]
         :                                      +- Filter (isnotnull(wr_order_number#311L) AND isnotnull(wr_item_sk#300))
         :                                         +- FileScan parquet [wr_item_sk#300,wr_order_number#311L,wr_return_quantity#312,wr_return_amt#313] Batched: true, DataFilters: [isnotnull(wr_order_number#311L), isnotnull(wr_item_sk#300)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(wr_order_number), IsNotNull(wr_item_sk)], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>
         +- Sort [i_brand_id#16591 ASC NULLS FIRST, i_class_id#16593 ASC NULLS FIRST, i_category_id#16595 ASC NULLS FIRST, i_manufact_id#16597 ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597, 200), ENSURE_REQUIREMENTS, [id=#151919]
               +- HashAggregate(keys=[d_year#16612, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597], functions=[sum(sales_cnt#16423), sum(UnscaledValue(sales_amt#16424))], output=[d_year#16612, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597, sales_cnt#16538L, sales_amt#16539])
                  +- Exchange hashpartitioning(d_year#16612, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597, 200), ENSURE_REQUIREMENTS, [id=#151914]
                     +- HashAggregate(keys=[d_year#16612, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597], functions=[partial_sum(sales_cnt#16423), partial_sum(UnscaledValue(sales_amt#16424))], output=[d_year#16612, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597, sum#16866L, sum#16869L])
                        +- HashAggregate(keys=[d_year#16612, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597, sales_cnt#16423, sales_amt#16424], functions=[], output=[d_year#16612, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597, sales_cnt#16423, sales_amt#16424])
                           +- Exchange hashpartitioning(d_year#16612, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597, sales_cnt#16423, sales_amt#16424, 200), ENSURE_REQUIREMENTS, [id=#151910]
                              +- HashAggregate(keys=[d_year#16612, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597, sales_cnt#16423, sales_amt#16424], functions=[], output=[d_year#16612, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597, sales_cnt#16423, sales_amt#16424])
                                 +- Union
                                    :- Project [d_year#16612, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597, (cs_quantity#16568 - coalesce(cr_return_quantity#16651, 0)) AS sales_cnt#16423, CheckOverflow((promote_precision(cast(cs_ext_sales_price#16573 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#16652, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16424]
                                    :  +- SortMergeJoin [cs_order_number#16567L, cs_item_sk#16565], [cr_order_number#16650L, cr_item_sk#16636], LeftOuter
                                    :     :- Sort [cs_order_number#16567L ASC NULLS FIRST, cs_item_sk#16565 ASC NULLS FIRST], false, 0
                                    :     :  +- Exchange hashpartitioning(cs_order_number#16567L, cs_item_sk#16565, 200), ENSURE_REQUIREMENTS, [id=#151855]
                                    :     :     +- Project [cs_item_sk#16565, cs_order_number#16567L, cs_quantity#16568, cs_ext_sales_price#16573, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597, d_year#16612]
                                    :     :        +- SortMergeJoin [cs_sold_date_sk#16550], [d_date_sk#16606], Inner
                                    :     :           :- Sort [cs_sold_date_sk#16550 ASC NULLS FIRST], false, 0
                                    :     :           :  +- Exchange hashpartitioning(cs_sold_date_sk#16550, 200), ENSURE_REQUIREMENTS, [id=#151847]
                                    :     :           :     +- Project [cs_sold_date_sk#16550, cs_item_sk#16565, cs_order_number#16567L, cs_quantity#16568, cs_ext_sales_price#16573, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597]
                                    :     :           :        +- SortMergeJoin [cs_item_sk#16565], [i_item_sk#16584], Inner
                                    :     :           :           :- Sort [cs_item_sk#16565 ASC NULLS FIRST], false, 0
                                    :     :           :           :  +- Exchange hashpartitioning(cs_item_sk#16565, 200), ENSURE_REQUIREMENTS, [id=#151839]
                                    :     :           :           :     +- Filter (isnotnull(cs_item_sk#16565) AND isnotnull(cs_sold_date_sk#16550))
                                    :     :           :           :        +- FileScan parquet [cs_sold_date_sk#16550,cs_item_sk#16565,cs_order_number#16567L,cs_quantity#16568,cs_ext_sales_price#16573] Batched: true, DataFilters: [isnotnull(cs_item_sk#16565), isnotnull(cs_sold_date_sk#16550)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_pri...
                                    :     :           :           +- Sort [i_item_sk#16584 ASC NULLS FIRST], false, 0
                                    :     :           :              +- Exchange hashpartitioning(i_item_sk#16584, 200), ENSURE_REQUIREMENTS, [id=#151840]
                                    :     :           :                 +- Project [i_item_sk#16584, i_brand_id#16591, i_class_id#16593, i_category_id#16595, i_manufact_id#16597]
                                    :     :           :                    +- Filter ((((((isnotnull(i_category#16596) AND (i_category#16596 = Sports)) AND isnotnull(i_item_sk#16584)) AND isnotnull(i_brand_id#16591)) AND isnotnull(i_class_id#16593)) AND isnotnull(i_category_id#16595)) AND isnotnull(i_manufact_id#16597))
                                    :     :           :                       +- FileScan parquet [i_item_sk#16584,i_brand_id#16591,i_class_id#16593,i_category_id#16595,i_category#16596,i_manufact_id#16597] Batched: true, DataFilters: [isnotnull(i_category#16596), (i_category#16596 = Sports), isnotnull(i_item_sk#16584), isnotnull(..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Sports), IsNotNull(i_item_sk), IsNotNull(i_brand_id), ..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
                                    :     :           +- Sort [d_date_sk#16606 ASC NULLS FIRST], false, 0
                                    :     :              +- Exchange hashpartitioning(d_date_sk#16606, 200), ENSURE_REQUIREMENTS, [id=#151848]
                                    :     :                 +- Filter ((isnotnull(d_year#16612) AND (d_year#16612 = 2001)) AND isnotnull(d_date_sk#16606))
                                    :     :                    +- FileScan parquet [d_date_sk#16606,d_year#16612] Batched: true, DataFilters: [isnotnull(d_year#16612), (d_year#16612 = 2001), isnotnull(d_date_sk#16606)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                    :     +- Sort [cr_order_number#16650L ASC NULLS FIRST, cr_item_sk#16636 ASC NULLS FIRST], false, 0
                                    :        +- Exchange hashpartitioning(cr_order_number#16650L, cr_item_sk#16636, 200), ENSURE_REQUIREMENTS, [id=#151856]
                                    :           +- Filter (isnotnull(cr_order_number#16650L) AND isnotnull(cr_item_sk#16636))
                                    :              +- FileScan parquet [cr_item_sk#16636,cr_order_number#16650L,cr_return_quantity#16651,cr_return_amount#16652] Batched: true, DataFilters: [isnotnull(cr_order_number#16650L), isnotnull(cr_item_sk#16636)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>
                                    :- Project [d_year#16712, i_brand_id#16691, i_class_id#16693, i_category_id#16695, i_manufact_id#16697, (ss_quantity#16671 - coalesce(sr_return_quantity#16744, 0)) AS sales_cnt#16425, CheckOverflow((promote_precision(cast(ss_ext_sales_price#16676 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#16745, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16426]
                                    :  +- SortMergeJoin [ss_ticket_number#16670L, ss_item_sk#16663], [sr_ticket_number#16743L, sr_item_sk#16736], LeftOuter
                                    :     :- Sort [ss_ticket_number#16670L ASC NULLS FIRST, ss_item_sk#16663 ASC NULLS FIRST], false, 0
                                    :     :  +- Exchange hashpartitioning(ss_ticket_number#16670L, ss_item_sk#16663, 200), ENSURE_REQUIREMENTS, [id=#151878]
                                    :     :     +- Project [ss_item_sk#16663, ss_ticket_number#16670L, ss_quantity#16671, ss_ext_sales_price#16676, i_brand_id#16691, i_class_id#16693, i_category_id#16695, i_manufact_id#16697, d_year#16712]
                                    :     :        +- SortMergeJoin [ss_sold_date_sk#16661], [d_date_sk#16706], Inner
                                    :     :           :- Sort [ss_sold_date_sk#16661 ASC NULLS FIRST], false, 0
                                    :     :           :  +- Exchange hashpartitioning(ss_sold_date_sk#16661, 200), ENSURE_REQUIREMENTS, [id=#151870]
                                    :     :           :     +- Project [ss_sold_date_sk#16661, ss_item_sk#16663, ss_ticket_number#16670L, ss_quantity#16671, ss_ext_sales_price#16676, i_brand_id#16691, i_class_id#16693, i_category_id#16695, i_manufact_id#16697]
                                    :     :           :        +- SortMergeJoin [ss_item_sk#16663], [i_item_sk#16684], Inner
                                    :     :           :           :- Sort [ss_item_sk#16663 ASC NULLS FIRST], false, 0
                                    :     :           :           :  +- Exchange hashpartitioning(ss_item_sk#16663, 200), ENSURE_REQUIREMENTS, [id=#151862]
                                    :     :           :           :     +- Filter (isnotnull(ss_item_sk#16663) AND isnotnull(ss_sold_date_sk#16661))
                                    :     :           :           :        +- FileScan parquet [ss_sold_date_sk#16661,ss_item_sk#16663,ss_ticket_number#16670L,ss_quantity#16671,ss_ext_sales_price#16676] Batched: true, DataFilters: [isnotnull(ss_item_sk#16663), isnotnull(ss_sold_date_sk#16661)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_pr...
                                    :     :           :           +- Sort [i_item_sk#16684 ASC NULLS FIRST], false, 0
                                    :     :           :              +- Exchange hashpartitioning(i_item_sk#16684, 200), ENSURE_REQUIREMENTS, [id=#151863]
                                    :     :           :                 +- Project [i_item_sk#16684, i_brand_id#16691, i_class_id#16693, i_category_id#16695, i_manufact_id#16697]
                                    :     :           :                    +- Filter ((((((isnotnull(i_category#16696) AND (i_category#16696 = Sports)) AND isnotnull(i_item_sk#16684)) AND isnotnull(i_brand_id#16691)) AND isnotnull(i_class_id#16693)) AND isnotnull(i_category_id#16695)) AND isnotnull(i_manufact_id#16697))
                                    :     :           :                       +- FileScan parquet [i_item_sk#16684,i_brand_id#16691,i_class_id#16693,i_category_id#16695,i_category#16696,i_manufact_id#16697] Batched: true, DataFilters: [isnotnull(i_category#16696), (i_category#16696 = Sports), isnotnull(i_item_sk#16684), isnotnull(..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Sports), IsNotNull(i_item_sk), IsNotNull(i_brand_id), ..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
                                    :     :           +- Sort [d_date_sk#16706 ASC NULLS FIRST], false, 0
                                    :     :              +- Exchange hashpartitioning(d_date_sk#16706, 200), ENSURE_REQUIREMENTS, [id=#151871]
                                    :     :                 +- Filter ((isnotnull(d_year#16712) AND (d_year#16712 = 2001)) AND isnotnull(d_date_sk#16706))
                                    :     :                    +- FileScan parquet [d_date_sk#16706,d_year#16712] Batched: true, DataFilters: [isnotnull(d_year#16712), (d_year#16712 = 2001), isnotnull(d_date_sk#16706)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                    :     +- Sort [sr_ticket_number#16743L ASC NULLS FIRST, sr_item_sk#16736 ASC NULLS FIRST], false, 0
                                    :        +- Exchange hashpartitioning(sr_ticket_number#16743L, sr_item_sk#16736, 200), ENSURE_REQUIREMENTS, [id=#151879]
                                    :           +- Filter (isnotnull(sr_ticket_number#16743L) AND isnotnull(sr_item_sk#16736))
                                    :              +- FileScan parquet [sr_item_sk#16736,sr_ticket_number#16743L,sr_return_quantity#16744,sr_return_amt#16745] Batched: true, DataFilters: [isnotnull(sr_ticket_number#16743L), isnotnull(sr_item_sk#16736)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>
                                    +- Project [d_year#16816, i_brand_id#16795, i_class_id#16797, i_category_id#16799, i_manufact_id#16801, (ws_quantity#16772 - coalesce(wr_return_quantity#16852, 0)) AS sales_cnt#16427, CheckOverflow((promote_precision(cast(ws_ext_sales_price#16777 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#16853, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#16428]
                                       +- SortMergeJoin [ws_order_number#16771L, ws_item_sk#16757], [wr_order_number#16851L, wr_item_sk#16840], LeftOuter
                                          :- Sort [ws_order_number#16771L ASC NULLS FIRST, ws_item_sk#16757 ASC NULLS FIRST], false, 0
                                          :  +- Exchange hashpartitioning(ws_order_number#16771L, ws_item_sk#16757, 200), ENSURE_REQUIREMENTS, [id=#151901]
                                          :     +- Project [ws_item_sk#16757, ws_order_number#16771L, ws_quantity#16772, ws_ext_sales_price#16777, i_brand_id#16795, i_class_id#16797, i_category_id#16799, i_manufact_id#16801, d_year#16816]
                                          :        +- SortMergeJoin [ws_sold_date_sk#16754], [d_date_sk#16810], Inner
                                          :           :- Sort [ws_sold_date_sk#16754 ASC NULLS FIRST], false, 0
                                          :           :  +- Exchange hashpartitioning(ws_sold_date_sk#16754, 200), ENSURE_REQUIREMENTS, [id=#151893]
                                          :           :     +- Project [ws_sold_date_sk#16754, ws_item_sk#16757, ws_order_number#16771L, ws_quantity#16772, ws_ext_sales_price#16777, i_brand_id#16795, i_class_id#16797, i_category_id#16799, i_manufact_id#16801]
                                          :           :        +- SortMergeJoin [ws_item_sk#16757], [i_item_sk#16788], Inner
                                          :           :           :- Sort [ws_item_sk#16757 ASC NULLS FIRST], false, 0
                                          :           :           :  +- Exchange hashpartitioning(ws_item_sk#16757, 200), ENSURE_REQUIREMENTS, [id=#151885]
                                          :           :           :     +- Filter (isnotnull(ws_item_sk#16757) AND isnotnull(ws_sold_date_sk#16754))
                                          :           :           :        +- FileScan parquet [ws_sold_date_sk#16754,ws_item_sk#16757,ws_order_number#16771L,ws_quantity#16772,ws_ext_sales_price#16777] Batched: true, DataFilters: [isnotnull(ws_item_sk#16757), isnotnull(ws_sold_date_sk#16754)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_pri...
                                          :           :           +- Sort [i_item_sk#16788 ASC NULLS FIRST], false, 0
                                          :           :              +- Exchange hashpartitioning(i_item_sk#16788, 200), ENSURE_REQUIREMENTS, [id=#151886]
                                          :           :                 +- Project [i_item_sk#16788, i_brand_id#16795, i_class_id#16797, i_category_id#16799, i_manufact_id#16801]
                                          :           :                    +- Filter ((((((isnotnull(i_category#16800) AND (i_category#16800 = Sports)) AND isnotnull(i_item_sk#16788)) AND isnotnull(i_brand_id#16795)) AND isnotnull(i_class_id#16797)) AND isnotnull(i_category_id#16799)) AND isnotnull(i_manufact_id#16801))
                                          :           :                       +- FileScan parquet [i_item_sk#16788,i_brand_id#16795,i_class_id#16797,i_category_id#16799,i_category#16800,i_manufact_id#16801] Batched: true, DataFilters: [isnotnull(i_category#16800), (i_category#16800 = Sports), isnotnull(i_item_sk#16788), isnotnull(..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Sports), IsNotNull(i_item_sk), IsNotNull(i_brand_id), ..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
                                          :           +- Sort [d_date_sk#16810 ASC NULLS FIRST], false, 0
                                          :              +- Exchange hashpartitioning(d_date_sk#16810, 200), ENSURE_REQUIREMENTS, [id=#151894]
                                          :                 +- Filter ((isnotnull(d_year#16816) AND (d_year#16816 = 2001)) AND isnotnull(d_date_sk#16810))
                                          :                    +- FileScan parquet [d_date_sk#16810,d_year#16816] Batched: true, DataFilters: [isnotnull(d_year#16816), (d_year#16816 = 2001), isnotnull(d_date_sk#16810)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                          +- Sort [wr_order_number#16851L ASC NULLS FIRST, wr_item_sk#16840 ASC NULLS FIRST], false, 0
                                             +- Exchange hashpartitioning(wr_order_number#16851L, wr_item_sk#16840, 200), ENSURE_REQUIREMENTS, [id=#151902]
                                                +- Filter (isnotnull(wr_order_number#16851L) AND isnotnull(wr_item_sk#16840))
                                                   +- FileScan parquet [wr_item_sk#16840,wr_order_number#16851L,wr_return_quantity#16852,wr_return_amt#16853] Batched: true, DataFilters: [isnotnull(wr_order_number#16851L), isnotnull(wr_item_sk#16840)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(wr_order_number), IsNotNull(wr_item_sk)], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>
