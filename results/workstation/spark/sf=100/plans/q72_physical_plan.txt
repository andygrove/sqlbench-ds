AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[total_cnt#852L DESC NULLS LAST,i_item_desc#672 ASC NULLS FIRST,w_warehouse_name#772 ASC NULLS FIRST,d_week_seq#616 ASC NULLS FIRST], output=[i_item_desc#672,w_warehouse_name#772,d_week_seq#616,no_promo#850L,promo#851L,total_cnt#852L])
   +- *(42) HashAggregate(keys=[i_item_desc#672, w_warehouse_name#772, d_week_seq#616], functions=[sum(CASE WHEN isnull(p_promo_sk#98) THEN 1 ELSE 0 END), sum(CASE WHEN isnotnull(p_promo_sk#98) THEN 1 ELSE 0 END), count(1)], output=[i_item_desc#672, w_warehouse_name#772, d_week_seq#616, no_promo#850L, promo#851L, total_cnt#852L])
      +- AQEShuffleRead coalesced
         +- ShuffleQueryStage 20
            +- Exchange hashpartitioning(i_item_desc#672, w_warehouse_name#772, d_week_seq#616, 200), ENSURE_REQUIREMENTS, [id=#4334]
               +- *(41) HashAggregate(keys=[i_item_desc#672, w_warehouse_name#772, d_week_seq#616], functions=[partial_sum(CASE WHEN isnull(p_promo_sk#98) THEN 1 ELSE 0 END), partial_sum(CASE WHEN isnotnull(p_promo_sk#98) THEN 1 ELSE 0 END), partial_count(1)], output=[i_item_desc#672, w_warehouse_name#772, d_week_seq#616, sum#921L, sum#922L, count#923L])
                  +- *(41) Project [w_warehouse_name#772, i_item_desc#672, d_week_seq#616, p_promo_sk#98]
                     +- *(41) SortMergeJoin [cs_item_sk#559, cs_order_number#561L], [cr_item_sk#348, cr_order_number#362L], LeftOuter
                        :- *(39) Sort [cs_item_sk#559 ASC NULLS FIRST, cs_order_number#561L ASC NULLS FIRST], false, 0
                        :  +- AQEShuffleRead coalesced
                        :     +- ShuffleQueryStage 19
                        :        +- Exchange hashpartitioning(cs_item_sk#559, cs_order_number#561L, 200), ENSURE_REQUIREMENTS, [id=#4250]
                        :           +- *(38) Project [cs_item_sk#559, cs_order_number#561L, w_warehouse_name#772, i_item_desc#672, d_week_seq#616, p_promo_sk#98]
                        :              +- *(38) SortMergeJoin [cs_promo_sk#560], [p_promo_sk#98], LeftOuter
                        :                 :- *(36) Sort [cs_promo_sk#560 ASC NULLS FIRST], false, 0
                        :                 :  +- AQEShuffleRead coalesced
                        :                 :     +- ShuffleQueryStage 18
                        :                 :        +- Exchange hashpartitioning(cs_promo_sk#560, 200), ENSURE_REQUIREMENTS, [id=#4141]
                        :                 :           +- *(35) Project [cs_item_sk#559, cs_promo_sk#560, cs_order_number#561L, w_warehouse_name#772, i_item_desc#672, d_week_seq#616]
                        :                 :              +- *(35) SortMergeJoin [cs_ship_date_sk#546], [d_date_sk#881], Inner, (d_date#883 > date_add(d_date#614, 5))
                        :                 :                 :- *(33) Sort [cs_ship_date_sk#546 ASC NULLS FIRST], false, 0
                        :                 :                 :  +- AQEShuffleRead coalesced
                        :                 :                 :     +- ShuffleQueryStage 17
                        :                 :                 :        +- Exchange hashpartitioning(cs_ship_date_sk#546, 200), ENSURE_REQUIREMENTS, [id=#4005]
                        :                 :                 :           +- *(32) Project [cs_ship_date_sk#546, cs_item_sk#559, cs_promo_sk#560, cs_order_number#561L, w_warehouse_name#772, i_item_desc#672, d_date#614, d_week_seq#616]
                        :                 :                 :              +- *(32) SortMergeJoin [d_week_seq#616, inv_date_sk#436], [d_week_seq#857, d_date_sk#853], Inner
                        :                 :                 :                 :- *(30) Sort [d_week_seq#616 ASC NULLS FIRST, inv_date_sk#436 ASC NULLS FIRST], false, 0
                        :                 :                 :                 :  +- AQEShuffleRead coalesced
                        :                 :                 :                 :     +- ShuffleQueryStage 16
                        :                 :                 :                 :        +- Exchange hashpartitioning(d_week_seq#616, inv_date_sk#436, 200), ENSURE_REQUIREMENTS, [id=#3842]
                        :                 :                 :                 :           +- *(29) Project [cs_ship_date_sk#546, cs_item_sk#559, cs_promo_sk#560, cs_order_number#561L, inv_date_sk#436, w_warehouse_name#772, i_item_desc#672, d_date#614, d_week_seq#616]
                        :                 :                 :                 :              +- *(29) SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#612], Inner
                        :                 :                 :                 :                 :- *(27) Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
                        :                 :                 :                 :                 :  +- AQEShuffleRead coalesced
                        :                 :                 :                 :                 :     +- ShuffleQueryStage 15
                        :                 :                 :                 :                 :        +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#3654]
                        :                 :                 :                 :                 :           +- *(26) Project [cs_sold_date_sk#544, cs_ship_date_sk#546, cs_item_sk#559, cs_promo_sk#560, cs_order_number#561L, inv_date_sk#436, w_warehouse_name#772, i_item_desc#672]
                        :                 :                 :                 :                 :              +- *(26) SortMergeJoin [cs_bill_hdemo_sk#549], [hd_demo_sk#88], Inner
                        :                 :                 :                 :                 :                 :- *(24) Sort [cs_bill_hdemo_sk#549 ASC NULLS FIRST], false, 0
                        :                 :                 :                 :                 :                 :  +- ShuffleQueryStage 14
                        :                 :                 :                 :                 :                 :     +- Exchange hashpartitioning(cs_bill_hdemo_sk#549, 200), ENSURE_REQUIREMENTS, [id=#3446]
                        :                 :                 :                 :                 :                 :        +- *(23) Project [cs_sold_date_sk#544, cs_ship_date_sk#546, cs_bill_hdemo_sk#549, cs_item_sk#559, cs_promo_sk#560, cs_order_number#561L, inv_date_sk#436, w_warehouse_name#772, i_item_desc#672]
                        :                 :                 :                 :                 :                 :           +- *(23) SortMergeJoin [cs_bill_cdemo_sk#548], [cd_demo_sk#222], Inner
                        :                 :                 :                 :                 :                 :              :- *(21) Sort [cs_bill_cdemo_sk#548 ASC NULLS FIRST], false, 0
                        :                 :                 :                 :                 :                 :              :  +- ShuffleQueryStage 13
                        :                 :                 :                 :                 :                 :              :     +- Exchange hashpartitioning(cs_bill_cdemo_sk#548, 200), ENSURE_REQUIREMENTS, [id=#3211]
                        :                 :                 :                 :                 :                 :              :        +- *(20) Project [cs_sold_date_sk#544, cs_ship_date_sk#546, cs_bill_cdemo_sk#548, cs_bill_hdemo_sk#549, cs_item_sk#559, cs_promo_sk#560, cs_order_number#561L, inv_date_sk#436, w_warehouse_name#772, i_item_desc#672]
                        :                 :                 :                 :                 :                 :              :           +- *(20) SortMergeJoin [cs_item_sk#559], [i_item_sk#668], Inner
                        :                 :                 :                 :                 :                 :              :              :- *(18) Sort [cs_item_sk#559 ASC NULLS FIRST], false, 0
                        :                 :                 :                 :                 :                 :              :              :  +- ShuffleQueryStage 12
                        :                 :                 :                 :                 :                 :              :              :     +- Exchange hashpartitioning(cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#2947]
                        :                 :                 :                 :                 :                 :              :              :        +- *(17) Project [cs_sold_date_sk#544, cs_ship_date_sk#546, cs_bill_cdemo_sk#548, cs_bill_hdemo_sk#549, cs_item_sk#559, cs_promo_sk#560, cs_order_number#561L, inv_date_sk#436, w_warehouse_name#772]
                        :                 :                 :                 :                 :                 :              :              :           +- *(17) SortMergeJoin(skew=true) [inv_warehouse_sk#438], [w_warehouse_sk#770], Inner
                        :                 :                 :                 :                 :                 :              :              :              :- *(15) Sort [inv_warehouse_sk#438 ASC NULLS FIRST], false, 0
                        :                 :                 :                 :                 :                 :              :              :              :  +- AQEShuffleRead skewed
                        :                 :                 :                 :                 :                 :              :              :              :     +- ShuffleQueryStage 11
                        :                 :                 :                 :                 :                 :              :              :              :        +- Exchange hashpartitioning(inv_warehouse_sk#438, 200), ENSURE_REQUIREMENTS, [id=#2645]
                        :                 :                 :                 :                 :                 :              :              :              :           +- *(14) Project [cs_sold_date_sk#544, cs_ship_date_sk#546, cs_bill_cdemo_sk#548, cs_bill_hdemo_sk#549, cs_item_sk#559, cs_promo_sk#560, cs_order_number#561L, inv_date_sk#436, inv_warehouse_sk#438]
                        :                 :                 :                 :                 :                 :              :              :              :              +- *(14) SortMergeJoin [cs_item_sk#559], [inv_item_sk#437], Inner, (inv_quantity_on_hand#439 < cs_quantity#562)
                        :                 :                 :                 :                 :                 :              :              :              :                 :- *(12) Sort [cs_item_sk#559 ASC NULLS FIRST], false, 0
                        :                 :                 :                 :                 :                 :              :              :              :                 :  +- ShuffleQueryStage 0
                        :                 :                 :                 :                 :                 :              :              :              :                 :     +- Exchange hashpartitioning(cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#527]
                        :                 :                 :                 :                 :                 :              :              :              :                 :        +- *(1) Filter (((((isnotnull(cs_quantity#562) AND isnotnull(cs_item_sk#559)) AND isnotnull(cs_bill_cdemo_sk#548)) AND isnotnull(cs_bill_hdemo_sk#549)) AND isnotnull(cs_sold_date_sk#544)) AND isnotnull(cs_ship_date_sk#546))
                        :                 :                 :                 :                 :                 :              :              :              :                 :           +- *(1) ColumnarToRow
                        :                 :                 :                 :                 :                 :              :              :              :                 :              +- FileScan parquet [cs_sold_date_sk#544,cs_ship_date_sk#546,cs_bill_cdemo_sk#548,cs_bill_hdemo_sk#549,cs_item_sk#559,cs_promo_sk#560,cs_order_number#561L,cs_quantity#562] Batched: true, DataFilters: [isnotnull(cs_quantity#562), isnotnull(cs_item_sk#559), isnotnull(cs_bill_cdemo_sk#548), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_quantity), IsNotNull(cs_item_sk), IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_hd..., ReadSchema: struct<cs_sold_date_sk:int,cs_ship_date_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_item_...
                        :                 :                 :                 :                 :                 :              :              :              :                 +- *(13) Sort [inv_item_sk#437 ASC NULLS FIRST], false, 0
                        :                 :                 :                 :                 :                 :              :              :              :                    +- ShuffleQueryStage 1
                        :                 :                 :                 :                 :                 :              :              :              :                       +- Exchange hashpartitioning(inv_item_sk#437, 200), ENSURE_REQUIREMENTS, [id=#544]
                        :                 :                 :                 :                 :                 :              :              :              :                          +- *(2) Filter (((isnotnull(inv_quantity_on_hand#439) AND isnotnull(inv_item_sk#437)) AND isnotnull(inv_warehouse_sk#438)) AND isnotnull(inv_date_sk#436))
                        :                 :                 :                 :                 :                 :              :              :              :                             +- *(2) ColumnarToRow
                        :                 :                 :                 :                 :                 :              :              :              :                                +- FileScan parquet [inv_date_sk#436,inv_item_sk#437,inv_warehouse_sk#438,inv_quantity_on_hand#439] Batched: true, DataFilters: [isnotnull(inv_quantity_on_hand#439), isnotnull(inv_item_sk#437), isnotnull(inv_warehouse_sk#438)..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/inventory.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(inv_quantity_on_hand), IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk), IsNotNull(..., ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
                        :                 :                 :                 :                 :                 :              :              :              +- *(16) Sort [w_warehouse_sk#770 ASC NULLS FIRST], false, 0
                        :                 :                 :                 :                 :                 :              :              :                 +- AQEShuffleRead
                        :                 :                 :                 :                 :                 :              :              :                    +- ShuffleQueryStage 2
                        :                 :                 :                 :                 :                 :              :              :                       +- Exchange hashpartitioning(w_warehouse_sk#770, 200), ENSURE_REQUIREMENTS, [id=#565]
                        :                 :                 :                 :                 :                 :              :              :                          +- *(3) Filter isnotnull(w_warehouse_sk#770)
                        :                 :                 :                 :                 :                 :              :              :                             +- *(3) ColumnarToRow
                        :                 :                 :                 :                 :                 :              :              :                                +- FileScan parquet [w_warehouse_sk#770,w_warehouse_name#772] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#770)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/warehouse.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
                        :                 :                 :                 :                 :                 :              :              +- *(19) Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                        :                 :                 :                 :                 :                 :              :                 +- ShuffleQueryStage 3
                        :                 :                 :                 :                 :                 :              :                    +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#586]
                        :                 :                 :                 :                 :                 :              :                       +- *(4) Filter isnotnull(i_item_sk#668)
                        :                 :                 :                 :                 :                 :              :                          +- *(4) ColumnarToRow
                        :                 :                 :                 :                 :                 :              :                             +- FileScan parquet [i_item_sk#668,i_item_desc#672] Batched: true, DataFilters: [isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string>
                        :                 :                 :                 :                 :                 :              +- *(22) Sort [cd_demo_sk#222 ASC NULLS FIRST], false, 0
                        :                 :                 :                 :                 :                 :                 +- ShuffleQueryStage 4
                        :                 :                 :                 :                 :                 :                    +- Exchange hashpartitioning(cd_demo_sk#222, 200), ENSURE_REQUIREMENTS, [id=#609]
                        :                 :                 :                 :                 :                 :                       +- *(5) Project [cd_demo_sk#222]
                        :                 :                 :                 :                 :                 :                          +- *(5) Filter ((isnotnull(cd_marital_status#224) AND (cd_marital_status#224 = M)) AND isnotnull(cd_demo_sk#222))
                        :                 :                 :                 :                 :                 :                             +- *(5) ColumnarToRow
                        :                 :                 :                 :                 :                 :                                +- FileScan parquet [cd_demo_sk#222,cd_marital_status#224] Batched: true, DataFilters: [isnotnull(cd_marital_status#224), (cd_marital_status#224 = M), isnotnull(cd_demo_sk#222)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer_demographics.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cd_marital_status), EqualTo(cd_marital_status,M), IsNotNull(cd_demo_sk)], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string>
                        :                 :                 :                 :                 :                 +- *(25) Sort [hd_demo_sk#88 ASC NULLS FIRST], false, 0
                        :                 :                 :                 :                 :                    +- ShuffleQueryStage 5
                        :                 :                 :                 :                 :                       +- Exchange hashpartitioning(hd_demo_sk#88, 200), ENSURE_REQUIREMENTS, [id=#634]
                        :                 :                 :                 :                 :                          +- *(6) Project [hd_demo_sk#88]
                        :                 :                 :                 :                 :                             +- *(6) Filter ((isnotnull(hd_buy_potential#90) AND (hd_buy_potential#90 = 1001-5000)) AND isnotnull(hd_demo_sk#88))
                        :                 :                 :                 :                 :                                +- *(6) ColumnarToRow
                        :                 :                 :                 :                 :                                   +- FileScan parquet [hd_demo_sk#88,hd_buy_potential#90] Batched: true, DataFilters: [isnotnull(hd_buy_potential#90), (hd_buy_potential#90 = 1001-5000), isnotnull(hd_demo_sk#88)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/household_demographics.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(hd_buy_potential), EqualTo(hd_buy_potential,1001-5000), IsNotNull(hd_demo_sk)], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>
                        :                 :                 :                 :                 +- *(28) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                        :                 :                 :                 :                    +- AQEShuffleRead coalesced
                        :                 :                 :                 :                       +- ShuffleQueryStage 6
                        :                 :                 :                 :                          +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#659]
                        :                 :                 :                 :                             +- *(7) Project [d_date_sk#612, d_date#614, d_week_seq#616]
                        :                 :                 :                 :                                +- *(7) Filter ((((isnotnull(d_year#618) AND (d_year#618 = 2001)) AND isnotnull(d_date_sk#612)) AND isnotnull(d_week_seq#616)) AND isnotnull(d_date#614))
                        :                 :                 :                 :                                   +- *(7) ColumnarToRow
                        :                 :                 :                 :                                      +- FileScan parquet [d_date_sk#612,d_date#614,d_week_seq#616,d_year#618] Batched: true, DataFilters: [isnotnull(d_year#618), (d_year#618 = 2001), isnotnull(d_date_sk#612), isnotnull(d_week_seq#616),..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk), IsNotNull(d_week_seq), IsNotNull(..., ReadSchema: struct<d_date_sk:int,d_date:date,d_week_seq:int,d_year:int>
                        :                 :                 :                 +- *(31) Sort [d_week_seq#857 ASC NULLS FIRST, d_date_sk#853 ASC NULLS FIRST], false, 0
                        :                 :                 :                    +- AQEShuffleRead coalesced
                        :                 :                 :                       +- ShuffleQueryStage 7
                        :                 :                 :                          +- Exchange hashpartitioning(d_week_seq#857, d_date_sk#853, 200), ENSURE_REQUIREMENTS, [id=#682]
                        :                 :                 :                             +- *(8) Filter (isnotnull(d_week_seq#857) AND isnotnull(d_date_sk#853))
                        :                 :                 :                                +- *(8) ColumnarToRow
                        :                 :                 :                                   +- FileScan parquet [d_date_sk#853,d_week_seq#857] Batched: true, DataFilters: [isnotnull(d_week_seq#857), isnotnull(d_date_sk#853)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_week_seq:int>
                        :                 :                 +- *(34) Sort [d_date_sk#881 ASC NULLS FIRST], false, 0
                        :                 :                    +- AQEShuffleRead coalesced
                        :                 :                       +- ShuffleQueryStage 8
                        :                 :                          +- Exchange hashpartitioning(d_date_sk#881, 200), ENSURE_REQUIREMENTS, [id=#703]
                        :                 :                             +- *(9) Filter (isnotnull(d_date#883) AND isnotnull(d_date_sk#881))
                        :                 :                                +- *(9) ColumnarToRow
                        :                 :                                   +- FileScan parquet [d_date_sk#881,d_date#883] Batched: true, DataFilters: [isnotnull(d_date#883), isnotnull(d_date_sk#881)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date>
                        :                 +- *(37) Sort [p_promo_sk#98 ASC NULLS FIRST], false, 0
                        :                    +- AQEShuffleRead coalesced
                        :                       +- ShuffleQueryStage 9
                        :                          +- Exchange hashpartitioning(p_promo_sk#98, 200), ENSURE_REQUIREMENTS, [id=#724]
                        :                             +- *(10) Filter isnotnull(p_promo_sk#98)
                        :                                +- *(10) ColumnarToRow
                        :                                   +- FileScan parquet [p_promo_sk#98] Batched: true, DataFilters: [isnotnull(p_promo_sk#98)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/promotion.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(p_promo_sk)], ReadSchema: struct<p_promo_sk:int>
                        +- *(40) Sort [cr_item_sk#348 ASC NULLS FIRST, cr_order_number#362L ASC NULLS FIRST], false, 0
                           +- AQEShuffleRead coalesced
                              +- ShuffleQueryStage 10
                                 +- Exchange hashpartitioning(cr_item_sk#348, cr_order_number#362L, 200), ENSURE_REQUIREMENTS, [id=#745]
                                    +- *(11) Filter (isnotnull(cr_item_sk#348) AND isnotnull(cr_order_number#362L))
                                       +- *(11) ColumnarToRow
                                          +- FileScan parquet [cr_item_sk#348,cr_order_number#362L] Batched: true, DataFilters: [isnotnull(cr_item_sk#348), isnotnull(cr_order_number#362L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cr_item_sk), IsNotNull(cr_order_number)], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint>
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[total_cnt#852L DESC NULLS LAST,i_item_desc#672 ASC NULLS FIRST,w_warehouse_name#772 ASC NULLS FIRST,d_week_seq#616 ASC NULLS FIRST], output=[i_item_desc#672,w_warehouse_name#772,d_week_seq#616,no_promo#850L,promo#851L,total_cnt#852L])
   +- HashAggregate(keys=[i_item_desc#672, w_warehouse_name#772, d_week_seq#616], functions=[sum(CASE WHEN isnull(p_promo_sk#98) THEN 1 ELSE 0 END), sum(CASE WHEN isnotnull(p_promo_sk#98) THEN 1 ELSE 0 END), count(1)], output=[i_item_desc#672, w_warehouse_name#772, d_week_seq#616, no_promo#850L, promo#851L, total_cnt#852L])
      +- Exchange hashpartitioning(i_item_desc#672, w_warehouse_name#772, d_week_seq#616, 200), ENSURE_REQUIREMENTS, [id=#354]
         +- HashAggregate(keys=[i_item_desc#672, w_warehouse_name#772, d_week_seq#616], functions=[partial_sum(CASE WHEN isnull(p_promo_sk#98) THEN 1 ELSE 0 END), partial_sum(CASE WHEN isnotnull(p_promo_sk#98) THEN 1 ELSE 0 END), partial_count(1)], output=[i_item_desc#672, w_warehouse_name#772, d_week_seq#616, sum#921L, sum#922L, count#923L])
            +- Project [w_warehouse_name#772, i_item_desc#672, d_week_seq#616, p_promo_sk#98]
               +- SortMergeJoin [cs_item_sk#559, cs_order_number#561L], [cr_item_sk#348, cr_order_number#362L], LeftOuter
                  :- Sort [cs_item_sk#559 ASC NULLS FIRST, cs_order_number#561L ASC NULLS FIRST], false, 0
                  :  +- Exchange hashpartitioning(cs_item_sk#559, cs_order_number#561L, 200), ENSURE_REQUIREMENTS, [id=#346]
                  :     +- Project [cs_item_sk#559, cs_order_number#561L, w_warehouse_name#772, i_item_desc#672, d_week_seq#616, p_promo_sk#98]
                  :        +- SortMergeJoin [cs_promo_sk#560], [p_promo_sk#98], LeftOuter
                  :           :- Sort [cs_promo_sk#560 ASC NULLS FIRST], false, 0
                  :           :  +- Exchange hashpartitioning(cs_promo_sk#560, 200), ENSURE_REQUIREMENTS, [id=#338]
                  :           :     +- Project [cs_item_sk#559, cs_promo_sk#560, cs_order_number#561L, w_warehouse_name#772, i_item_desc#672, d_week_seq#616]
                  :           :        +- SortMergeJoin [cs_ship_date_sk#546], [d_date_sk#881], Inner, (d_date#883 > date_add(d_date#614, 5))
                  :           :           :- Sort [cs_ship_date_sk#546 ASC NULLS FIRST], false, 0
                  :           :           :  +- Exchange hashpartitioning(cs_ship_date_sk#546, 200), ENSURE_REQUIREMENTS, [id=#330]
                  :           :           :     +- Project [cs_ship_date_sk#546, cs_item_sk#559, cs_promo_sk#560, cs_order_number#561L, w_warehouse_name#772, i_item_desc#672, d_date#614, d_week_seq#616]
                  :           :           :        +- SortMergeJoin [d_week_seq#616, inv_date_sk#436], [d_week_seq#857, d_date_sk#853], Inner
                  :           :           :           :- Sort [d_week_seq#616 ASC NULLS FIRST, inv_date_sk#436 ASC NULLS FIRST], false, 0
                  :           :           :           :  +- Exchange hashpartitioning(d_week_seq#616, inv_date_sk#436, 200), ENSURE_REQUIREMENTS, [id=#322]
                  :           :           :           :     +- Project [cs_ship_date_sk#546, cs_item_sk#559, cs_promo_sk#560, cs_order_number#561L, inv_date_sk#436, w_warehouse_name#772, i_item_desc#672, d_date#614, d_week_seq#616]
                  :           :           :           :        +- SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#612], Inner
                  :           :           :           :           :- Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
                  :           :           :           :           :  +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#314]
                  :           :           :           :           :     +- Project [cs_sold_date_sk#544, cs_ship_date_sk#546, cs_item_sk#559, cs_promo_sk#560, cs_order_number#561L, inv_date_sk#436, w_warehouse_name#772, i_item_desc#672]
                  :           :           :           :           :        +- SortMergeJoin [cs_bill_hdemo_sk#549], [hd_demo_sk#88], Inner
                  :           :           :           :           :           :- Sort [cs_bill_hdemo_sk#549 ASC NULLS FIRST], false, 0
                  :           :           :           :           :           :  +- Exchange hashpartitioning(cs_bill_hdemo_sk#549, 200), ENSURE_REQUIREMENTS, [id=#306]
                  :           :           :           :           :           :     +- Project [cs_sold_date_sk#544, cs_ship_date_sk#546, cs_bill_hdemo_sk#549, cs_item_sk#559, cs_promo_sk#560, cs_order_number#561L, inv_date_sk#436, w_warehouse_name#772, i_item_desc#672]
                  :           :           :           :           :           :        +- SortMergeJoin [cs_bill_cdemo_sk#548], [cd_demo_sk#222], Inner
                  :           :           :           :           :           :           :- Sort [cs_bill_cdemo_sk#548 ASC NULLS FIRST], false, 0
                  :           :           :           :           :           :           :  +- Exchange hashpartitioning(cs_bill_cdemo_sk#548, 200), ENSURE_REQUIREMENTS, [id=#298]
                  :           :           :           :           :           :           :     +- Project [cs_sold_date_sk#544, cs_ship_date_sk#546, cs_bill_cdemo_sk#548, cs_bill_hdemo_sk#549, cs_item_sk#559, cs_promo_sk#560, cs_order_number#561L, inv_date_sk#436, w_warehouse_name#772, i_item_desc#672]
                  :           :           :           :           :           :           :        +- SortMergeJoin [cs_item_sk#559], [i_item_sk#668], Inner
                  :           :           :           :           :           :           :           :- Sort [cs_item_sk#559 ASC NULLS FIRST], false, 0
                  :           :           :           :           :           :           :           :  +- Exchange hashpartitioning(cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#290]
                  :           :           :           :           :           :           :           :     +- Project [cs_sold_date_sk#544, cs_ship_date_sk#546, cs_bill_cdemo_sk#548, cs_bill_hdemo_sk#549, cs_item_sk#559, cs_promo_sk#560, cs_order_number#561L, inv_date_sk#436, w_warehouse_name#772]
                  :           :           :           :           :           :           :           :        +- SortMergeJoin [inv_warehouse_sk#438], [w_warehouse_sk#770], Inner
                  :           :           :           :           :           :           :           :           :- Sort [inv_warehouse_sk#438 ASC NULLS FIRST], false, 0
                  :           :           :           :           :           :           :           :           :  +- Exchange hashpartitioning(inv_warehouse_sk#438, 200), ENSURE_REQUIREMENTS, [id=#282]
                  :           :           :           :           :           :           :           :           :     +- Project [cs_sold_date_sk#544, cs_ship_date_sk#546, cs_bill_cdemo_sk#548, cs_bill_hdemo_sk#549, cs_item_sk#559, cs_promo_sk#560, cs_order_number#561L, inv_date_sk#436, inv_warehouse_sk#438]
                  :           :           :           :           :           :           :           :           :        +- SortMergeJoin [cs_item_sk#559], [inv_item_sk#437], Inner, (inv_quantity_on_hand#439 < cs_quantity#562)
                  :           :           :           :           :           :           :           :           :           :- Sort [cs_item_sk#559 ASC NULLS FIRST], false, 0
                  :           :           :           :           :           :           :           :           :           :  +- Exchange hashpartitioning(cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#274]
                  :           :           :           :           :           :           :           :           :           :     +- Filter (((((isnotnull(cs_quantity#562) AND isnotnull(cs_item_sk#559)) AND isnotnull(cs_bill_cdemo_sk#548)) AND isnotnull(cs_bill_hdemo_sk#549)) AND isnotnull(cs_sold_date_sk#544)) AND isnotnull(cs_ship_date_sk#546))
                  :           :           :           :           :           :           :           :           :           :        +- FileScan parquet [cs_sold_date_sk#544,cs_ship_date_sk#546,cs_bill_cdemo_sk#548,cs_bill_hdemo_sk#549,cs_item_sk#559,cs_promo_sk#560,cs_order_number#561L,cs_quantity#562] Batched: true, DataFilters: [isnotnull(cs_quantity#562), isnotnull(cs_item_sk#559), isnotnull(cs_bill_cdemo_sk#548), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_quantity), IsNotNull(cs_item_sk), IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_hd..., ReadSchema: struct<cs_sold_date_sk:int,cs_ship_date_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_item_...
                  :           :           :           :           :           :           :           :           :           +- Sort [inv_item_sk#437 ASC NULLS FIRST], false, 0
                  :           :           :           :           :           :           :           :           :              +- Exchange hashpartitioning(inv_item_sk#437, 200), ENSURE_REQUIREMENTS, [id=#275]
                  :           :           :           :           :           :           :           :           :                 +- Filter (((isnotnull(inv_quantity_on_hand#439) AND isnotnull(inv_item_sk#437)) AND isnotnull(inv_warehouse_sk#438)) AND isnotnull(inv_date_sk#436))
                  :           :           :           :           :           :           :           :           :                    +- FileScan parquet [inv_date_sk#436,inv_item_sk#437,inv_warehouse_sk#438,inv_quantity_on_hand#439] Batched: true, DataFilters: [isnotnull(inv_quantity_on_hand#439), isnotnull(inv_item_sk#437), isnotnull(inv_warehouse_sk#438)..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/inventory.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(inv_quantity_on_hand), IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk), IsNotNull(..., ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
                  :           :           :           :           :           :           :           :           +- Sort [w_warehouse_sk#770 ASC NULLS FIRST], false, 0
                  :           :           :           :           :           :           :           :              +- Exchange hashpartitioning(w_warehouse_sk#770, 200), ENSURE_REQUIREMENTS, [id=#283]
                  :           :           :           :           :           :           :           :                 +- Filter isnotnull(w_warehouse_sk#770)
                  :           :           :           :           :           :           :           :                    +- FileScan parquet [w_warehouse_sk#770,w_warehouse_name#772] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#770)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/warehouse.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
                  :           :           :           :           :           :           :           +- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                  :           :           :           :           :           :           :              +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#291]
                  :           :           :           :           :           :           :                 +- Filter isnotnull(i_item_sk#668)
                  :           :           :           :           :           :           :                    +- FileScan parquet [i_item_sk#668,i_item_desc#672] Batched: true, DataFilters: [isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string>
                  :           :           :           :           :           :           +- Sort [cd_demo_sk#222 ASC NULLS FIRST], false, 0
                  :           :           :           :           :           :              +- Exchange hashpartitioning(cd_demo_sk#222, 200), ENSURE_REQUIREMENTS, [id=#299]
                  :           :           :           :           :           :                 +- Project [cd_demo_sk#222]
                  :           :           :           :           :           :                    +- Filter ((isnotnull(cd_marital_status#224) AND (cd_marital_status#224 = M)) AND isnotnull(cd_demo_sk#222))
                  :           :           :           :           :           :                       +- FileScan parquet [cd_demo_sk#222,cd_marital_status#224] Batched: true, DataFilters: [isnotnull(cd_marital_status#224), (cd_marital_status#224 = M), isnotnull(cd_demo_sk#222)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer_demographics.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cd_marital_status), EqualTo(cd_marital_status,M), IsNotNull(cd_demo_sk)], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string>
                  :           :           :           :           :           +- Sort [hd_demo_sk#88 ASC NULLS FIRST], false, 0
                  :           :           :           :           :              +- Exchange hashpartitioning(hd_demo_sk#88, 200), ENSURE_REQUIREMENTS, [id=#307]
                  :           :           :           :           :                 +- Project [hd_demo_sk#88]
                  :           :           :           :           :                    +- Filter ((isnotnull(hd_buy_potential#90) AND (hd_buy_potential#90 = 1001-5000)) AND isnotnull(hd_demo_sk#88))
                  :           :           :           :           :                       +- FileScan parquet [hd_demo_sk#88,hd_buy_potential#90] Batched: true, DataFilters: [isnotnull(hd_buy_potential#90), (hd_buy_potential#90 = 1001-5000), isnotnull(hd_demo_sk#88)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/household_demographics.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(hd_buy_potential), EqualTo(hd_buy_potential,1001-5000), IsNotNull(hd_demo_sk)], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>
                  :           :           :           :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                  :           :           :           :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#315]
                  :           :           :           :                 +- Project [d_date_sk#612, d_date#614, d_week_seq#616]
                  :           :           :           :                    +- Filter ((((isnotnull(d_year#618) AND (d_year#618 = 2001)) AND isnotnull(d_date_sk#612)) AND isnotnull(d_week_seq#616)) AND isnotnull(d_date#614))
                  :           :           :           :                       +- FileScan parquet [d_date_sk#612,d_date#614,d_week_seq#616,d_year#618] Batched: true, DataFilters: [isnotnull(d_year#618), (d_year#618 = 2001), isnotnull(d_date_sk#612), isnotnull(d_week_seq#616),..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk), IsNotNull(d_week_seq), IsNotNull(..., ReadSchema: struct<d_date_sk:int,d_date:date,d_week_seq:int,d_year:int>
                  :           :           :           +- Sort [d_week_seq#857 ASC NULLS FIRST, d_date_sk#853 ASC NULLS FIRST], false, 0
                  :           :           :              +- Exchange hashpartitioning(d_week_seq#857, d_date_sk#853, 200), ENSURE_REQUIREMENTS, [id=#323]
                  :           :           :                 +- Filter (isnotnull(d_week_seq#857) AND isnotnull(d_date_sk#853))
                  :           :           :                    +- FileScan parquet [d_date_sk#853,d_week_seq#857] Batched: true, DataFilters: [isnotnull(d_week_seq#857), isnotnull(d_date_sk#853)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_week_seq:int>
                  :           :           +- Sort [d_date_sk#881 ASC NULLS FIRST], false, 0
                  :           :              +- Exchange hashpartitioning(d_date_sk#881, 200), ENSURE_REQUIREMENTS, [id=#331]
                  :           :                 +- Filter (isnotnull(d_date#883) AND isnotnull(d_date_sk#881))
                  :           :                    +- FileScan parquet [d_date_sk#881,d_date#883] Batched: true, DataFilters: [isnotnull(d_date#883), isnotnull(d_date_sk#881)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date>
                  :           +- Sort [p_promo_sk#98 ASC NULLS FIRST], false, 0
                  :              +- Exchange hashpartitioning(p_promo_sk#98, 200), ENSURE_REQUIREMENTS, [id=#339]
                  :                 +- Filter isnotnull(p_promo_sk#98)
                  :                    +- FileScan parquet [p_promo_sk#98] Batched: true, DataFilters: [isnotnull(p_promo_sk#98)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/promotion.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(p_promo_sk)], ReadSchema: struct<p_promo_sk:int>
                  +- Sort [cr_item_sk#348 ASC NULLS FIRST, cr_order_number#362L ASC NULLS FIRST], false, 0
                     +- Exchange hashpartitioning(cr_item_sk#348, cr_order_number#362L, 200), ENSURE_REQUIREMENTS, [id=#347]
                        +- Filter (isnotnull(cr_item_sk#348) AND isnotnull(cr_order_number#362L))
                           +- FileScan parquet [cr_item_sk#348,cr_order_number#362L] Batched: true, DataFilters: [isnotnull(cr_item_sk#348), isnotnull(cr_order_number#362L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cr_item_sk), IsNotNull(cr_order_number)], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint>
