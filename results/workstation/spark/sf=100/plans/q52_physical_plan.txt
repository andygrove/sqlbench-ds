AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[d_year#618 ASC NULLS FIRST,ext_price#12454 DESC NULLS LAST,brand_id#12452 ASC NULLS FIRST], output=[d_year#618,brand_id#12452,brand#12453,ext_price#12454])
   +- *(10) HashAggregate(keys=[d_year#618, i_brand#676, i_brand_id#675], functions=[sum(UnscaledValue(ss_ext_sales_price#267))], output=[d_year#618, brand_id#12452, brand#12453, ext_price#12454])
      +- AQEShuffleRead coalesced
         +- ShuffleQueryStage 4
            +- Exchange hashpartitioning(d_year#618, i_brand#676, i_brand_id#675, 200), ENSURE_REQUIREMENTS, [id=#155514]
               +- *(9) HashAggregate(keys=[d_year#618, i_brand#676, i_brand_id#675], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#267))], output=[d_year#618, i_brand#676, i_brand_id#675, sum#12461L])
                  +- *(9) Project [d_year#618, ss_ext_sales_price#267, i_brand_id#675, i_brand#676]
                     +- *(9) SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
                        :- *(7) Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                        :  +- AQEShuffleRead coalesced
                        :     +- ShuffleQueryStage 3
                        :        +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#155430]
                        :           +- *(6) Project [d_year#618, ss_item_sk#254, ss_ext_sales_price#267]
                        :              +- *(6) SortMergeJoin [d_date_sk#612], [ss_sold_date_sk#252], Inner
                        :                 :- *(4) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                        :                 :  +- AQEShuffleRead coalesced
                        :                 :     +- ShuffleQueryStage 0
                        :                 :        +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#155207]
                        :                 :           +- *(1) Project [d_date_sk#612, d_year#618]
                        :                 :              +- *(1) Filter ((((isnotnull(d_moy#620) AND isnotnull(d_year#618)) AND (d_moy#620 = 12)) AND (d_year#618 = 2002)) AND isnotnull(d_date_sk#612))
                        :                 :                 +- *(1) ColumnarToRow
                        :                 :                    +- FileScan parquet [d_date_sk#612,d_year#618,d_moy#620] Batched: true, DataFilters: [isnotnull(d_moy#620), isnotnull(d_year#618), (d_moy#620 = 12), (d_year#618 = 2002), isnotnull(d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,12), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                        :                 +- *(5) Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                        :                    +- AQEShuffleRead coalesced
                        :                       +- ShuffleQueryStage 1
                        :                          +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#155226]
                        :                             +- *(2) Filter (isnotnull(ss_sold_date_sk#252) AND isnotnull(ss_item_sk#254))
                        :                                +- *(2) ColumnarToRow
                        :                                   +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_ext_sales_price#267] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_item_sk#254)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
                        +- *(8) Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                           +- AQEShuffleRead coalesced
                              +- ShuffleQueryStage 2
                                 +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#155249]
                                    +- *(3) Project [i_item_sk#668, i_brand_id#675, i_brand#676]
                                       +- *(3) Filter ((isnotnull(i_manager_id#688) AND (i_manager_id#688 = 1)) AND isnotnull(i_item_sk#668))
                                          +- *(3) ColumnarToRow
                                             +- FileScan parquet [i_item_sk#668,i_brand_id#675,i_brand#676,i_manager_id#688] Batched: true, DataFilters: [isnotnull(i_manager_id#688), (i_manager_id#688 = 1), isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_manager_id), EqualTo(i_manager_id,1), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manager_id:int>
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[d_year#618 ASC NULLS FIRST,ext_price#12454 DESC NULLS LAST,brand_id#12452 ASC NULLS FIRST], output=[d_year#618,brand_id#12452,brand#12453,ext_price#12454])
   +- HashAggregate(keys=[d_year#618, i_brand#676, i_brand_id#675], functions=[sum(UnscaledValue(ss_ext_sales_price#267))], output=[d_year#618, brand_id#12452, brand#12453, ext_price#12454])
      +- Exchange hashpartitioning(d_year#618, i_brand#676, i_brand_id#675, 200), ENSURE_REQUIREMENTS, [id=#155154]
         +- HashAggregate(keys=[d_year#618, i_brand#676, i_brand_id#675], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#267))], output=[d_year#618, i_brand#676, i_brand_id#675, sum#12461L])
            +- Project [d_year#618, ss_ext_sales_price#267, i_brand_id#675, i_brand#676]
               +- SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
                  :- Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                  :  +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#155146]
                  :     +- Project [d_year#618, ss_item_sk#254, ss_ext_sales_price#267]
                  :        +- SortMergeJoin [d_date_sk#612], [ss_sold_date_sk#252], Inner
                  :           :- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                  :           :  +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#155138]
                  :           :     +- Project [d_date_sk#612, d_year#618]
                  :           :        +- Filter ((((isnotnull(d_moy#620) AND isnotnull(d_year#618)) AND (d_moy#620 = 12)) AND (d_year#618 = 2002)) AND isnotnull(d_date_sk#612))
                  :           :           +- FileScan parquet [d_date_sk#612,d_year#618,d_moy#620] Batched: true, DataFilters: [isnotnull(d_moy#620), isnotnull(d_year#618), (d_moy#620 = 12), (d_year#618 = 2002), isnotnull(d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,12), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                  :           +- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                  :              +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#155139]
                  :                 +- Filter (isnotnull(ss_sold_date_sk#252) AND isnotnull(ss_item_sk#254))
                  :                    +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_ext_sales_price#267] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_item_sk#254)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
                  +- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                     +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#155147]
                        +- Project [i_item_sk#668, i_brand_id#675, i_brand#676]
                           +- Filter ((isnotnull(i_manager_id#688) AND (i_manager_id#688 = 1)) AND isnotnull(i_item_sk#668))
                              +- FileScan parquet [i_item_sk#668,i_brand_id#675,i_brand#676,i_manager_id#688] Batched: true, DataFilters: [isnotnull(i_manager_id#688), (i_manager_id#688 = 1), isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_manager_id), EqualTo(i_manager_id,1), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manager_id:int>
