AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_category#17457 ASC NULLS FIRST,i_class#17458 ASC NULLS FIRST,i_brand#17459 ASC NULLS FIRST,i_product_name#17460 ASC NULLS FIRST,d_year#17461 ASC NULLS FIRST,d_qoy#17462 ASC NULLS FIRST,d_moy#17463 ASC NULLS FIRST,s_store_id#17464 ASC NULLS FIRST,sumsales#17443 ASC NULLS FIRST,rk#17444 ASC NULLS FIRST], output=[i_category#17457,i_class#17458,i_brand#17459,i_product_name#17460,d_year#17461,d_qoy#17462,d_moy#17463,s_store_id#17464,sumsales#17443,rk#17444])
   +- *(16) Filter (rk#17444 <= 100)
      +- Window [rank(sumsales#17443) windowspecdefinition(i_category#17457, sumsales#17443 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#17444], [i_category#17457], [sumsales#17443 DESC NULLS LAST]
         +- *(15) Sort [i_category#17457 ASC NULLS FIRST, sumsales#17443 DESC NULLS LAST], false, 0
            +- AQEShuffleRead coalesced
               +- ShuffleQueryStage 7
                  +- Exchange hashpartitioning(i_category#17457, 200), ENSURE_REQUIREMENTS, [id=#212707]
                     +- *(14) HashAggregate(keys=[i_category#17457, i_class#17458, i_brand#17459, i_product_name#17460, d_year#17461, d_qoy#17462, d_moy#17463, s_store_id#17464, spark_grouping_id#17456L], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#265 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#262 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))], output=[i_category#17457, i_class#17458, i_brand#17459, i_product_name#17460, d_year#17461, d_qoy#17462, d_moy#17463, s_store_id#17464, sumsales#17443])
                        +- AQEShuffleRead coalesced
                           +- ShuffleQueryStage 6
                              +- Exchange hashpartitioning(i_category#17457, i_class#17458, i_brand#17459, i_product_name#17460, d_year#17461, d_qoy#17462, d_moy#17463, s_store_id#17464, spark_grouping_id#17456L, 200), ENSURE_REQUIREMENTS, [id=#212652]
                                 +- *(13) HashAggregate(keys=[i_category#17457, i_class#17458, i_brand#17459, i_product_name#17460, d_year#17461, d_qoy#17462, d_moy#17463, s_store_id#17464, spark_grouping_id#17456L], functions=[partial_sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#265 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#262 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))], output=[i_category#17457, i_class#17458, i_brand#17459, i_product_name#17460, d_year#17461, d_qoy#17462, d_moy#17463, s_store_id#17464, spark_grouping_id#17456L, sum#17483, isEmpty#17484])
                                    +- *(13) Expand [[ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, d_year#618, d_qoy#622, d_moy#620, s_store_id#713, 0], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, d_year#618, d_qoy#622, d_moy#620, null, 1], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, d_year#618, d_qoy#622, null, null, 3], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, d_year#618, null, null, null, 7], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, null, null, null, null, 15], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, null, null, null, null, null, 31], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, null, null, null, null, null, null, 63], [ss_quantity#262, ss_sales_price#265, i_category#680, null, null, null, null, null, null, null, 127], [ss_quantity#262, ss_sales_price#265, null, null, null, null, null, null, null, null, 255]], [ss_quantity#262, ss_sales_price#265, i_category#17457, i_class#17458, i_brand#17459, i_product_name#17460, d_year#17461, d_qoy#17462, d_moy#17463, s_store_id#17464, spark_grouping_id#17456L]
                                       +- *(13) Project [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, d_year#618, d_qoy#622, d_moy#620, s_store_id#713]
                                          +- *(13) SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
                                             :- *(11) Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                                             :  +- AQEShuffleRead coalesced
                                             :     +- ShuffleQueryStage 5
                                             :        +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#212540]
                                             :           +- *(10) Project [ss_item_sk#254, ss_quantity#262, ss_sales_price#265, d_year#618, d_moy#620, d_qoy#622, s_store_id#713]
                                             :              +- *(10) SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
                                             :                 :- *(8) Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
                                             :                 :  +- AQEShuffleRead coalesced
                                             :                 :     +- ShuffleQueryStage 4
                                             :                 :        +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#212405]
                                             :                 :           +- *(7) Project [ss_item_sk#254, ss_store_sk#259, ss_quantity#262, ss_sales_price#265, d_year#618, d_moy#620, d_qoy#622]
                                             :                 :              +- *(7) SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
                                             :                 :                 :- *(5) Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                                             :                 :                 :  +- AQEShuffleRead coalesced
                                             :                 :                 :     +- ShuffleQueryStage 0
                                             :                 :                 :        +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#211981]
                                             :                 :                 :           +- *(1) Filter ((isnotnull(ss_sold_date_sk#252) AND isnotnull(ss_store_sk#259)) AND isnotnull(ss_item_sk#254))
                                             :                 :                 :              +- *(1) ColumnarToRow
                                             :                 :                 :                 +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_store_sk#259,ss_quantity#262,ss_sales_price#265] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_store_sk#259), isnotnull(ss_item_sk#254)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_price:decimal(...
                                             :                 :                 +- *(6) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                                             :                 :                    +- AQEShuffleRead coalesced
                                             :                 :                       +- ShuffleQueryStage 1
                                             :                 :                          +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#212000]
                                             :                 :                             +- *(2) Project [d_date_sk#612, d_year#618, d_moy#620, d_qoy#622]
                                             :                 :                                +- *(2) Filter (((isnotnull(d_month_seq#615) AND (d_month_seq#615 >= 1208)) AND (d_month_seq#615 <= 1219)) AND isnotnull(d_date_sk#612))
                                             :                 :                                   +- *(2) ColumnarToRow
                                             :                 :                                      +- FileScan parquet [d_date_sk#612,d_month_seq#615,d_year#618,d_moy#620,d_qoy#622] Batched: true, DataFilters: [isnotnull(d_month_seq#615), (d_month_seq#615 >= 1208), (d_month_seq#615 <= 1219), isnotnull(d_da..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1208), LessThanOrEqual(d_month_seq,1219),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>
                                             :                 +- *(9) Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
                                             :                    +- AQEShuffleRead coalesced
                                             :                       +- ShuffleQueryStage 2
                                             :                          +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#212023]
                                             :                             +- *(3) Filter isnotnull(s_store_sk#712)
                                             :                                +- *(3) ColumnarToRow
                                             :                                   +- FileScan parquet [s_store_sk#712,s_store_id#713] Batched: true, DataFilters: [isnotnull(s_store_sk#712)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string>
                                             +- *(12) Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                                                +- AQEShuffleRead coalesced
                                                   +- ShuffleQueryStage 3
                                                      +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#212044]
                                                         +- *(4) Filter isnotnull(i_item_sk#668)
                                                            +- *(4) ColumnarToRow
                                                               +- FileScan parquet [i_item_sk#668,i_brand#676,i_class#678,i_category#680,i_product_name#689] Batched: true, DataFilters: [isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_category#17457 ASC NULLS FIRST,i_class#17458 ASC NULLS FIRST,i_brand#17459 ASC NULLS FIRST,i_product_name#17460 ASC NULLS FIRST,d_year#17461 ASC NULLS FIRST,d_qoy#17462 ASC NULLS FIRST,d_moy#17463 ASC NULLS FIRST,s_store_id#17464 ASC NULLS FIRST,sumsales#17443 ASC NULLS FIRST,rk#17444 ASC NULLS FIRST], output=[i_category#17457,i_class#17458,i_brand#17459,i_product_name#17460,d_year#17461,d_qoy#17462,d_moy#17463,s_store_id#17464,sumsales#17443,rk#17444])
   +- Filter (rk#17444 <= 100)
      +- Window [rank(sumsales#17443) windowspecdefinition(i_category#17457, sumsales#17443 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#17444], [i_category#17457], [sumsales#17443 DESC NULLS LAST]
         +- Sort [i_category#17457 ASC NULLS FIRST, sumsales#17443 DESC NULLS LAST], false, 0
            +- Exchange hashpartitioning(i_category#17457, 200), ENSURE_REQUIREMENTS, [id=#211909]
               +- HashAggregate(keys=[i_category#17457, i_class#17458, i_brand#17459, i_product_name#17460, d_year#17461, d_qoy#17462, d_moy#17463, s_store_id#17464, spark_grouping_id#17456L], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#265 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#262 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))], output=[i_category#17457, i_class#17458, i_brand#17459, i_product_name#17460, d_year#17461, d_qoy#17462, d_moy#17463, s_store_id#17464, sumsales#17443])
                  +- Exchange hashpartitioning(i_category#17457, i_class#17458, i_brand#17459, i_product_name#17460, d_year#17461, d_qoy#17462, d_moy#17463, s_store_id#17464, spark_grouping_id#17456L, 200), ENSURE_REQUIREMENTS, [id=#211906]
                     +- HashAggregate(keys=[i_category#17457, i_class#17458, i_brand#17459, i_product_name#17460, d_year#17461, d_qoy#17462, d_moy#17463, s_store_id#17464, spark_grouping_id#17456L], functions=[partial_sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#265 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#262 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))], output=[i_category#17457, i_class#17458, i_brand#17459, i_product_name#17460, d_year#17461, d_qoy#17462, d_moy#17463, s_store_id#17464, spark_grouping_id#17456L, sum#17483, isEmpty#17484])
                        +- Expand [[ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, d_year#618, d_qoy#622, d_moy#620, s_store_id#713, 0], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, d_year#618, d_qoy#622, d_moy#620, null, 1], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, d_year#618, d_qoy#622, null, null, 3], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, d_year#618, null, null, null, 7], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, null, null, null, null, 15], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, null, null, null, null, null, 31], [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, null, null, null, null, null, null, 63], [ss_quantity#262, ss_sales_price#265, i_category#680, null, null, null, null, null, null, null, 127], [ss_quantity#262, ss_sales_price#265, null, null, null, null, null, null, null, null, 255]], [ss_quantity#262, ss_sales_price#265, i_category#17457, i_class#17458, i_brand#17459, i_product_name#17460, d_year#17461, d_qoy#17462, d_moy#17463, s_store_id#17464, spark_grouping_id#17456L]
                           +- Project [ss_quantity#262, ss_sales_price#265, i_category#680, i_class#678, i_brand#676, i_product_name#689, d_year#618, d_qoy#622, d_moy#620, s_store_id#713]
                              +- SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
                                 :- Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                                 :  +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#211897]
                                 :     +- Project [ss_item_sk#254, ss_quantity#262, ss_sales_price#265, d_year#618, d_moy#620, d_qoy#622, s_store_id#713]
                                 :        +- SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
                                 :           :- Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
                                 :           :  +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#211889]
                                 :           :     +- Project [ss_item_sk#254, ss_store_sk#259, ss_quantity#262, ss_sales_price#265, d_year#618, d_moy#620, d_qoy#622]
                                 :           :        +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
                                 :           :           :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                                 :           :           :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#211881]
                                 :           :           :     +- Filter ((isnotnull(ss_sold_date_sk#252) AND isnotnull(ss_store_sk#259)) AND isnotnull(ss_item_sk#254))
                                 :           :           :        +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_store_sk#259,ss_quantity#262,ss_sales_price#265] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_store_sk#259), isnotnull(ss_item_sk#254)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_price:decimal(...
                                 :           :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                                 :           :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#211882]
                                 :           :                 +- Project [d_date_sk#612, d_year#618, d_moy#620, d_qoy#622]
                                 :           :                    +- Filter (((isnotnull(d_month_seq#615) AND (d_month_seq#615 >= 1208)) AND (d_month_seq#615 <= 1219)) AND isnotnull(d_date_sk#612))
                                 :           :                       +- FileScan parquet [d_date_sk#612,d_month_seq#615,d_year#618,d_moy#620,d_qoy#622] Batched: true, DataFilters: [isnotnull(d_month_seq#615), (d_month_seq#615 >= 1208), (d_month_seq#615 <= 1219), isnotnull(d_da..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1208), LessThanOrEqual(d_month_seq,1219),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>
                                 :           +- Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
                                 :              +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#211890]
                                 :                 +- Filter isnotnull(s_store_sk#712)
                                 :                    +- FileScan parquet [s_store_sk#712,s_store_id#713] Batched: true, DataFilters: [isnotnull(s_store_sk#712)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string>
                                 +- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                                    +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#211898]
                                       +- Filter isnotnull(i_item_sk#668)
                                          +- FileScan parquet [i_item_sk#668,i_brand#676,i_class#678,i_category#680,i_product_name#689] Batched: true, DataFilters: [isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>
