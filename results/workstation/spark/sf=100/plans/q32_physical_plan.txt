AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(17) HashAggregate(keys=[], functions=[sum(UnscaledValue(cs_ext_discount_amt#566))], output=[excess discount amount#850])
   +- ShuffleQueryStage 8
      +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#1089]
         +- *(16) HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(cs_ext_discount_amt#566))], output=[sum#919L])
            +- *(16) Project [cs_ext_discount_amt#566]
               +- *(16) SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#612], Inner
                  :- *(14) Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
                  :  +- AQEShuffleRead coalesced
                  :     +- ShuffleQueryStage 7
                  :        +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#994]
                  :           +- *(13) Project [cs_sold_date_sk#544, cs_ext_discount_amt#566]
                  :              +- *(13) SortMergeJoin [i_item_sk#668], [cs_item_sk#869], Inner, (cast(cs_ext_discount_amt#566 as decimal(14,7)) > (1.3 * avg(cs_ext_discount_amt))#853)
                  :                 :- *(11) Project [cs_sold_date_sk#544, cs_ext_discount_amt#566, i_item_sk#668]
                  :                 :  +- *(11) SortMergeJoin [cs_item_sk#559], [i_item_sk#668], Inner
                  :                 :     :- *(9) Sort [cs_item_sk#559 ASC NULLS FIRST], false, 0
                  :                 :     :  +- AQEShuffleRead coalesced
                  :                 :     :     +- ShuffleQueryStage 0
                  :                 :     :        +- Exchange hashpartitioning(cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#292]
                  :                 :     :           +- *(1) Filter ((isnotnull(cs_item_sk#559) AND isnotnull(cs_ext_discount_amt#566)) AND isnotnull(cs_sold_date_sk#544))
                  :                 :     :              +- *(1) ColumnarToRow
                  :                 :     :                 +- FileScan parquet [cs_sold_date_sk#544,cs_item_sk#559,cs_ext_discount_amt#566] Batched: true, DataFilters: [isnotnull(cs_item_sk#559), isnotnull(cs_ext_discount_amt#566), isnotnull(cs_sold_date_sk#544)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_ext_discount_amt), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_ext_discount_amt:decimal(7,2)>
                  :                 :     +- *(10) Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                  :                 :        +- AQEShuffleRead coalesced
                  :                 :           +- ShuffleQueryStage 1
                  :                 :              +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#311]
                  :                 :                 +- *(2) Project [i_item_sk#668]
                  :                 :                    +- *(2) Filter ((isnotnull(i_manufact_id#681) AND (i_manufact_id#681 = 283)) AND isnotnull(i_item_sk#668))
                  :                 :                       +- *(2) ColumnarToRow
                  :                 :                          +- FileScan parquet [i_item_sk#668,i_manufact_id#681] Batched: true, DataFilters: [isnotnull(i_manufact_id#681), (i_manufact_id#681 = 283), isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_manufact_id), EqualTo(i_manufact_id,283), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_manufact_id:int>
                  :                 +- *(12) Sort [cs_item_sk#869 ASC NULLS FIRST], false, 0
                  :                    +- *(12) Filter isnotnull((1.3 * avg(cs_ext_discount_amt))#853)
                  :                       +- *(12) HashAggregate(keys=[cs_item_sk#869], functions=[avg(UnscaledValue(cs_ext_discount_amt#876))], output=[(1.3 * avg(cs_ext_discount_amt))#853, cs_item_sk#869])
                  :                          +- AQEShuffleRead coalesced
                  :                             +- ShuffleQueryStage 6
                  :                                +- Exchange hashpartitioning(cs_item_sk#869, 200), ENSURE_REQUIREMENTS, [id=#850]
                  :                                   +- *(8) HashAggregate(keys=[cs_item_sk#869], functions=[partial_avg(UnscaledValue(cs_ext_discount_amt#876))], output=[cs_item_sk#869, sum#922, count#923L])
                  :                                      +- *(8) Project [cs_item_sk#869, cs_ext_discount_amt#876]
                  :                                         +- *(8) SortMergeJoin [cs_sold_date_sk#854], [d_date_sk#888], Inner
                  :                                            :- *(6) Sort [cs_sold_date_sk#854 ASC NULLS FIRST], false, 0
                  :                                            :  +- AQEShuffleRead coalesced
                  :                                            :     +- ShuffleQueryStage 2
                  :                                            :        +- Exchange hashpartitioning(cs_sold_date_sk#854, 200), ENSURE_REQUIREMENTS, [id=#332]
                  :                                            :           +- *(3) Filter (isnotnull(cs_sold_date_sk#854) AND isnotnull(cs_item_sk#869))
                  :                                            :              +- *(3) ColumnarToRow
                  :                                            :                 +- FileScan parquet [cs_sold_date_sk#854,cs_item_sk#869,cs_ext_discount_amt#876] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#854), isnotnull(cs_item_sk#869)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_item_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_ext_discount_amt:decimal(7,2)>
                  :                                            +- *(7) Sort [d_date_sk#888 ASC NULLS FIRST], false, 0
                  :                                               +- AQEShuffleRead coalesced
                  :                                                  +- ShuffleQueryStage 3
                  :                                                     +- Exchange hashpartitioning(d_date_sk#888, 200), ENSURE_REQUIREMENTS, [id=#351]
                  :                                                        +- *(4) Project [d_date_sk#888]
                  :                                                           +- *(4) Filter (((isnotnull(d_date#890) AND (d_date#890 >= 1999-02-22)) AND (d_date#890 <= 1999-05-23)) AND isnotnull(d_date_sk#888))
                  :                                                              +- *(4) ColumnarToRow
                  :                                                                 +- FileScan parquet [d_date_sk#888,d_date#890] Batched: true, DataFilters: [isnotnull(d_date#890), (d_date#890 >= 1999-02-22), (d_date#890 <= 1999-05-23), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1999-02-22), LessThanOrEqual(d_date,1999-05-23), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                  +- *(15) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                     +- AQEShuffleRead coalesced
                        +- ShuffleQueryStage 5
                           +- ReusedExchange [d_date_sk#612], Exchange hashpartitioning(d_date_sk#888, 200), ENSURE_REQUIREMENTS, [id=#351]
+- == Initial Plan ==
   HashAggregate(keys=[], functions=[sum(UnscaledValue(cs_ext_discount_amt#566))], output=[excess discount amount#850])
   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#209]
      +- HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(cs_ext_discount_amt#566))], output=[sum#919L])
         +- Project [cs_ext_discount_amt#566]
            +- SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#612], Inner
               :- Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
               :  +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#201]
               :     +- Project [cs_sold_date_sk#544, cs_ext_discount_amt#566]
               :        +- SortMergeJoin [i_item_sk#668], [cs_item_sk#869], Inner, (cast(cs_ext_discount_amt#566 as decimal(14,7)) > (1.3 * avg(cs_ext_discount_amt))#853)
               :           :- Project [cs_sold_date_sk#544, cs_ext_discount_amt#566, i_item_sk#668]
               :           :  +- SortMergeJoin [cs_item_sk#559], [i_item_sk#668], Inner
               :           :     :- Sort [cs_item_sk#559 ASC NULLS FIRST], false, 0
               :           :     :  +- Exchange hashpartitioning(cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#176]
               :           :     :     +- Filter ((isnotnull(cs_item_sk#559) AND isnotnull(cs_ext_discount_amt#566)) AND isnotnull(cs_sold_date_sk#544))
               :           :     :        +- FileScan parquet [cs_sold_date_sk#544,cs_item_sk#559,cs_ext_discount_amt#566] Batched: true, DataFilters: [isnotnull(cs_item_sk#559), isnotnull(cs_ext_discount_amt#566), isnotnull(cs_sold_date_sk#544)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_ext_discount_amt), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_ext_discount_amt:decimal(7,2)>
               :           :     +- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
               :           :        +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#177]
               :           :           +- Project [i_item_sk#668]
               :           :              +- Filter ((isnotnull(i_manufact_id#681) AND (i_manufact_id#681 = 283)) AND isnotnull(i_item_sk#668))
               :           :                 +- FileScan parquet [i_item_sk#668,i_manufact_id#681] Batched: true, DataFilters: [isnotnull(i_manufact_id#681), (i_manufact_id#681 = 283), isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_manufact_id), EqualTo(i_manufact_id,283), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_manufact_id:int>
               :           +- Sort [cs_item_sk#869 ASC NULLS FIRST], false, 0
               :              +- Filter isnotnull((1.3 * avg(cs_ext_discount_amt))#853)
               :                 +- HashAggregate(keys=[cs_item_sk#869], functions=[avg(UnscaledValue(cs_ext_discount_amt#876))], output=[(1.3 * avg(cs_ext_discount_amt))#853, cs_item_sk#869])
               :                    +- Exchange hashpartitioning(cs_item_sk#869, 200), ENSURE_REQUIREMENTS, [id=#191]
               :                       +- HashAggregate(keys=[cs_item_sk#869], functions=[partial_avg(UnscaledValue(cs_ext_discount_amt#876))], output=[cs_item_sk#869, sum#922, count#923L])
               :                          +- Project [cs_item_sk#869, cs_ext_discount_amt#876]
               :                             +- SortMergeJoin [cs_sold_date_sk#854], [d_date_sk#888], Inner
               :                                :- Sort [cs_sold_date_sk#854 ASC NULLS FIRST], false, 0
               :                                :  +- Exchange hashpartitioning(cs_sold_date_sk#854, 200), ENSURE_REQUIREMENTS, [id=#183]
               :                                :     +- Filter (isnotnull(cs_sold_date_sk#854) AND isnotnull(cs_item_sk#869))
               :                                :        +- FileScan parquet [cs_sold_date_sk#854,cs_item_sk#869,cs_ext_discount_amt#876] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#854), isnotnull(cs_item_sk#869)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_item_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_ext_discount_amt:decimal(7,2)>
               :                                +- Sort [d_date_sk#888 ASC NULLS FIRST], false, 0
               :                                   +- Exchange hashpartitioning(d_date_sk#888, 200), ENSURE_REQUIREMENTS, [id=#184]
               :                                      +- Project [d_date_sk#888]
               :                                         +- Filter (((isnotnull(d_date#890) AND (d_date#890 >= 1999-02-22)) AND (d_date#890 <= 1999-05-23)) AND isnotnull(d_date_sk#888))
               :                                            +- FileScan parquet [d_date_sk#888,d_date#890] Batched: true, DataFilters: [isnotnull(d_date#890), (d_date#890 >= 1999-02-22), (d_date#890 <= 1999-05-23), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1999-02-22), LessThanOrEqual(d_date,1999-05-23), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
               +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                  +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#202]
                     +- Project [d_date_sk#612]
                        +- Filter (((isnotnull(d_date#614) AND (d_date#614 >= 1999-02-22)) AND (d_date#614 <= 1999-05-23)) AND isnotnull(d_date_sk#612))
                           +- FileScan parquet [d_date_sk#612,d_date#614] Batched: true, DataFilters: [isnotnull(d_date#614), (d_date#614 >= 1999-02-22), (d_date#614 <= 1999-05-23), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1999-02-22), LessThanOrEqual(d_date,1999-05-23), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
