AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[customer_id#3937 ASC NULLS FIRST,customer_first_name#3938 ASC NULLS FIRST,customer_last_name#3939 ASC NULLS FIRST,customer_birth_country#3941 ASC NULLS FIRST], output=[customer_id#3937,customer_first_name#3938,customer_last_name#3939,customer_birth_country#3941])
   +- *(47) Project [customer_id#3937, customer_first_name#3938, customer_last_name#3939, customer_birth_country#3941]
      +- *(47) SortMergeJoin [customer_id#3869], [customer_id#3957], Inner, (CASE WHEN (year_total#4287 > 0.00) THEN CheckOverflow((promote_precision(year_total#3965) / promote_precision(year_total#4287)), DecimalType(38,20), true) ELSE 0E-20 END > CASE WHEN (year_total#3877 > 0.00) THEN CheckOverflow((promote_precision(year_total#3945) / promote_precision(year_total#3877)), DecimalType(38,20), true) ELSE 0E-20 END)
         :- *(45) Project [customer_id#3869, year_total#3877, customer_id#3937, customer_first_name#3938, customer_last_name#3939, customer_birth_country#3941, year_total#3945, year_total#4287]
         :  +- *(45) SortMergeJoin [customer_id#3869], [customer_id#4279], Inner
         :     :- *(43) SortMergeJoin [customer_id#3869], [customer_id#3937], Inner
         :     :  :- *(41) Sort [customer_id#3869 ASC NULLS FIRST], false, 0
         :     :  :  +- AQEShuffleRead coalesced
         :     :  :     +- ShuffleQueryStage 29
         :     :  :        +- Exchange hashpartitioning(customer_id#3869, 200), ENSURE_REQUIREMENTS, [id=#23467]
         :     :  :           +- *(37) Filter (isnotnull(year_total#3877) AND (year_total#3877 > 0.00))
         :     :  :              +- *(37) HashAggregate(keys=[c_customer_id#401, c_first_name#408, c_last_name#409, c_preferred_cust_flag#410, c_birth_country#414, c_login#415, c_email_address#416, d_year#618], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#269 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#266 as decimal(8,2)))), DecimalType(8,2), true)))], output=[customer_id#3869, year_total#3877])
         :     :  :                 +- AQEShuffleRead coalesced
         :     :  :                    +- ShuffleQueryStage 25
         :     :  :                       +- Exchange hashpartitioning(c_customer_id#401, c_first_name#408, c_last_name#409, c_preferred_cust_flag#410, c_birth_country#414, c_login#415, c_email_address#416, d_year#618, 200), ENSURE_REQUIREMENTS, [id=#23089]
         :     :  :                          +- *(27) HashAggregate(keys=[c_customer_id#401, c_first_name#408, c_last_name#409, c_preferred_cust_flag#410, c_birth_country#414, c_login#415, c_email_address#416, d_year#618], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#269 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#266 as decimal(8,2)))), DecimalType(8,2), true)))], output=[c_customer_id#401, c_first_name#408, c_last_name#409, c_preferred_cust_flag#410, c_birth_country#414, c_login#415, c_email_address#416, d_year#618, sum#4479L])
         :     :  :                             +- *(27) Project [c_customer_id#401, c_first_name#408, c_last_name#409, c_preferred_cust_flag#410, c_birth_country#414, c_login#415, c_email_address#416, ss_ext_discount_amt#266, ss_ext_list_price#269, d_year#618]
         :     :  :                                +- *(27) SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
         :     :  :                                   :- *(25) Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
         :     :  :                                   :  +- AQEShuffleRead coalesced
         :     :  :                                   :     +- ShuffleQueryStage 19
         :     :  :                                   :        +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#22533]
         :     :  :                                   :           +- *(15) Project [c_customer_id#401, c_first_name#408, c_last_name#409, c_preferred_cust_flag#410, c_birth_country#414, c_login#415, c_email_address#416, ss_sold_date_sk#252, ss_ext_discount_amt#266, ss_ext_list_price#269]
         :     :  :                                   :              +- *(15) SortMergeJoin [c_customer_sk#400], [ss_customer_sk#255], Inner
         :     :  :                                   :                 :- *(13) Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
         :     :  :                                   :                 :  +- AQEShuffleRead coalesced
         :     :  :                                   :                 :     +- ShuffleQueryStage 0
         :     :  :                                   :                 :        +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#20994]
         :     :  :                                   :                 :           +- *(1) Filter (isnotnull(c_customer_sk#400) AND isnotnull(c_customer_id#401))
         :     :  :                                   :                 :              +- *(1) ColumnarToRow
         :     :  :                                   :                 :                 +- FileScan parquet [c_customer_sk#400,c_customer_id#401,c_first_name#408,c_last_name#409,c_preferred_cust_flag#410,c_birth_country#414,c_login#415,c_email_address#416] Batched: true, DataFilters: [isnotnull(c_customer_sk#400), isnotnull(c_customer_id#401)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
         :     :  :                                   :                 +- *(14) Sort [ss_customer_sk#255 ASC NULLS FIRST], false, 0
         :     :  :                                   :                    +- AQEShuffleRead coalesced
         :     :  :                                   :                       +- ShuffleQueryStage 1
         :     :  :                                   :                          +- Exchange hashpartitioning(ss_customer_sk#255, 200), ENSURE_REQUIREMENTS, [id=#21011]
         :     :  :                                   :                             +- *(2) Filter (isnotnull(ss_customer_sk#255) AND isnotnull(ss_sold_date_sk#252))
         :     :  :                                   :                                +- *(2) ColumnarToRow
         :     :  :                                   :                                   +- FileScan parquet [ss_sold_date_sk#252,ss_customer_sk#255,ss_ext_discount_amt#266,ss_ext_list_price#269] Batched: true, DataFilters: [isnotnull(ss_customer_sk#255), isnotnull(ss_sold_date_sk#252)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_list_price:...
         :     :  :                                   +- *(26) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
         :     :  :                                      +- AQEShuffleRead coalesced
         :     :  :                                         +- ShuffleQueryStage 2
         :     :  :                                            +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#21032]
         :     :  :                                               +- *(3) Filter ((isnotnull(d_year#618) AND (d_year#618 = 1998)) AND isnotnull(d_date_sk#612))
         :     :  :                                                  +- *(3) ColumnarToRow
         :     :  :                                                     +- FileScan parquet [d_date_sk#612,d_year#618] Batched: true, DataFilters: [isnotnull(d_year#618), (d_year#618 = 1998), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     :  +- *(42) Sort [customer_id#3937 ASC NULLS FIRST], false, 0
         :     :     +- AQEShuffleRead coalesced
         :     :        +- ShuffleQueryStage 31
         :     :           +- Exchange hashpartitioning(customer_id#3937, 200), ENSURE_REQUIREMENTS, [id=#23621]
         :     :              +- *(39) HashAggregate(keys=[c_customer_id#3972, c_first_name#3979, c_last_name#3980, c_preferred_cust_flag#3981, c_birth_country#3985, c_login#3986, c_email_address#3987, d_year#4018], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#4006 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#4003 as decimal(8,2)))), DecimalType(8,2), true)))], output=[customer_id#3937, customer_first_name#3938, customer_last_name#3939, customer_birth_country#3941, year_total#3945])
         :     :                 +- AQEShuffleRead coalesced
         :     :                    +- ShuffleQueryStage 26
         :     :                       +- Exchange hashpartitioning(c_customer_id#3972, c_first_name#3979, c_last_name#3980, c_preferred_cust_flag#3981, c_birth_country#3985, c_login#3986, c_email_address#3987, d_year#4018, 200), ENSURE_REQUIREMENTS, [id=#23136]
         :     :                          +- *(30) HashAggregate(keys=[c_customer_id#3972, c_first_name#3979, c_last_name#3980, c_preferred_cust_flag#3981, c_birth_country#3985, c_login#3986, c_email_address#3987, d_year#4018], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#4006 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#4003 as decimal(8,2)))), DecimalType(8,2), true)))], output=[c_customer_id#3972, c_first_name#3979, c_last_name#3980, c_preferred_cust_flag#3981, c_birth_country#3985, c_login#3986, c_email_address#3987, d_year#4018, sum#4481L])
         :     :                             +- *(30) Project [c_customer_id#3972, c_first_name#3979, c_last_name#3980, c_preferred_cust_flag#3981, c_birth_country#3985, c_login#3986, c_email_address#3987, ss_ext_discount_amt#4003, ss_ext_list_price#4006, d_year#4018]
         :     :                                +- *(30) SortMergeJoin [ss_sold_date_sk#3989], [d_date_sk#4012], Inner
         :     :                                   :- *(28) Sort [ss_sold_date_sk#3989 ASC NULLS FIRST], false, 0
         :     :                                   :  +- AQEShuffleRead coalesced
         :     :                                   :     +- ShuffleQueryStage 21
         :     :                                   :        +- ReusedExchange [c_customer_id#3972, c_first_name#3979, c_last_name#3980, c_preferred_cust_flag#3981, c_birth_country#3985, c_login#3986, c_email_address#3987, ss_sold_date_sk#3989, ss_ext_discount_amt#4003, ss_ext_list_price#4006], Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#22533]
         :     :                                   +- *(29) Sort [d_date_sk#4012 ASC NULLS FIRST], false, 0
         :     :                                      +- AQEShuffleRead coalesced
         :     :                                         +- ShuffleQueryStage 7
         :     :                                            +- Exchange hashpartitioning(d_date_sk#4012, 200), ENSURE_REQUIREMENTS, [id=#21140]
         :     :                                               +- *(6) Filter ((isnotnull(d_year#4018) AND (d_year#4018 = 1999)) AND isnotnull(d_date_sk#4012))
         :     :                                                  +- *(6) ColumnarToRow
         :     :                                                     +- FileScan parquet [d_date_sk#4012,d_year#4018] Batched: true, DataFilters: [isnotnull(d_year#4018), (d_year#4018 = 1999), isnotnull(d_date_sk#4012)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     +- *(44) Sort [customer_id#4279 ASC NULLS FIRST], false, 0
         :        +- AQEShuffleRead coalesced
         :           +- ShuffleQueryStage 30
         :              +- Exchange hashpartitioning(customer_id#4279, 200), ENSURE_REQUIREMENTS, [id=#23555]
         :                 +- *(38) Project [customer_id#3879 AS customer_id#4279, year_total#3887 AS year_total#4287]
         :                    +- *(38) Filter (isnotnull(year_total#3887) AND (year_total#3887 > 0.00))
         :                       +- *(38) HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4257], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#4242 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#4239 as decimal(8,2)))), DecimalType(8,2), true)))], output=[customer_id#3879, year_total#3887])
         :                          +- AQEShuffleRead coalesced
         :                             +- ShuffleQueryStage 27
         :                                +- Exchange hashpartitioning(c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4257, 200), ENSURE_REQUIREMENTS, [id=#23328]
         :                                   +- *(33) HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4257], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#4242 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#4239 as decimal(8,2)))), DecimalType(8,2), true)))], output=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4257, sum#4483L])
         :                                      +- *(33) Project [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ws_ext_discount_amt#4239, ws_ext_list_price#4242, d_year#4257]
         :                                         +- *(33) SortMergeJoin [ws_sold_date_sk#4217], [d_date_sk#4251], Inner
         :                                            :- *(31) Sort [ws_sold_date_sk#4217 ASC NULLS FIRST], false, 0
         :                                            :  +- AQEShuffleRead coalesced
         :                                            :     +- ShuffleQueryStage 22
         :                                            :        +- Exchange hashpartitioning(ws_sold_date_sk#4217, 200), ENSURE_REQUIREMENTS, [id=#22840]
         :                                            :           +- *(21) Project [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ws_sold_date_sk#4217, ws_ext_discount_amt#4239, ws_ext_list_price#4242]
         :                                            :              +- *(21) SortMergeJoin [c_customer_sk#4199], [ws_bill_customer_sk#4221], Inner
         :                                            :                 :- *(19) Sort [c_customer_sk#4199 ASC NULLS FIRST], false, 0
         :                                            :                 :  +- AQEShuffleRead coalesced
         :                                            :                 :     +- ShuffleQueryStage 9
         :                                            :                 :        +- ReusedExchange [c_customer_sk#4199, c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215], Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#20994]
         :                                            :                 +- *(20) Sort [ws_bill_customer_sk#4221 ASC NULLS FIRST], false, 0
         :                                            :                    +- AQEShuffleRead coalesced
         :                                            :                       +- ShuffleQueryStage 10
         :                                            :                          +- Exchange hashpartitioning(ws_bill_customer_sk#4221, 200), ENSURE_REQUIREMENTS, [id=#21229]
         :                                            :                             +- *(8) Filter (isnotnull(ws_bill_customer_sk#4221) AND isnotnull(ws_sold_date_sk#4217))
         :                                            :                                +- *(8) ColumnarToRow
         :                                            :                                   +- FileScan parquet [ws_sold_date_sk#4217,ws_bill_customer_sk#4221,ws_ext_discount_amt#4239,ws_ext_list_price#4242] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#4221), isnotnull(ws_sold_date_sk#4217)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_list_p...
         :                                            +- *(32) Sort [d_date_sk#4251 ASC NULLS FIRST], false, 0
         :                                               +- AQEShuffleRead coalesced
         :                                                  +- ShuffleQueryStage 12
         :                                                     +- ReusedExchange [d_date_sk#4251, d_year#4257], Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#21032]
         +- *(46) Sort [customer_id#3957 ASC NULLS FIRST], false, 0
            +- AQEShuffleRead coalesced
               +- ShuffleQueryStage 32
                  +- Exchange hashpartitioning(customer_id#3957, 200), ENSURE_REQUIREMENTS, [id=#23763]
                     +- *(40) HashAggregate(keys=[c_customer_id#4359, c_first_name#4366, c_last_name#4367, c_preferred_cust_flag#4368, c_birth_country#4372, c_login#4373, c_email_address#4374, d_year#4416], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#4401 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#4398 as decimal(8,2)))), DecimalType(8,2), true)))], output=[customer_id#3957, year_total#3965])
                        +- AQEShuffleRead coalesced
                           +- ShuffleQueryStage 28
                              +- Exchange hashpartitioning(c_customer_id#4359, c_first_name#4366, c_last_name#4367, c_preferred_cust_flag#4368, c_birth_country#4372, c_login#4373, c_email_address#4374, d_year#4416, 200), ENSURE_REQUIREMENTS, [id=#23378]
                                 +- *(36) HashAggregate(keys=[c_customer_id#4359, c_first_name#4366, c_last_name#4367, c_preferred_cust_flag#4368, c_birth_country#4372, c_login#4373, c_email_address#4374, d_year#4416], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#4401 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#4398 as decimal(8,2)))), DecimalType(8,2), true)))], output=[c_customer_id#4359, c_first_name#4366, c_last_name#4367, c_preferred_cust_flag#4368, c_birth_country#4372, c_login#4373, c_email_address#4374, d_year#4416, sum#4485L])
                                    +- *(36) Project [c_customer_id#4359, c_first_name#4366, c_last_name#4367, c_preferred_cust_flag#4368, c_birth_country#4372, c_login#4373, c_email_address#4374, ws_ext_discount_amt#4398, ws_ext_list_price#4401, d_year#4416]
                                       +- *(36) SortMergeJoin [ws_sold_date_sk#4376], [d_date_sk#4410], Inner
                                          :- *(34) Sort [ws_sold_date_sk#4376 ASC NULLS FIRST], false, 0
                                          :  +- AQEShuffleRead coalesced
                                          :     +- ShuffleQueryStage 24
                                          :        +- ReusedExchange [c_customer_id#4359, c_first_name#4366, c_last_name#4367, c_preferred_cust_flag#4368, c_birth_country#4372, c_login#4373, c_email_address#4374, ws_sold_date_sk#4376, ws_ext_discount_amt#4398, ws_ext_list_price#4401], Exchange hashpartitioning(ws_sold_date_sk#4217, 200), ENSURE_REQUIREMENTS, [id=#22840]
                                          +- *(35) Sort [d_date_sk#4410 ASC NULLS FIRST], false, 0
                                             +- AQEShuffleRead coalesced
                                                +- ShuffleQueryStage 18
                                                   +- ReusedExchange [d_date_sk#4410, d_year#4416], Exchange hashpartitioning(d_date_sk#4012, 200), ENSURE_REQUIREMENTS, [id=#21140]
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[customer_id#3937 ASC NULLS FIRST,customer_first_name#3938 ASC NULLS FIRST,customer_last_name#3939 ASC NULLS FIRST,customer_birth_country#3941 ASC NULLS FIRST], output=[customer_id#3937,customer_first_name#3938,customer_last_name#3939,customer_birth_country#3941])
   +- Project [customer_id#3937, customer_first_name#3938, customer_last_name#3939, customer_birth_country#3941]
      +- SortMergeJoin [customer_id#3869], [customer_id#3957], Inner, (CASE WHEN (year_total#4287 > 0.00) THEN CheckOverflow((promote_precision(year_total#3965) / promote_precision(year_total#4287)), DecimalType(38,20), true) ELSE 0E-20 END > CASE WHEN (year_total#3877 > 0.00) THEN CheckOverflow((promote_precision(year_total#3945) / promote_precision(year_total#3877)), DecimalType(38,20), true) ELSE 0E-20 END)
         :- Project [customer_id#3869, year_total#3877, customer_id#3937, customer_first_name#3938, customer_last_name#3939, customer_birth_country#3941, year_total#3945, year_total#4287]
         :  +- SortMergeJoin [customer_id#3869], [customer_id#4279], Inner
         :     :- SortMergeJoin [customer_id#3869], [customer_id#3937], Inner
         :     :  :- Sort [customer_id#3869 ASC NULLS FIRST], false, 0
         :     :  :  +- Exchange hashpartitioning(customer_id#3869, 200), ENSURE_REQUIREMENTS, [id=#20886]
         :     :  :     +- Filter (isnotnull(year_total#3877) AND (year_total#3877 > 0.00))
         :     :  :        +- HashAggregate(keys=[c_customer_id#401, c_first_name#408, c_last_name#409, c_preferred_cust_flag#410, c_birth_country#414, c_login#415, c_email_address#416, d_year#618], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#269 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#266 as decimal(8,2)))), DecimalType(8,2), true)))], output=[customer_id#3869, year_total#3877])
         :     :  :           +- Exchange hashpartitioning(c_customer_id#401, c_first_name#408, c_last_name#409, c_preferred_cust_flag#410, c_birth_country#414, c_login#415, c_email_address#416, d_year#618, 200), ENSURE_REQUIREMENTS, [id=#20862]
         :     :  :              +- HashAggregate(keys=[c_customer_id#401, c_first_name#408, c_last_name#409, c_preferred_cust_flag#410, c_birth_country#414, c_login#415, c_email_address#416, d_year#618], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#269 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#266 as decimal(8,2)))), DecimalType(8,2), true)))], output=[c_customer_id#401, c_first_name#408, c_last_name#409, c_preferred_cust_flag#410, c_birth_country#414, c_login#415, c_email_address#416, d_year#618, sum#4479L])
         :     :  :                 +- Project [c_customer_id#401, c_first_name#408, c_last_name#409, c_preferred_cust_flag#410, c_birth_country#414, c_login#415, c_email_address#416, ss_ext_discount_amt#266, ss_ext_list_price#269, d_year#618]
         :     :  :                    +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
         :     :  :                       :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
         :     :  :                       :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#20854]
         :     :  :                       :     +- Project [c_customer_id#401, c_first_name#408, c_last_name#409, c_preferred_cust_flag#410, c_birth_country#414, c_login#415, c_email_address#416, ss_sold_date_sk#252, ss_ext_discount_amt#266, ss_ext_list_price#269]
         :     :  :                       :        +- SortMergeJoin [c_customer_sk#400], [ss_customer_sk#255], Inner
         :     :  :                       :           :- Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
         :     :  :                       :           :  +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#20846]
         :     :  :                       :           :     +- Filter (isnotnull(c_customer_sk#400) AND isnotnull(c_customer_id#401))
         :     :  :                       :           :        +- FileScan parquet [c_customer_sk#400,c_customer_id#401,c_first_name#408,c_last_name#409,c_preferred_cust_flag#410,c_birth_country#414,c_login#415,c_email_address#416] Batched: true, DataFilters: [isnotnull(c_customer_sk#400), isnotnull(c_customer_id#401)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
         :     :  :                       :           +- Sort [ss_customer_sk#255 ASC NULLS FIRST], false, 0
         :     :  :                       :              +- Exchange hashpartitioning(ss_customer_sk#255, 200), ENSURE_REQUIREMENTS, [id=#20847]
         :     :  :                       :                 +- Filter (isnotnull(ss_customer_sk#255) AND isnotnull(ss_sold_date_sk#252))
         :     :  :                       :                    +- FileScan parquet [ss_sold_date_sk#252,ss_customer_sk#255,ss_ext_discount_amt#266,ss_ext_list_price#269] Batched: true, DataFilters: [isnotnull(ss_customer_sk#255), isnotnull(ss_sold_date_sk#252)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_list_price:...
         :     :  :                       +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
         :     :  :                          +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#20855]
         :     :  :                             +- Filter ((isnotnull(d_year#618) AND (d_year#618 = 1998)) AND isnotnull(d_date_sk#612))
         :     :  :                                +- FileScan parquet [d_date_sk#612,d_year#618] Batched: true, DataFilters: [isnotnull(d_year#618), (d_year#618 = 1998), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     :  +- Sort [customer_id#3937 ASC NULLS FIRST], false, 0
         :     :     +- Exchange hashpartitioning(customer_id#3937, 200), ENSURE_REQUIREMENTS, [id=#20887]
         :     :        +- HashAggregate(keys=[c_customer_id#3972, c_first_name#3979, c_last_name#3980, c_preferred_cust_flag#3981, c_birth_country#3985, c_login#3986, c_email_address#3987, d_year#4018], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#4006 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#4003 as decimal(8,2)))), DecimalType(8,2), true)))], output=[customer_id#3937, customer_first_name#3938, customer_last_name#3939, customer_birth_country#3941, year_total#3945])
         :     :           +- Exchange hashpartitioning(c_customer_id#3972, c_first_name#3979, c_last_name#3980, c_preferred_cust_flag#3981, c_birth_country#3985, c_login#3986, c_email_address#3987, d_year#4018, 200), ENSURE_REQUIREMENTS, [id=#20882]
         :     :              +- HashAggregate(keys=[c_customer_id#3972, c_first_name#3979, c_last_name#3980, c_preferred_cust_flag#3981, c_birth_country#3985, c_login#3986, c_email_address#3987, d_year#4018], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#4006 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#4003 as decimal(8,2)))), DecimalType(8,2), true)))], output=[c_customer_id#3972, c_first_name#3979, c_last_name#3980, c_preferred_cust_flag#3981, c_birth_country#3985, c_login#3986, c_email_address#3987, d_year#4018, sum#4481L])
         :     :                 +- Project [c_customer_id#3972, c_first_name#3979, c_last_name#3980, c_preferred_cust_flag#3981, c_birth_country#3985, c_login#3986, c_email_address#3987, ss_ext_discount_amt#4003, ss_ext_list_price#4006, d_year#4018]
         :     :                    +- SortMergeJoin [ss_sold_date_sk#3989], [d_date_sk#4012], Inner
         :     :                       :- Sort [ss_sold_date_sk#3989 ASC NULLS FIRST], false, 0
         :     :                       :  +- Exchange hashpartitioning(ss_sold_date_sk#3989, 200), ENSURE_REQUIREMENTS, [id=#20874]
         :     :                       :     +- Project [c_customer_id#3972, c_first_name#3979, c_last_name#3980, c_preferred_cust_flag#3981, c_birth_country#3985, c_login#3986, c_email_address#3987, ss_sold_date_sk#3989, ss_ext_discount_amt#4003, ss_ext_list_price#4006]
         :     :                       :        +- SortMergeJoin [c_customer_sk#3971], [ss_customer_sk#3992], Inner
         :     :                       :           :- Sort [c_customer_sk#3971 ASC NULLS FIRST], false, 0
         :     :                       :           :  +- Exchange hashpartitioning(c_customer_sk#3971, 200), ENSURE_REQUIREMENTS, [id=#20866]
         :     :                       :           :     +- Filter (isnotnull(c_customer_sk#3971) AND isnotnull(c_customer_id#3972))
         :     :                       :           :        +- FileScan parquet [c_customer_sk#3971,c_customer_id#3972,c_first_name#3979,c_last_name#3980,c_preferred_cust_flag#3981,c_birth_country#3985,c_login#3986,c_email_address#3987] Batched: true, DataFilters: [isnotnull(c_customer_sk#3971), isnotnull(c_customer_id#3972)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
         :     :                       :           +- Sort [ss_customer_sk#3992 ASC NULLS FIRST], false, 0
         :     :                       :              +- Exchange hashpartitioning(ss_customer_sk#3992, 200), ENSURE_REQUIREMENTS, [id=#20867]
         :     :                       :                 +- Filter (isnotnull(ss_customer_sk#3992) AND isnotnull(ss_sold_date_sk#3989))
         :     :                       :                    +- FileScan parquet [ss_sold_date_sk#3989,ss_customer_sk#3992,ss_ext_discount_amt#4003,ss_ext_list_price#4006] Batched: true, DataFilters: [isnotnull(ss_customer_sk#3992), isnotnull(ss_sold_date_sk#3989)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_list_price:...
         :     :                       +- Sort [d_date_sk#4012 ASC NULLS FIRST], false, 0
         :     :                          +- Exchange hashpartitioning(d_date_sk#4012, 200), ENSURE_REQUIREMENTS, [id=#20875]
         :     :                             +- Filter ((isnotnull(d_year#4018) AND (d_year#4018 = 1999)) AND isnotnull(d_date_sk#4012))
         :     :                                +- FileScan parquet [d_date_sk#4012,d_year#4018] Batched: true, DataFilters: [isnotnull(d_year#4018), (d_year#4018 = 1999), isnotnull(d_date_sk#4012)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     +- Sort [customer_id#4279 ASC NULLS FIRST], false, 0
         :        +- Exchange hashpartitioning(customer_id#4279, 200), ENSURE_REQUIREMENTS, [id=#20914]
         :           +- Project [customer_id#3879 AS customer_id#4279, year_total#3887 AS year_total#4287]
         :              +- Filter (isnotnull(year_total#3887) AND (year_total#3887 > 0.00))
         :                 +- HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4257], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#4242 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#4239 as decimal(8,2)))), DecimalType(8,2), true)))], output=[customer_id#3879, year_total#3887])
         :                    +- Exchange hashpartitioning(c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4257, 200), ENSURE_REQUIREMENTS, [id=#20908]
         :                       +- HashAggregate(keys=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4257], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#4242 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#4239 as decimal(8,2)))), DecimalType(8,2), true)))], output=[c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, d_year#4257, sum#4483L])
         :                          +- Project [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ws_ext_discount_amt#4239, ws_ext_list_price#4242, d_year#4257]
         :                             +- SortMergeJoin [ws_sold_date_sk#4217], [d_date_sk#4251], Inner
         :                                :- Sort [ws_sold_date_sk#4217 ASC NULLS FIRST], false, 0
         :                                :  +- Exchange hashpartitioning(ws_sold_date_sk#4217, 200), ENSURE_REQUIREMENTS, [id=#20900]
         :                                :     +- Project [c_customer_id#4200, c_first_name#4207, c_last_name#4208, c_preferred_cust_flag#4209, c_birth_country#4213, c_login#4214, c_email_address#4215, ws_sold_date_sk#4217, ws_ext_discount_amt#4239, ws_ext_list_price#4242]
         :                                :        +- SortMergeJoin [c_customer_sk#4199], [ws_bill_customer_sk#4221], Inner
         :                                :           :- Sort [c_customer_sk#4199 ASC NULLS FIRST], false, 0
         :                                :           :  +- Exchange hashpartitioning(c_customer_sk#4199, 200), ENSURE_REQUIREMENTS, [id=#20892]
         :                                :           :     +- Filter (isnotnull(c_customer_sk#4199) AND isnotnull(c_customer_id#4200))
         :                                :           :        +- FileScan parquet [c_customer_sk#4199,c_customer_id#4200,c_first_name#4207,c_last_name#4208,c_preferred_cust_flag#4209,c_birth_country#4213,c_login#4214,c_email_address#4215] Batched: true, DataFilters: [isnotnull(c_customer_sk#4199), isnotnull(c_customer_id#4200)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
         :                                :           +- Sort [ws_bill_customer_sk#4221 ASC NULLS FIRST], false, 0
         :                                :              +- Exchange hashpartitioning(ws_bill_customer_sk#4221, 200), ENSURE_REQUIREMENTS, [id=#20893]
         :                                :                 +- Filter (isnotnull(ws_bill_customer_sk#4221) AND isnotnull(ws_sold_date_sk#4217))
         :                                :                    +- FileScan parquet [ws_sold_date_sk#4217,ws_bill_customer_sk#4221,ws_ext_discount_amt#4239,ws_ext_list_price#4242] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#4221), isnotnull(ws_sold_date_sk#4217)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_list_p...
         :                                +- Sort [d_date_sk#4251 ASC NULLS FIRST], false, 0
         :                                   +- Exchange hashpartitioning(d_date_sk#4251, 200), ENSURE_REQUIREMENTS, [id=#20901]
         :                                      +- Filter ((isnotnull(d_year#4257) AND (d_year#4257 = 1998)) AND isnotnull(d_date_sk#4251))
         :                                         +- FileScan parquet [d_date_sk#4251,d_year#4257] Batched: true, DataFilters: [isnotnull(d_year#4257), (d_year#4257 = 1998), isnotnull(d_date_sk#4251)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         +- Sort [customer_id#3957 ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(customer_id#3957, 200), ENSURE_REQUIREMENTS, [id=#20939]
               +- HashAggregate(keys=[c_customer_id#4359, c_first_name#4366, c_last_name#4367, c_preferred_cust_flag#4368, c_birth_country#4372, c_login#4373, c_email_address#4374, d_year#4416], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#4401 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#4398 as decimal(8,2)))), DecimalType(8,2), true)))], output=[customer_id#3957, year_total#3965])
                  +- Exchange hashpartitioning(c_customer_id#4359, c_first_name#4366, c_last_name#4367, c_preferred_cust_flag#4368, c_birth_country#4372, c_login#4373, c_email_address#4374, d_year#4416, 200), ENSURE_REQUIREMENTS, [id=#20935]
                     +- HashAggregate(keys=[c_customer_id#4359, c_first_name#4366, c_last_name#4367, c_preferred_cust_flag#4368, c_birth_country#4372, c_login#4373, c_email_address#4374, d_year#4416], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#4401 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#4398 as decimal(8,2)))), DecimalType(8,2), true)))], output=[c_customer_id#4359, c_first_name#4366, c_last_name#4367, c_preferred_cust_flag#4368, c_birth_country#4372, c_login#4373, c_email_address#4374, d_year#4416, sum#4485L])
                        +- Project [c_customer_id#4359, c_first_name#4366, c_last_name#4367, c_preferred_cust_flag#4368, c_birth_country#4372, c_login#4373, c_email_address#4374, ws_ext_discount_amt#4398, ws_ext_list_price#4401, d_year#4416]
                           +- SortMergeJoin [ws_sold_date_sk#4376], [d_date_sk#4410], Inner
                              :- Sort [ws_sold_date_sk#4376 ASC NULLS FIRST], false, 0
                              :  +- Exchange hashpartitioning(ws_sold_date_sk#4376, 200), ENSURE_REQUIREMENTS, [id=#20927]
                              :     +- Project [c_customer_id#4359, c_first_name#4366, c_last_name#4367, c_preferred_cust_flag#4368, c_birth_country#4372, c_login#4373, c_email_address#4374, ws_sold_date_sk#4376, ws_ext_discount_amt#4398, ws_ext_list_price#4401]
                              :        +- SortMergeJoin [c_customer_sk#4358], [ws_bill_customer_sk#4380], Inner
                              :           :- Sort [c_customer_sk#4358 ASC NULLS FIRST], false, 0
                              :           :  +- Exchange hashpartitioning(c_customer_sk#4358, 200), ENSURE_REQUIREMENTS, [id=#20919]
                              :           :     +- Filter (isnotnull(c_customer_sk#4358) AND isnotnull(c_customer_id#4359))
                              :           :        +- FileScan parquet [c_customer_sk#4358,c_customer_id#4359,c_first_name#4366,c_last_name#4367,c_preferred_cust_flag#4368,c_birth_country#4372,c_login#4373,c_email_address#4374] Batched: true, DataFilters: [isnotnull(c_customer_sk#4358), isnotnull(c_customer_id#4359)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
                              :           +- Sort [ws_bill_customer_sk#4380 ASC NULLS FIRST], false, 0
                              :              +- Exchange hashpartitioning(ws_bill_customer_sk#4380, 200), ENSURE_REQUIREMENTS, [id=#20920]
                              :                 +- Filter (isnotnull(ws_bill_customer_sk#4380) AND isnotnull(ws_sold_date_sk#4376))
                              :                    +- FileScan parquet [ws_sold_date_sk#4376,ws_bill_customer_sk#4380,ws_ext_discount_amt#4398,ws_ext_list_price#4401] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#4380), isnotnull(ws_sold_date_sk#4376)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_list_p...
                              +- Sort [d_date_sk#4410 ASC NULLS FIRST], false, 0
                                 +- Exchange hashpartitioning(d_date_sk#4410, 200), ENSURE_REQUIREMENTS, [id=#20928]
                                    +- Filter ((isnotnull(d_year#4416) AND (d_year#4416 = 1999)) AND isnotnull(d_date_sk#4410))
                                       +- FileScan parquet [d_date_sk#4410,d_year#4416] Batched: true, DataFilters: [isnotnull(d_year#4416), (d_year#4416 = 1999), isnotnull(d_date_sk#4410)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
