AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[channel#19871 ASC NULLS FIRST,id#19872 ASC NULLS FIRST], output=[channel#19871,id#19872,sales#19655,returns#19656,profit#19657])
   +- *(53) HashAggregate(keys=[channel#19871, id#19872, spark_grouping_id#19870L], functions=[sum(sales#19658), sum(returns#19646), sum(profit#19647)], output=[channel#19871, id#19872, sales#19655, returns#19656, profit#19657])
      +- AQEShuffleRead coalesced
         +- ShuffleQueryStage 29
            +- Exchange hashpartitioning(channel#19871, id#19872, spark_grouping_id#19870L, 200), ENSURE_REQUIREMENTS, [id=#238872]
               +- *(52) HashAggregate(keys=[channel#19871, id#19872, spark_grouping_id#19870L], functions=[partial_sum(sales#19658), partial_sum(returns#19646), partial_sum(profit#19647)], output=[channel#19871, id#19872, spark_grouping_id#19870L, sum#19888, isEmpty#19889, sum#19890, isEmpty#19891, sum#19892, isEmpty#19893])
                  +- *(52) Expand [[sales#19658, returns#19646, profit#19647, channel#19868, id#19869, 0], [sales#19658, returns#19646, profit#19647, channel#19868, null, 1], [sales#19658, returns#19646, profit#19647, null, null, 3]], [sales#19658, returns#19646, profit#19647, channel#19871, id#19872, spark_grouping_id#19870L]
                     +- Union
                        :- *(41) Project [sales#19658, coalesce(returns#19660, 0.00) AS returns#19646, CheckOverflow((promote_precision(cast(profit#19659 as decimal(18,2))) - promote_precision(cast(coalesce(profit_loss#19661, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS profit#19647, store channel AS channel#19868, s_store_sk#712 AS id#19869]
                        :  +- *(41) SortMergeJoin [s_store_sk#712], [s_store_sk#19698], LeftOuter
                        :     :- *(37) Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
                        :     :  +- *(37) HashAggregate(keys=[s_store_sk#712], functions=[sum(UnscaledValue(ss_ext_sales_price#267)), sum(UnscaledValue(ss_net_profit#274))], output=[s_store_sk#712, sales#19658, profit#19659])
                        :     :     +- *(37) HashAggregate(keys=[s_store_sk#712], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#267)), partial_sum(UnscaledValue(ss_net_profit#274))], output=[s_store_sk#712, sum#19896L, sum#19897L])
                        :     :        +- *(37) Project [ss_ext_sales_price#267, ss_net_profit#274, s_store_sk#712]
                        :     :           +- *(37) SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
                        :     :              :- *(35) Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
                        :     :              :  +- AQEShuffleRead coalesced
                        :     :              :     +- ShuffleQueryStage 24
                        :     :              :        +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#236647]
                        :     :              :           +- *(22) Project [ss_store_sk#259, ss_ext_sales_price#267, ss_net_profit#274]
                        :     :              :              +- *(22) SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
                        :     :              :                 :- *(20) Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                        :     :              :                 :  +- AQEShuffleRead coalesced
                        :     :              :                 :     +- ShuffleQueryStage 0
                        :     :              :                 :        +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#235077]
                        :     :              :                 :           +- *(1) Filter (isnotnull(ss_sold_date_sk#252) AND isnotnull(ss_store_sk#259))
                        :     :              :                 :              +- *(1) ColumnarToRow
                        :     :              :                 :                 +- FileScan parquet [ss_sold_date_sk#252,ss_store_sk#259,ss_ext_sales_price#267,ss_net_profit#274] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_store_sk#259)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(...
                        :     :              :                 +- *(21) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                        :     :              :                    +- AQEShuffleRead coalesced
                        :     :              :                       +- ShuffleQueryStage 1
                        :     :              :                          +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#235096]
                        :     :              :                             +- *(2) Project [d_date_sk#612]
                        :     :              :                                +- *(2) Filter (((isnotnull(d_date#614) AND (d_date#614 >= 1998-08-27)) AND (d_date#614 <= 1998-09-26)) AND isnotnull(d_date_sk#612))
                        :     :              :                                   +- *(2) ColumnarToRow
                        :     :              :                                      +- FileScan parquet [d_date_sk#612,d_date#614] Batched: true, DataFilters: [isnotnull(d_date#614), (d_date#614 >= 1998-08-27), (d_date#614 <= 1998-09-26), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1998-08-27), LessThanOrEqual(d_date,1998-09-26), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                        :     :              +- *(36) Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
                        :     :                 +- AQEShuffleRead coalesced
                        :     :                    +- ShuffleQueryStage 2
                        :     :                       +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#235119]
                        :     :                          +- *(3) Filter isnotnull(s_store_sk#712)
                        :     :                             +- *(3) ColumnarToRow
                        :     :                                +- FileScan parquet [s_store_sk#712] Batched: true, DataFilters: [isnotnull(s_store_sk#712)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int>
                        :     +- *(40) Sort [s_store_sk#19698 ASC NULLS FIRST], false, 0
                        :        +- *(40) HashAggregate(keys=[s_store_sk#19698], functions=[sum(UnscaledValue(sr_return_amt#147)), sum(UnscaledValue(sr_net_loss#155))], output=[s_store_sk#19698, returns#19660, profit_loss#19661])
                        :           +- *(40) HashAggregate(keys=[s_store_sk#19698], functions=[partial_sum(UnscaledValue(sr_return_amt#147)), partial_sum(UnscaledValue(sr_net_loss#155))], output=[s_store_sk#19698, sum#19900L, sum#19901L])
                        :              +- *(40) Project [sr_return_amt#147, sr_net_loss#155, s_store_sk#19698]
                        :                 +- *(40) SortMergeJoin [sr_store_sk#143], [s_store_sk#19698], Inner
                        :                    :- *(38) Sort [sr_store_sk#143 ASC NULLS FIRST], false, 0
                        :                    :  +- AQEShuffleRead coalesced
                        :                    :     +- ShuffleQueryStage 23
                        :                    :        +- Exchange hashpartitioning(sr_store_sk#143, 200), ENSURE_REQUIREMENTS, [id=#236339]
                        :                    :           +- *(19) Project [sr_store_sk#143, sr_return_amt#147, sr_net_loss#155]
                        :                    :              +- *(19) SortMergeJoin [sr_returned_date_sk#136], [d_date_sk#19670], Inner
                        :                    :                 :- *(17) Sort [sr_returned_date_sk#136 ASC NULLS FIRST], false, 0
                        :                    :                 :  +- AQEShuffleRead coalesced
                        :                    :                 :     +- ShuffleQueryStage 3
                        :                    :                 :        +- Exchange hashpartitioning(sr_returned_date_sk#136, 200), ENSURE_REQUIREMENTS, [id=#235141]
                        :                    :                 :           +- *(4) Filter (isnotnull(sr_returned_date_sk#136) AND isnotnull(sr_store_sk#143))
                        :                    :                 :              +- *(4) ColumnarToRow
                        :                    :                 :                 +- FileScan parquet [sr_returned_date_sk#136,sr_store_sk#143,sr_return_amt#147,sr_net_loss#155] Batched: true, DataFilters: [isnotnull(sr_returned_date_sk#136), isnotnull(sr_store_sk#143)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_returned_date_sk), IsNotNull(sr_store_sk)], ReadSchema: struct<sr_returned_date_sk:int,sr_store_sk:int,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>
                        :                    :                 +- *(18) Sort [d_date_sk#19670 ASC NULLS FIRST], false, 0
                        :                    :                    +- AQEShuffleRead coalesced
                        :                    :                       +- ShuffleQueryStage 5
                        :                    :                          +- ReusedExchange [d_date_sk#19670], Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#235096]
                        :                    +- *(39) Sort [s_store_sk#19698 ASC NULLS FIRST], false, 0
                        :                       +- AQEShuffleRead coalesced
                        :                          +- ShuffleQueryStage 7
                        :                             +- ReusedExchange [s_store_sk#19698], Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#235119]
                        :- *(44) Project [sales#19662, returns#19664, CheckOverflow((promote_precision(cast(profit#19663 as decimal(18,2))) - promote_precision(cast(profit_loss#19665 as decimal(18,2)))), DecimalType(18,2), true) AS profit#19650, catalog channel AS channel#19878, cs_call_center_sk#555 AS id#19879]
                        :  +- CartesianProduct
                        :     :- *(42) HashAggregate(keys=[cs_call_center_sk#555], functions=[sum(UnscaledValue(cs_ext_sales_price#567)), sum(UnscaledValue(cs_net_profit#577))], output=[cs_call_center_sk#555, sales#19662, profit#19663])
                        :     :  +- AQEShuffleRead coalesced
                        :     :     +- ShuffleQueryStage 26
                        :     :        +- Exchange hashpartitioning(cs_call_center_sk#555, 200), ENSURE_REQUIREMENTS, [id=#237201]
                        :     :           +- *(28) HashAggregate(keys=[cs_call_center_sk#555], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#567)), partial_sum(UnscaledValue(cs_net_profit#577))], output=[cs_call_center_sk#555, sum#19904L, sum#19905L])
                        :     :              +- *(28) Project [cs_call_center_sk#555, cs_ext_sales_price#567, cs_net_profit#577]
                        :     :                 +- *(28) SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#19727], Inner
                        :     :                    :- *(26) Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
                        :     :                    :  +- AQEShuffleRead coalesced
                        :     :                    :     +- ShuffleQueryStage 8
                        :     :                    :        +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#235211]
                        :     :                    :           +- *(7) Filter isnotnull(cs_sold_date_sk#544)
                        :     :                    :              +- *(7) ColumnarToRow
                        :     :                    :                 +- FileScan parquet [cs_sold_date_sk#544,cs_call_center_sk#555,cs_ext_sales_price#567,cs_net_profit#577] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#544)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_call_center_sk:int,cs_ext_sales_price:decimal(7,2),cs_net_profit:de...
                        :     :                    +- *(27) Sort [d_date_sk#19727 ASC NULLS FIRST], false, 0
                        :     :                       +- AQEShuffleRead coalesced
                        :     :                          +- ShuffleQueryStage 10
                        :     :                             +- ReusedExchange [d_date_sk#19727], Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#235096]
                        :     +- *(43) HashAggregate(keys=[cr_call_center_sk#357], functions=[sum(UnscaledValue(cr_return_amount#364)), sum(UnscaledValue(cr_net_loss#372))], output=[returns#19664, profit_loss#19665])
                        :        +- AQEShuffleRead coalesced
                        :           +- ShuffleQueryStage 25
                        :              +- Exchange hashpartitioning(cr_call_center_sk#357, 200), ENSURE_REQUIREMENTS, [id=#236942]
                        :                 +- *(25) HashAggregate(keys=[cr_call_center_sk#357], functions=[partial_sum(UnscaledValue(cr_return_amount#364)), partial_sum(UnscaledValue(cr_net_loss#372))], output=[cr_call_center_sk#357, sum#19908L, sum#19909L])
                        :                    +- *(25) Project [cr_call_center_sk#357, cr_return_amount#364, cr_net_loss#372]
                        :                       +- *(25) SortMergeJoin [cr_returned_date_sk#346], [d_date_sk#19755], Inner
                        :                          :- *(23) Sort [cr_returned_date_sk#346 ASC NULLS FIRST], false, 0
                        :                          :  +- AQEShuffleRead coalesced
                        :                          :     +- ShuffleQueryStage 11
                        :                          :        +- Exchange hashpartitioning(cr_returned_date_sk#346, 200), ENSURE_REQUIREMENTS, [id=#235256]
                        :                          :           +- *(9) Filter isnotnull(cr_returned_date_sk#346)
                        :                          :              +- *(9) ColumnarToRow
                        :                          :                 +- FileScan parquet [cr_returned_date_sk#346,cr_call_center_sk#357,cr_return_amount#364,cr_net_loss#372] Batched: true, DataFilters: [isnotnull(cr_returned_date_sk#346)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cr_returned_date_sk)], ReadSchema: struct<cr_returned_date_sk:int,cr_call_center_sk:int,cr_return_amount:decimal(7,2),cr_net_loss:de...
                        :                          +- *(24) Sort [d_date_sk#19755 ASC NULLS FIRST], false, 0
                        :                             +- AQEShuffleRead coalesced
                        :                                +- ShuffleQueryStage 13
                        :                                   +- ReusedExchange [d_date_sk#19755], Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#235096]
                        +- *(51) Project [sales#19666, coalesce(returns#19668, 0.00) AS returns#19653, CheckOverflow((promote_precision(cast(profit#19667 as decimal(18,2))) - promote_precision(cast(coalesce(profit_loss#19669, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS profit#19654, web channel AS channel#19880, wp_web_page_sk#176 AS id#19881]
                           +- *(51) SortMergeJoin [wp_web_page_sk#176], [wp_web_page_sk#19839], LeftOuter
                              :- *(47) Sort [wp_web_page_sk#176 ASC NULLS FIRST], false, 0
                              :  +- *(47) HashAggregate(keys=[wp_web_page_sk#176], functions=[sum(UnscaledValue(ws_ext_sales_price#499)), sum(UnscaledValue(ws_net_profit#509))], output=[wp_web_page_sk#176, sales#19666, profit#19667])
                              :     +- *(47) HashAggregate(keys=[wp_web_page_sk#176], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#499)), partial_sum(UnscaledValue(ws_net_profit#509))], output=[wp_web_page_sk#176, sum#19912L, sum#19913L])
                              :        +- *(47) Project [ws_ext_sales_price#499, ws_net_profit#509, wp_web_page_sk#176]
                              :           +- *(47) SortMergeJoin [ws_web_page_sk#488], [wp_web_page_sk#176], Inner
                              :              :- *(45) Sort [ws_web_page_sk#488 ASC NULLS FIRST], false, 0
                              :              :  +- AQEShuffleRead coalesced
                              :              :     +- ShuffleQueryStage 28
                              :              :        +- Exchange hashpartitioning(ws_web_page_sk#488, 200), ENSURE_REQUIREMENTS, [id=#237837]
                              :              :           +- *(34) Project [ws_web_page_sk#488, ws_ext_sales_price#499, ws_net_profit#509]
                              :              :              +- *(34) SortMergeJoin [ws_sold_date_sk#476], [d_date_sk#19783], Inner
                              :              :                 :- *(32) Sort [ws_sold_date_sk#476 ASC NULLS FIRST], false, 0
                              :              :                 :  +- AQEShuffleRead coalesced
                              :              :                 :     +- ShuffleQueryStage 14
                              :              :                 :        +- Exchange hashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#235303]
                              :              :                 :           +- *(11) Filter (isnotnull(ws_sold_date_sk#476) AND isnotnull(ws_web_page_sk#488))
                              :              :                 :              +- *(11) ColumnarToRow
                              :              :                 :                 +- FileScan parquet [ws_sold_date_sk#476,ws_web_page_sk#488,ws_ext_sales_price#499,ws_net_profit#509] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#476), isnotnull(ws_web_page_sk#488)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_web_page_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_web_page_sk:int,ws_ext_sales_price:decimal(7,2),ws_net_profit:decim...
                              :              :                 +- *(33) Sort [d_date_sk#19783 ASC NULLS FIRST], false, 0
                              :              :                    +- AQEShuffleRead coalesced
                              :              :                       +- ShuffleQueryStage 16
                              :              :                          +- ReusedExchange [d_date_sk#19783], Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#235096]
                              :              +- *(46) Sort [wp_web_page_sk#176 ASC NULLS FIRST], false, 0
                              :                 +- AQEShuffleRead coalesced
                              :                    +- ShuffleQueryStage 17
                              :                       +- Exchange hashpartitioning(wp_web_page_sk#176, 200), ENSURE_REQUIREMENTS, [id=#235347]
                              :                          +- *(13) Filter isnotnull(wp_web_page_sk#176)
                              :                             +- *(13) ColumnarToRow
                              :                                +- FileScan parquet [wp_web_page_sk#176] Batched: true, DataFilters: [isnotnull(wp_web_page_sk#176)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_page.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(wp_web_page_sk)], ReadSchema: struct<wp_web_page_sk:int>
                              +- *(50) Sort [wp_web_page_sk#19839 ASC NULLS FIRST], false, 0
                                 +- *(50) HashAggregate(keys=[wp_web_page_sk#19839], functions=[sum(UnscaledValue(wr_return_amt#313)), sum(UnscaledValue(wr_net_loss#321))], output=[wp_web_page_sk#19839, returns#19668, profit_loss#19669])
                                    +- *(50) HashAggregate(keys=[wp_web_page_sk#19839], functions=[partial_sum(UnscaledValue(wr_return_amt#313)), partial_sum(UnscaledValue(wr_net_loss#321))], output=[wp_web_page_sk#19839, sum#19916L, sum#19917L])
                                       +- *(50) Project [wr_return_amt#313, wr_net_loss#321, wp_web_page_sk#19839]
                                          +- *(50) SortMergeJoin [wr_web_page_sk#309], [wp_web_page_sk#19839], Inner
                                             :- *(48) Sort [wr_web_page_sk#309 ASC NULLS FIRST], false, 0
                                             :  +- AQEShuffleRead coalesced
                                             :     +- ShuffleQueryStage 27
                                             :        +- Exchange hashpartitioning(wr_web_page_sk#309, 200), ENSURE_REQUIREMENTS, [id=#237605]
                                             :           +- *(31) Project [wr_web_page_sk#309, wr_return_amt#313, wr_net_loss#321]
                                             :              +- *(31) SortMergeJoin [wr_returned_date_sk#298], [d_date_sk#19811], Inner
                                             :                 :- *(29) Sort [wr_returned_date_sk#298 ASC NULLS FIRST], false, 0
                                             :                 :  +- AQEShuffleRead coalesced
                                             :                 :     +- ShuffleQueryStage 18
                                             :                 :        +- Exchange hashpartitioning(wr_returned_date_sk#298, 200), ENSURE_REQUIREMENTS, [id=#235369]
                                             :                 :           +- *(14) Filter (isnotnull(wr_returned_date_sk#298) AND isnotnull(wr_web_page_sk#309))
                                             :                 :              +- *(14) ColumnarToRow
                                             :                 :                 +- FileScan parquet [wr_returned_date_sk#298,wr_web_page_sk#309,wr_return_amt#313,wr_net_loss#321] Batched: true, DataFilters: [isnotnull(wr_returned_date_sk#298), isnotnull(wr_web_page_sk#309)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(wr_returned_date_sk), IsNotNull(wr_web_page_sk)], ReadSchema: struct<wr_returned_date_sk:int,wr_web_page_sk:int,wr_return_amt:decimal(7,2),wr_net_loss:decimal(...
                                             :                 +- *(30) Sort [d_date_sk#19811 ASC NULLS FIRST], false, 0
                                             :                    +- AQEShuffleRead coalesced
                                             :                       +- ShuffleQueryStage 20
                                             :                          +- ReusedExchange [d_date_sk#19811], Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#235096]
                                             +- *(49) Sort [wp_web_page_sk#19839 ASC NULLS FIRST], false, 0
                                                +- AQEShuffleRead coalesced
                                                   +- ShuffleQueryStage 22
                                                      +- ReusedExchange [wp_web_page_sk#19839], Exchange hashpartitioning(wp_web_page_sk#176, 200), ENSURE_REQUIREMENTS, [id=#235347]
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[channel#19871 ASC NULLS FIRST,id#19872 ASC NULLS FIRST], output=[channel#19871,id#19872,sales#19655,returns#19656,profit#19657])
   +- HashAggregate(keys=[channel#19871, id#19872, spark_grouping_id#19870L], functions=[sum(sales#19658), sum(returns#19646), sum(profit#19647)], output=[channel#19871, id#19872, sales#19655, returns#19656, profit#19657])
      +- Exchange hashpartitioning(channel#19871, id#19872, spark_grouping_id#19870L, 200), ENSURE_REQUIREMENTS, [id=#234833]
         +- HashAggregate(keys=[channel#19871, id#19872, spark_grouping_id#19870L], functions=[partial_sum(sales#19658), partial_sum(returns#19646), partial_sum(profit#19647)], output=[channel#19871, id#19872, spark_grouping_id#19870L, sum#19888, isEmpty#19889, sum#19890, isEmpty#19891, sum#19892, isEmpty#19893])
            +- Expand [[sales#19658, returns#19646, profit#19647, channel#19868, id#19869, 0], [sales#19658, returns#19646, profit#19647, channel#19868, null, 1], [sales#19658, returns#19646, profit#19647, null, null, 3]], [sales#19658, returns#19646, profit#19647, channel#19871, id#19872, spark_grouping_id#19870L]
               +- Union
                  :- Project [sales#19658, coalesce(returns#19660, 0.00) AS returns#19646, CheckOverflow((promote_precision(cast(profit#19659 as decimal(18,2))) - promote_precision(cast(coalesce(profit_loss#19661, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS profit#19647, store channel AS channel#19868, s_store_sk#712 AS id#19869]
                  :  +- SortMergeJoin [s_store_sk#712], [s_store_sk#19698], LeftOuter
                  :     :- Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
                  :     :  +- HashAggregate(keys=[s_store_sk#712], functions=[sum(UnscaledValue(ss_ext_sales_price#267)), sum(UnscaledValue(ss_net_profit#274))], output=[s_store_sk#712, sales#19658, profit#19659])
                  :     :     +- HashAggregate(keys=[s_store_sk#712], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#267)), partial_sum(UnscaledValue(ss_net_profit#274))], output=[s_store_sk#712, sum#19896L, sum#19897L])
                  :     :        +- Project [ss_ext_sales_price#267, ss_net_profit#274, s_store_sk#712]
                  :     :           +- SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
                  :     :              :- Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
                  :     :              :  +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#234734]
                  :     :              :     +- Project [ss_store_sk#259, ss_ext_sales_price#267, ss_net_profit#274]
                  :     :              :        +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
                  :     :              :           :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                  :     :              :           :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#234726]
                  :     :              :           :     +- Filter (isnotnull(ss_sold_date_sk#252) AND isnotnull(ss_store_sk#259))
                  :     :              :           :        +- FileScan parquet [ss_sold_date_sk#252,ss_store_sk#259,ss_ext_sales_price#267,ss_net_profit#274] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_store_sk#259)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(...
                  :     :              :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                  :     :              :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#234727]
                  :     :              :                 +- Project [d_date_sk#612]
                  :     :              :                    +- Filter (((isnotnull(d_date#614) AND (d_date#614 >= 1998-08-27)) AND (d_date#614 <= 1998-09-26)) AND isnotnull(d_date_sk#612))
                  :     :              :                       +- FileScan parquet [d_date_sk#612,d_date#614] Batched: true, DataFilters: [isnotnull(d_date#614), (d_date#614 >= 1998-08-27), (d_date#614 <= 1998-09-26), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1998-08-27), LessThanOrEqual(d_date,1998-09-26), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                  :     :              +- Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
                  :     :                 +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#234735]
                  :     :                    +- Filter isnotnull(s_store_sk#712)
                  :     :                       +- FileScan parquet [s_store_sk#712] Batched: true, DataFilters: [isnotnull(s_store_sk#712)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int>
                  :     +- Sort [s_store_sk#19698 ASC NULLS FIRST], false, 0
                  :        +- HashAggregate(keys=[s_store_sk#19698], functions=[sum(UnscaledValue(sr_return_amt#147)), sum(UnscaledValue(sr_net_loss#155))], output=[s_store_sk#19698, returns#19660, profit_loss#19661])
                  :           +- HashAggregate(keys=[s_store_sk#19698], functions=[partial_sum(UnscaledValue(sr_return_amt#147)), partial_sum(UnscaledValue(sr_net_loss#155))], output=[s_store_sk#19698, sum#19900L, sum#19901L])
                  :              +- Project [sr_return_amt#147, sr_net_loss#155, s_store_sk#19698]
                  :                 +- SortMergeJoin [sr_store_sk#143], [s_store_sk#19698], Inner
                  :                    :- Sort [sr_store_sk#143 ASC NULLS FIRST], false, 0
                  :                    :  +- Exchange hashpartitioning(sr_store_sk#143, 200), ENSURE_REQUIREMENTS, [id=#234751]
                  :                    :     +- Project [sr_store_sk#143, sr_return_amt#147, sr_net_loss#155]
                  :                    :        +- SortMergeJoin [sr_returned_date_sk#136], [d_date_sk#19670], Inner
                  :                    :           :- Sort [sr_returned_date_sk#136 ASC NULLS FIRST], false, 0
                  :                    :           :  +- Exchange hashpartitioning(sr_returned_date_sk#136, 200), ENSURE_REQUIREMENTS, [id=#234743]
                  :                    :           :     +- Filter (isnotnull(sr_returned_date_sk#136) AND isnotnull(sr_store_sk#143))
                  :                    :           :        +- FileScan parquet [sr_returned_date_sk#136,sr_store_sk#143,sr_return_amt#147,sr_net_loss#155] Batched: true, DataFilters: [isnotnull(sr_returned_date_sk#136), isnotnull(sr_store_sk#143)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_returned_date_sk), IsNotNull(sr_store_sk)], ReadSchema: struct<sr_returned_date_sk:int,sr_store_sk:int,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>
                  :                    :           +- Sort [d_date_sk#19670 ASC NULLS FIRST], false, 0
                  :                    :              +- Exchange hashpartitioning(d_date_sk#19670, 200), ENSURE_REQUIREMENTS, [id=#234744]
                  :                    :                 +- Project [d_date_sk#19670]
                  :                    :                    +- Filter (((isnotnull(d_date#19672) AND (d_date#19672 >= 1998-08-27)) AND (d_date#19672 <= 1998-09-26)) AND isnotnull(d_date_sk#19670))
                  :                    :                       +- FileScan parquet [d_date_sk#19670,d_date#19672] Batched: true, DataFilters: [isnotnull(d_date#19672), (d_date#19672 >= 1998-08-27), (d_date#19672 <= 1998-09-26), isnotnull(d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1998-08-27), LessThanOrEqual(d_date,1998-09-26), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                  :                    +- Sort [s_store_sk#19698 ASC NULLS FIRST], false, 0
                  :                       +- Exchange hashpartitioning(s_store_sk#19698, 200), ENSURE_REQUIREMENTS, [id=#234752]
                  :                          +- Filter isnotnull(s_store_sk#19698)
                  :                             +- FileScan parquet [s_store_sk#19698] Batched: true, DataFilters: [isnotnull(s_store_sk#19698)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int>
                  :- Project [sales#19662, returns#19664, CheckOverflow((promote_precision(cast(profit#19663 as decimal(18,2))) - promote_precision(cast(profit_loss#19665 as decimal(18,2)))), DecimalType(18,2), true) AS profit#19650, catalog channel AS channel#19878, cs_call_center_sk#555 AS id#19879]
                  :  +- CartesianProduct
                  :     :- HashAggregate(keys=[cs_call_center_sk#555], functions=[sum(UnscaledValue(cs_ext_sales_price#567)), sum(UnscaledValue(cs_net_profit#577))], output=[cs_call_center_sk#555, sales#19662, profit#19663])
                  :     :  +- Exchange hashpartitioning(cs_call_center_sk#555, 200), ENSURE_REQUIREMENTS, [id=#234774]
                  :     :     +- HashAggregate(keys=[cs_call_center_sk#555], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#567)), partial_sum(UnscaledValue(cs_net_profit#577))], output=[cs_call_center_sk#555, sum#19904L, sum#19905L])
                  :     :        +- Project [cs_call_center_sk#555, cs_ext_sales_price#567, cs_net_profit#577]
                  :     :           +- SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#19727], Inner
                  :     :              :- Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
                  :     :              :  +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#234766]
                  :     :              :     +- Filter isnotnull(cs_sold_date_sk#544)
                  :     :              :        +- FileScan parquet [cs_sold_date_sk#544,cs_call_center_sk#555,cs_ext_sales_price#567,cs_net_profit#577] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#544)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_call_center_sk:int,cs_ext_sales_price:decimal(7,2),cs_net_profit:de...
                  :     :              +- Sort [d_date_sk#19727 ASC NULLS FIRST], false, 0
                  :     :                 +- Exchange hashpartitioning(d_date_sk#19727, 200), ENSURE_REQUIREMENTS, [id=#234767]
                  :     :                    +- Project [d_date_sk#19727]
                  :     :                       +- Filter (((isnotnull(d_date#19729) AND (d_date#19729 >= 1998-08-27)) AND (d_date#19729 <= 1998-09-26)) AND isnotnull(d_date_sk#19727))
                  :     :                          +- FileScan parquet [d_date_sk#19727,d_date#19729] Batched: true, DataFilters: [isnotnull(d_date#19729), (d_date#19729 >= 1998-08-27), (d_date#19729 <= 1998-09-26), isnotnull(d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1998-08-27), LessThanOrEqual(d_date,1998-09-26), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                  :     +- HashAggregate(keys=[cr_call_center_sk#357], functions=[sum(UnscaledValue(cr_return_amount#364)), sum(UnscaledValue(cr_net_loss#372))], output=[returns#19664, profit_loss#19665])
                  :        +- Exchange hashpartitioning(cr_call_center_sk#357, 200), ENSURE_REQUIREMENTS, [id=#234785]
                  :           +- HashAggregate(keys=[cr_call_center_sk#357], functions=[partial_sum(UnscaledValue(cr_return_amount#364)), partial_sum(UnscaledValue(cr_net_loss#372))], output=[cr_call_center_sk#357, sum#19908L, sum#19909L])
                  :              +- Project [cr_call_center_sk#357, cr_return_amount#364, cr_net_loss#372]
                  :                 +- SortMergeJoin [cr_returned_date_sk#346], [d_date_sk#19755], Inner
                  :                    :- Sort [cr_returned_date_sk#346 ASC NULLS FIRST], false, 0
                  :                    :  +- Exchange hashpartitioning(cr_returned_date_sk#346, 200), ENSURE_REQUIREMENTS, [id=#234777]
                  :                    :     +- Filter isnotnull(cr_returned_date_sk#346)
                  :                    :        +- FileScan parquet [cr_returned_date_sk#346,cr_call_center_sk#357,cr_return_amount#364,cr_net_loss#372] Batched: true, DataFilters: [isnotnull(cr_returned_date_sk#346)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cr_returned_date_sk)], ReadSchema: struct<cr_returned_date_sk:int,cr_call_center_sk:int,cr_return_amount:decimal(7,2),cr_net_loss:de...
                  :                    +- Sort [d_date_sk#19755 ASC NULLS FIRST], false, 0
                  :                       +- Exchange hashpartitioning(d_date_sk#19755, 200), ENSURE_REQUIREMENTS, [id=#234778]
                  :                          +- Project [d_date_sk#19755]
                  :                             +- Filter (((isnotnull(d_date#19757) AND (d_date#19757 >= 1998-08-27)) AND (d_date#19757 <= 1998-09-26)) AND isnotnull(d_date_sk#19755))
                  :                                +- FileScan parquet [d_date_sk#19755,d_date#19757] Batched: true, DataFilters: [isnotnull(d_date#19757), (d_date#19757 >= 1998-08-27), (d_date#19757 <= 1998-09-26), isnotnull(d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1998-08-27), LessThanOrEqual(d_date,1998-09-26), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                  +- Project [sales#19666, coalesce(returns#19668, 0.00) AS returns#19653, CheckOverflow((promote_precision(cast(profit#19667 as decimal(18,2))) - promote_precision(cast(coalesce(profit_loss#19669, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS profit#19654, web channel AS channel#19880, wp_web_page_sk#176 AS id#19881]
                     +- SortMergeJoin [wp_web_page_sk#176], [wp_web_page_sk#19839], LeftOuter
                        :- Sort [wp_web_page_sk#176 ASC NULLS FIRST], false, 0
                        :  +- HashAggregate(keys=[wp_web_page_sk#176], functions=[sum(UnscaledValue(ws_ext_sales_price#499)), sum(UnscaledValue(ws_net_profit#509))], output=[wp_web_page_sk#176, sales#19666, profit#19667])
                        :     +- HashAggregate(keys=[wp_web_page_sk#176], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#499)), partial_sum(UnscaledValue(ws_net_profit#509))], output=[wp_web_page_sk#176, sum#19912L, sum#19913L])
                        :        +- Project [ws_ext_sales_price#499, ws_net_profit#509, wp_web_page_sk#176]
                        :           +- SortMergeJoin [ws_web_page_sk#488], [wp_web_page_sk#176], Inner
                        :              :- Sort [ws_web_page_sk#488 ASC NULLS FIRST], false, 0
                        :              :  +- Exchange hashpartitioning(ws_web_page_sk#488, 200), ENSURE_REQUIREMENTS, [id=#234798]
                        :              :     +- Project [ws_web_page_sk#488, ws_ext_sales_price#499, ws_net_profit#509]
                        :              :        +- SortMergeJoin [ws_sold_date_sk#476], [d_date_sk#19783], Inner
                        :              :           :- Sort [ws_sold_date_sk#476 ASC NULLS FIRST], false, 0
                        :              :           :  +- Exchange hashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#234790]
                        :              :           :     +- Filter (isnotnull(ws_sold_date_sk#476) AND isnotnull(ws_web_page_sk#488))
                        :              :           :        +- FileScan parquet [ws_sold_date_sk#476,ws_web_page_sk#488,ws_ext_sales_price#499,ws_net_profit#509] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#476), isnotnull(ws_web_page_sk#488)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_web_page_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_web_page_sk:int,ws_ext_sales_price:decimal(7,2),ws_net_profit:decim...
                        :              :           +- Sort [d_date_sk#19783 ASC NULLS FIRST], false, 0
                        :              :              +- Exchange hashpartitioning(d_date_sk#19783, 200), ENSURE_REQUIREMENTS, [id=#234791]
                        :              :                 +- Project [d_date_sk#19783]
                        :              :                    +- Filter (((isnotnull(d_date#19785) AND (d_date#19785 >= 1998-08-27)) AND (d_date#19785 <= 1998-09-26)) AND isnotnull(d_date_sk#19783))
                        :              :                       +- FileScan parquet [d_date_sk#19783,d_date#19785] Batched: true, DataFilters: [isnotnull(d_date#19785), (d_date#19785 >= 1998-08-27), (d_date#19785 <= 1998-09-26), isnotnull(d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1998-08-27), LessThanOrEqual(d_date,1998-09-26), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                        :              +- Sort [wp_web_page_sk#176 ASC NULLS FIRST], false, 0
                        :                 +- Exchange hashpartitioning(wp_web_page_sk#176, 200), ENSURE_REQUIREMENTS, [id=#234799]
                        :                    +- Filter isnotnull(wp_web_page_sk#176)
                        :                       +- FileScan parquet [wp_web_page_sk#176] Batched: true, DataFilters: [isnotnull(wp_web_page_sk#176)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_page.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(wp_web_page_sk)], ReadSchema: struct<wp_web_page_sk:int>
                        +- Sort [wp_web_page_sk#19839 ASC NULLS FIRST], false, 0
                           +- HashAggregate(keys=[wp_web_page_sk#19839], functions=[sum(UnscaledValue(wr_return_amt#313)), sum(UnscaledValue(wr_net_loss#321))], output=[wp_web_page_sk#19839, returns#19668, profit_loss#19669])
                              +- HashAggregate(keys=[wp_web_page_sk#19839], functions=[partial_sum(UnscaledValue(wr_return_amt#313)), partial_sum(UnscaledValue(wr_net_loss#321))], output=[wp_web_page_sk#19839, sum#19916L, sum#19917L])
                                 +- Project [wr_return_amt#313, wr_net_loss#321, wp_web_page_sk#19839]
                                    +- SortMergeJoin [wr_web_page_sk#309], [wp_web_page_sk#19839], Inner
                                       :- Sort [wr_web_page_sk#309 ASC NULLS FIRST], false, 0
                                       :  +- Exchange hashpartitioning(wr_web_page_sk#309, 200), ENSURE_REQUIREMENTS, [id=#234815]
                                       :     +- Project [wr_web_page_sk#309, wr_return_amt#313, wr_net_loss#321]
                                       :        +- SortMergeJoin [wr_returned_date_sk#298], [d_date_sk#19811], Inner
                                       :           :- Sort [wr_returned_date_sk#298 ASC NULLS FIRST], false, 0
                                       :           :  +- Exchange hashpartitioning(wr_returned_date_sk#298, 200), ENSURE_REQUIREMENTS, [id=#234807]
                                       :           :     +- Filter (isnotnull(wr_returned_date_sk#298) AND isnotnull(wr_web_page_sk#309))
                                       :           :        +- FileScan parquet [wr_returned_date_sk#298,wr_web_page_sk#309,wr_return_amt#313,wr_net_loss#321] Batched: true, DataFilters: [isnotnull(wr_returned_date_sk#298), isnotnull(wr_web_page_sk#309)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(wr_returned_date_sk), IsNotNull(wr_web_page_sk)], ReadSchema: struct<wr_returned_date_sk:int,wr_web_page_sk:int,wr_return_amt:decimal(7,2),wr_net_loss:decimal(...
                                       :           +- Sort [d_date_sk#19811 ASC NULLS FIRST], false, 0
                                       :              +- Exchange hashpartitioning(d_date_sk#19811, 200), ENSURE_REQUIREMENTS, [id=#234808]
                                       :                 +- Project [d_date_sk#19811]
                                       :                    +- Filter (((isnotnull(d_date#19813) AND (d_date#19813 >= 1998-08-27)) AND (d_date#19813 <= 1998-09-26)) AND isnotnull(d_date_sk#19811))
                                       :                       +- FileScan parquet [d_date_sk#19811,d_date#19813] Batched: true, DataFilters: [isnotnull(d_date#19813), (d_date#19813 >= 1998-08-27), (d_date#19813 <= 1998-09-26), isnotnull(d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1998-08-27), LessThanOrEqual(d_date,1998-09-26), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                                       +- Sort [wp_web_page_sk#19839 ASC NULLS FIRST], false, 0
                                          +- Exchange hashpartitioning(wp_web_page_sk#19839, 200), ENSURE_REQUIREMENTS, [id=#234816]
                                             +- Filter isnotnull(wp_web_page_sk#19839)
                                                +- FileScan parquet [wp_web_page_sk#19839] Batched: true, DataFilters: [isnotnull(wp_web_page_sk#19839)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_page.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(wp_web_page_sk)], ReadSchema: struct<wp_web_page_sk:int>
