AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_item_id#669 ASC NULLS FIRST], output=[i_item_id#669,agg1#3131,agg2#3132,agg3#3133,agg4#3134])
   +- *(18) HashAggregate(keys=[i_item_id#669], functions=[avg(ss_quantity#262), avg(UnscaledValue(ss_list_price#264)), avg(UnscaledValue(ss_coupon_amt#271)), avg(UnscaledValue(ss_sales_price#265))], output=[i_item_id#669, agg1#3131, agg2#3132, agg3#3133, agg4#3134])
      +- AQEShuffleRead coalesced
         +- ShuffleQueryStage 8
            +- Exchange hashpartitioning(i_item_id#669, 200), ENSURE_REQUIREMENTS, [id=#15785]
               +- *(17) HashAggregate(keys=[i_item_id#669], functions=[partial_avg(ss_quantity#262), partial_avg(UnscaledValue(ss_list_price#264)), partial_avg(UnscaledValue(ss_coupon_amt#271)), partial_avg(UnscaledValue(ss_sales_price#265))], output=[i_item_id#669, sum#3152, count#3153L, sum#3154, count#3155L, sum#3156, count#3157L, sum#3158, count#3159L])
                  +- *(17) Project [ss_quantity#262, ss_list_price#264, ss_sales_price#265, ss_coupon_amt#271, i_item_id#669]
                     +- *(17) SortMergeJoin [ss_promo_sk#260], [p_promo_sk#98], Inner
                        :- *(15) Sort [ss_promo_sk#260 ASC NULLS FIRST], false, 0
                        :  +- AQEShuffleRead coalesced
                        :     +- ShuffleQueryStage 7
                        :        +- Exchange hashpartitioning(ss_promo_sk#260, 200), ENSURE_REQUIREMENTS, [id=#15701]
                        :           +- *(14) Project [ss_promo_sk#260, ss_quantity#262, ss_list_price#264, ss_sales_price#265, ss_coupon_amt#271, i_item_id#669]
                        :              +- *(14) SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
                        :                 :- *(12) Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                        :                 :  +- AQEShuffleRead coalesced
                        :                 :     +- ShuffleQueryStage 6
                        :                 :        +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#15592]
                        :                 :           +- *(11) Project [ss_item_sk#254, ss_promo_sk#260, ss_quantity#262, ss_list_price#264, ss_sales_price#265, ss_coupon_amt#271]
                        :                 :              +- *(11) SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
                        :                 :                 :- *(9) Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                        :                 :                 :  +- AQEShuffleRead coalesced
                        :                 :                 :     +- ShuffleQueryStage 5
                        :                 :                 :        +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#15458]
                        :                 :                 :           +- *(8) Project [ss_sold_date_sk#252, ss_item_sk#254, ss_promo_sk#260, ss_quantity#262, ss_list_price#264, ss_sales_price#265, ss_coupon_amt#271]
                        :                 :                 :              +- *(8) SortMergeJoin [ss_cdemo_sk#256], [cd_demo_sk#222], Inner
                        :                 :                 :                 :- *(6) Sort [ss_cdemo_sk#256 ASC NULLS FIRST], false, 0
                        :                 :                 :                 :  +- ShuffleQueryStage 0
                        :                 :                 :                 :     +- Exchange hashpartitioning(ss_cdemo_sk#256, 200), ENSURE_REQUIREMENTS, [id=#14942]
                        :                 :                 :                 :        +- *(1) Filter (((isnotnull(ss_cdemo_sk#256) AND isnotnull(ss_sold_date_sk#252)) AND isnotnull(ss_item_sk#254)) AND isnotnull(ss_promo_sk#260))
                        :                 :                 :                 :           +- *(1) ColumnarToRow
                        :                 :                 :                 :              +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_cdemo_sk#256,ss_promo_sk#260,ss_quantity#262,ss_list_price#264,ss_sales_price#265,ss_coupon_amt#271] Batched: true, DataFilters: [isnotnull(ss_cdemo_sk#256), isnotnull(ss_sold_date_sk#252), isnotnull(ss_item_sk#254), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_cdemo_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk), IsNotNull(ss_promo_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_cdemo_sk:int,ss_promo_sk:int,ss_quantity:int,ss_list...
                        :                 :                 :                 +- *(7) Sort [cd_demo_sk#222 ASC NULLS FIRST], false, 0
                        :                 :                 :                    +- ShuffleQueryStage 1
                        :                 :                 :                       +- Exchange hashpartitioning(cd_demo_sk#222, 200), ENSURE_REQUIREMENTS, [id=#14961]
                        :                 :                 :                          +- *(2) Project [cd_demo_sk#222]
                        :                 :                 :                             +- *(2) Filter ((((((isnotnull(cd_gender#223) AND isnotnull(cd_marital_status#224)) AND isnotnull(cd_education_status#225)) AND (cd_gender#223 = M)) AND (cd_marital_status#224 = M)) AND (cd_education_status#225 = 4 yr Degree)) AND isnotnull(cd_demo_sk#222))
                        :                 :                 :                                +- *(2) ColumnarToRow
                        :                 :                 :                                   +- FileScan parquet [cd_demo_sk#222,cd_gender#223,cd_marital_status#224,cd_education_status#225] Batched: true, DataFilters: [isnotnull(cd_gender#223), isnotnull(cd_marital_status#224), isnotnull(cd_education_status#225), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer_demographics.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_marital_status), IsNotNull(cd_education_status), EqualTo(cd_g..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>
                        :                 :                 +- *(10) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                        :                 :                    +- AQEShuffleRead coalesced
                        :                 :                       +- ShuffleQueryStage 2
                        :                 :                          +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#14986]
                        :                 :                             +- *(3) Project [d_date_sk#612]
                        :                 :                                +- *(3) Filter ((isnotnull(d_year#618) AND (d_year#618 = 2001)) AND isnotnull(d_date_sk#612))
                        :                 :                                   +- *(3) ColumnarToRow
                        :                 :                                      +- FileScan parquet [d_date_sk#612,d_year#618] Batched: true, DataFilters: [isnotnull(d_year#618), (d_year#618 = 2001), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                        :                 +- *(13) Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                        :                    +- AQEShuffleRead coalesced
                        :                       +- ShuffleQueryStage 3
                        :                          +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#15009]
                        :                             +- *(4) Filter isnotnull(i_item_sk#668)
                        :                                +- *(4) ColumnarToRow
                        :                                   +- FileScan parquet [i_item_sk#668,i_item_id#669] Batched: true, DataFilters: [isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>
                        +- *(16) Sort [p_promo_sk#98 ASC NULLS FIRST], false, 0
                           +- AQEShuffleRead coalesced
                              +- ShuffleQueryStage 4
                                 +- Exchange hashpartitioning(p_promo_sk#98, 200), ENSURE_REQUIREMENTS, [id=#15032]
                                    +- *(5) Project [p_promo_sk#98]
                                       +- *(5) Filter (((p_channel_email#107 = N) OR (p_channel_event#112 = N)) AND isnotnull(p_promo_sk#98))
                                          +- *(5) ColumnarToRow
                                             +- FileScan parquet [p_promo_sk#98,p_channel_email#107,p_channel_event#112] Batched: true, DataFilters: [((p_channel_email#107 = N) OR (p_channel_event#112 = N)), isnotnull(p_promo_sk#98)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/promotion.parquet], PartitionFilters: [], PushedFilters: [Or(EqualTo(p_channel_email,N),EqualTo(p_channel_event,N)), IsNotNull(p_promo_sk)], ReadSchema: struct<p_promo_sk:int,p_channel_email:string,p_channel_event:string>
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_item_id#669 ASC NULLS FIRST], output=[i_item_id#669,agg1#3131,agg2#3132,agg3#3133,agg4#3134])
   +- HashAggregate(keys=[i_item_id#669], functions=[avg(ss_quantity#262), avg(UnscaledValue(ss_list_price#264)), avg(UnscaledValue(ss_coupon_amt#271)), avg(UnscaledValue(ss_sales_price#265))], output=[i_item_id#669, agg1#3131, agg2#3132, agg3#3133, agg4#3134])
      +- Exchange hashpartitioning(i_item_id#669, 200), ENSURE_REQUIREMENTS, [id=#14859]
         +- HashAggregate(keys=[i_item_id#669], functions=[partial_avg(ss_quantity#262), partial_avg(UnscaledValue(ss_list_price#264)), partial_avg(UnscaledValue(ss_coupon_amt#271)), partial_avg(UnscaledValue(ss_sales_price#265))], output=[i_item_id#669, sum#3152, count#3153L, sum#3154, count#3155L, sum#3156, count#3157L, sum#3158, count#3159L])
            +- Project [ss_quantity#262, ss_list_price#264, ss_sales_price#265, ss_coupon_amt#271, i_item_id#669]
               +- SortMergeJoin [ss_promo_sk#260], [p_promo_sk#98], Inner
                  :- Sort [ss_promo_sk#260 ASC NULLS FIRST], false, 0
                  :  +- Exchange hashpartitioning(ss_promo_sk#260, 200), ENSURE_REQUIREMENTS, [id=#14851]
                  :     +- Project [ss_promo_sk#260, ss_quantity#262, ss_list_price#264, ss_sales_price#265, ss_coupon_amt#271, i_item_id#669]
                  :        +- SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
                  :           :- Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                  :           :  +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#14843]
                  :           :     +- Project [ss_item_sk#254, ss_promo_sk#260, ss_quantity#262, ss_list_price#264, ss_sales_price#265, ss_coupon_amt#271]
                  :           :        +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
                  :           :           :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                  :           :           :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#14835]
                  :           :           :     +- Project [ss_sold_date_sk#252, ss_item_sk#254, ss_promo_sk#260, ss_quantity#262, ss_list_price#264, ss_sales_price#265, ss_coupon_amt#271]
                  :           :           :        +- SortMergeJoin [ss_cdemo_sk#256], [cd_demo_sk#222], Inner
                  :           :           :           :- Sort [ss_cdemo_sk#256 ASC NULLS FIRST], false, 0
                  :           :           :           :  +- Exchange hashpartitioning(ss_cdemo_sk#256, 200), ENSURE_REQUIREMENTS, [id=#14827]
                  :           :           :           :     +- Filter (((isnotnull(ss_cdemo_sk#256) AND isnotnull(ss_sold_date_sk#252)) AND isnotnull(ss_item_sk#254)) AND isnotnull(ss_promo_sk#260))
                  :           :           :           :        +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_cdemo_sk#256,ss_promo_sk#260,ss_quantity#262,ss_list_price#264,ss_sales_price#265,ss_coupon_amt#271] Batched: true, DataFilters: [isnotnull(ss_cdemo_sk#256), isnotnull(ss_sold_date_sk#252), isnotnull(ss_item_sk#254), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_cdemo_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk), IsNotNull(ss_promo_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_cdemo_sk:int,ss_promo_sk:int,ss_quantity:int,ss_list...
                  :           :           :           +- Sort [cd_demo_sk#222 ASC NULLS FIRST], false, 0
                  :           :           :              +- Exchange hashpartitioning(cd_demo_sk#222, 200), ENSURE_REQUIREMENTS, [id=#14828]
                  :           :           :                 +- Project [cd_demo_sk#222]
                  :           :           :                    +- Filter ((((((isnotnull(cd_gender#223) AND isnotnull(cd_marital_status#224)) AND isnotnull(cd_education_status#225)) AND (cd_gender#223 = M)) AND (cd_marital_status#224 = M)) AND (cd_education_status#225 = 4 yr Degree)) AND isnotnull(cd_demo_sk#222))
                  :           :           :                       +- FileScan parquet [cd_demo_sk#222,cd_gender#223,cd_marital_status#224,cd_education_status#225] Batched: true, DataFilters: [isnotnull(cd_gender#223), isnotnull(cd_marital_status#224), isnotnull(cd_education_status#225), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer_demographics.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_marital_status), IsNotNull(cd_education_status), EqualTo(cd_g..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>
                  :           :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                  :           :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#14836]
                  :           :                 +- Project [d_date_sk#612]
                  :           :                    +- Filter ((isnotnull(d_year#618) AND (d_year#618 = 2001)) AND isnotnull(d_date_sk#612))
                  :           :                       +- FileScan parquet [d_date_sk#612,d_year#618] Batched: true, DataFilters: [isnotnull(d_year#618), (d_year#618 = 2001), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                  :           +- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                  :              +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#14844]
                  :                 +- Filter isnotnull(i_item_sk#668)
                  :                    +- FileScan parquet [i_item_sk#668,i_item_id#669] Batched: true, DataFilters: [isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>
                  +- Sort [p_promo_sk#98 ASC NULLS FIRST], false, 0
                     +- Exchange hashpartitioning(p_promo_sk#98, 200), ENSURE_REQUIREMENTS, [id=#14852]
                        +- Project [p_promo_sk#98]
                           +- Filter (((p_channel_email#107 = N) OR (p_channel_event#112 = N)) AND isnotnull(p_promo_sk#98))
                              +- FileScan parquet [p_promo_sk#98,p_channel_email#107,p_channel_event#112] Batched: true, DataFilters: [((p_channel_email#107 = N) OR (p_channel_event#112 = N)), isnotnull(p_promo_sk#98)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/promotion.parquet], PartitionFilters: [], PushedFilters: [Or(EqualTo(p_channel_email,N),EqualTo(p_channel_event,N)), IsNotNull(p_promo_sk)], ReadSchema: struct<p_promo_sk:int,p_channel_email:string,p_channel_event:string>
