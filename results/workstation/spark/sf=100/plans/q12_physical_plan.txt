AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_category#680 ASC NULLS FIRST,i_class#678 ASC NULLS FIRST,i_item_id#669 ASC NULLS FIRST,i_item_desc#672 ASC NULLS FIRST,revenueratio#4516 ASC NULLS FIRST], output=[i_item_id#669,i_item_desc#672,i_category#680,i_class#678,i_current_price#673,itemrevenue#4515,revenueratio#4516])
   +- *(12) Project [i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673, itemrevenue#4515, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#4521) * 100.00), DecimalType(21,2), true) as decimal(27,2))) / promote_precision(_we0#4523)), DecimalType(38,17), true) AS revenueratio#4516]
      +- Window [sum(_w1#4522) windowspecdefinition(i_class#678, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#4523], [i_class#678]
         +- *(11) Sort [i_class#678 ASC NULLS FIRST], false, 0
            +- AQEShuffleRead coalesced
               +- ShuffleQueryStage 5
                  +- Exchange hashpartitioning(i_class#678, 200), ENSURE_REQUIREMENTS, [id=#24440]
                     +- *(10) HashAggregate(keys=[i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673], functions=[sum(UnscaledValue(ws_ext_sales_price#499))], output=[i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673, itemrevenue#4515, _w0#4521, _w1#4522])
                        +- AQEShuffleRead coalesced
                           +- ShuffleQueryStage 4
                              +- Exchange hashpartitioning(i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673, 200), ENSURE_REQUIREMENTS, [id=#24387]
                                 +- *(9) HashAggregate(keys=[i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#499))], output=[i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673, sum#4532L])
                                    +- *(9) Project [ws_ext_sales_price#499, i_item_id#669, i_item_desc#672, i_current_price#673, i_class#678, i_category#680]
                                       +- *(9) SortMergeJoin [ws_sold_date_sk#476], [d_date_sk#612], Inner
                                          :- *(7) Sort [ws_sold_date_sk#476 ASC NULLS FIRST], false, 0
                                          :  +- AQEShuffleRead coalesced
                                          :     +- ShuffleQueryStage 3
                                          :        +- Exchange hashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#24247]
                                          :           +- *(6) Project [ws_sold_date_sk#476, ws_ext_sales_price#499, i_item_id#669, i_item_desc#672, i_current_price#673, i_class#678, i_category#680]
                                          :              +- *(6) SortMergeJoin [ws_item_sk#479], [i_item_sk#668], Inner
                                          :                 :- *(4) Sort [ws_item_sk#479 ASC NULLS FIRST], false, 0
                                          :                 :  +- AQEShuffleRead coalesced
                                          :                 :     +- ShuffleQueryStage 0
                                          :                 :        +- Exchange hashpartitioning(ws_item_sk#479, 200), ENSURE_REQUIREMENTS, [id=#24037]
                                          :                 :           +- *(1) Filter (isnotnull(ws_item_sk#479) AND isnotnull(ws_sold_date_sk#476))
                                          :                 :              +- *(1) ColumnarToRow
                                          :                 :                 +- FileScan parquet [ws_sold_date_sk#476,ws_item_sk#479,ws_ext_sales_price#499] Batched: true, DataFilters: [isnotnull(ws_item_sk#479), isnotnull(ws_sold_date_sk#476)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_ext_sales_price:decimal(7,2)>
                                          :                 +- *(5) Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                                          :                    +- AQEShuffleRead coalesced
                                          :                       +- ShuffleQueryStage 1
                                          :                          +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#24054]
                                          :                             +- *(2) Filter (i_category#680 IN (Home,Children,Shoes) AND isnotnull(i_item_sk#668))
                                          :                                +- *(2) ColumnarToRow
                                          :                                   +- FileScan parquet [i_item_sk#668,i_item_id#669,i_item_desc#672,i_current_price#673,i_class#678,i_category#680] Batched: true, DataFilters: [i_category#680 IN (Home,Children,Shoes), isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [In(i_category, [Children,Home,Shoes]), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_class:str...
                                          +- *(8) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                                             +- AQEShuffleRead coalesced
                                                +- ShuffleQueryStage 2
                                                   +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#24077]
                                                      +- *(3) Project [d_date_sk#612]
                                                         +- *(3) Filter (((isnotnull(d_date#614) AND (d_date#614 >= 2000-03-01)) AND (d_date#614 <= 2000-03-31)) AND isnotnull(d_date_sk#612))
                                                            +- *(3) ColumnarToRow
                                                               +- FileScan parquet [d_date_sk#612,d_date#614] Batched: true, DataFilters: [isnotnull(d_date#614), (d_date#614 >= 2000-03-01), (d_date#614 <= 2000-03-31), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-03-01), LessThanOrEqual(d_date,2000-03-31), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_category#680 ASC NULLS FIRST,i_class#678 ASC NULLS FIRST,i_item_id#669 ASC NULLS FIRST,i_item_desc#672 ASC NULLS FIRST,revenueratio#4516 ASC NULLS FIRST], output=[i_item_id#669,i_item_desc#672,i_category#680,i_class#678,i_current_price#673,itemrevenue#4515,revenueratio#4516])
   +- Project [i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673, itemrevenue#4515, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#4521) * 100.00), DecimalType(21,2), true) as decimal(27,2))) / promote_precision(_we0#4523)), DecimalType(38,17), true) AS revenueratio#4516]
      +- Window [sum(_w1#4522) windowspecdefinition(i_class#678, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#4523], [i_class#678]
         +- Sort [i_class#678 ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(i_class#678, 200), ENSURE_REQUIREMENTS, [id=#23982]
               +- HashAggregate(keys=[i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673], functions=[sum(UnscaledValue(ws_ext_sales_price#499))], output=[i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673, itemrevenue#4515, _w0#4521, _w1#4522])
                  +- Exchange hashpartitioning(i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673, 200), ENSURE_REQUIREMENTS, [id=#23979]
                     +- HashAggregate(keys=[i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#499))], output=[i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673, sum#4532L])
                        +- Project [ws_ext_sales_price#499, i_item_id#669, i_item_desc#672, i_current_price#673, i_class#678, i_category#680]
                           +- SortMergeJoin [ws_sold_date_sk#476], [d_date_sk#612], Inner
                              :- Sort [ws_sold_date_sk#476 ASC NULLS FIRST], false, 0
                              :  +- Exchange hashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#23971]
                              :     +- Project [ws_sold_date_sk#476, ws_ext_sales_price#499, i_item_id#669, i_item_desc#672, i_current_price#673, i_class#678, i_category#680]
                              :        +- SortMergeJoin [ws_item_sk#479], [i_item_sk#668], Inner
                              :           :- Sort [ws_item_sk#479 ASC NULLS FIRST], false, 0
                              :           :  +- Exchange hashpartitioning(ws_item_sk#479, 200), ENSURE_REQUIREMENTS, [id=#23963]
                              :           :     +- Filter (isnotnull(ws_item_sk#479) AND isnotnull(ws_sold_date_sk#476))
                              :           :        +- FileScan parquet [ws_sold_date_sk#476,ws_item_sk#479,ws_ext_sales_price#499] Batched: true, DataFilters: [isnotnull(ws_item_sk#479), isnotnull(ws_sold_date_sk#476)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_ext_sales_price:decimal(7,2)>
                              :           +- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                              :              +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#23964]
                              :                 +- Filter (i_category#680 IN (Home,Children,Shoes) AND isnotnull(i_item_sk#668))
                              :                    +- FileScan parquet [i_item_sk#668,i_item_id#669,i_item_desc#672,i_current_price#673,i_class#678,i_category#680] Batched: true, DataFilters: [i_category#680 IN (Home,Children,Shoes), isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [In(i_category, [Children,Home,Shoes]), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_class:str...
                              +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                                 +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#23972]
                                    +- Project [d_date_sk#612]
                                       +- Filter (((isnotnull(d_date#614) AND (d_date#614 >= 2000-03-01)) AND (d_date#614 <= 2000-03-31)) AND isnotnull(d_date_sk#612))
                                          +- FileScan parquet [d_date_sk#612,d_date#614] Batched: true, DataFilters: [isnotnull(d_date#614), (d_date#614 >= 2000-03-01), (d_date#614 <= 2000-03-31), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-03-01), LessThanOrEqual(d_date,2000-03-31), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
