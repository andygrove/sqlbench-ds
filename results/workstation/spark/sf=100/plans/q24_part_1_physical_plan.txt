AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(24) Sort [c_last_name#409 ASC NULLS FIRST, c_first_name#408 ASC NULLS FIRST, s_store_name#717 ASC NULLS FIRST], true, 0
   +- AQEShuffleRead coalesced
      +- ShuffleQueryStage 12
         +- Exchange rangepartitioning(c_last_name#409 ASC NULLS FIRST, c_first_name#408 ASC NULLS FIRST, s_store_name#717 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#101540]
            +- *(23) Filter (isnotnull(paid#7856) AND (cast(paid#7856 as decimal(33,8)) > cast(Subquery subquery#7857, [id=#99742] as decimal(33,8))))
               :  +- Subquery subquery#7857, [id=#99742]
               :     +- AdaptiveSparkPlan isFinalPlan=true
                     +- == Final Plan ==
                        *(23) HashAggregate(keys=[], functions=[avg(netpaid#7858)], output=[(0.05 * avg(netpaid))#7862])
                        +- ShuffleQueryStage 18
                           +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#102328]
                              +- *(22) HashAggregate(keys=[], functions=[partial_avg(netpaid#7858)], output=[sum#7880, count#7881L])
                                 +- *(22) HashAggregate(keys=[c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683], functions=[sum(UnscaledValue(ss_net_profit#274))], output=[netpaid#7858])
                                    +- AQEShuffleRead coalesced
                                       +- ShuffleQueryStage 17
                                          +- Exchange hashpartitioning(c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683, 200), ENSURE_REQUIREMENTS, [id=#102280]
                                             +- *(21) HashAggregate(keys=[c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683], functions=[partial_sum(UnscaledValue(ss_net_profit#274))], output=[c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683, sum#7883L])
                                                +- *(21) Project [ss_net_profit#274, s_store_name#717, s_state#736, i_current_price#673, i_size#683, i_color#685, i_units#686, i_manager_id#688, c_first_name#408, c_last_name#409, ca_state#70]
                                                   +- *(21) SortMergeJoin [c_current_addr_sk#404, s_zip#737], [ca_address_sk#62, ca_zip#71], Inner, NOT (c_birth_country#414 = upper(ca_country#72))
                                                      :- *(19) Sort [c_current_addr_sk#404 ASC NULLS FIRST, s_zip#737 ASC NULLS FIRST], false, 0
                                                      :  +- AQEShuffleRead coalesced
                                                      :     +- ShuffleQueryStage 16
                                                      :        +- Exchange hashpartitioning(c_current_addr_sk#404, s_zip#737, 200), ENSURE_REQUIREMENTS, [id=#102173]
                                                      :           +- *(18) Project [ss_net_profit#274, s_store_name#717, s_state#736, s_zip#737, i_current_price#673, i_size#683, i_color#685, i_units#686, i_manager_id#688, c_current_addr_sk#404, c_first_name#408, c_last_name#409, c_birth_country#414]
                                                      :              +- *(18) SortMergeJoin [ss_customer_sk#255], [c_customer_sk#400], Inner
                                                      :                 :- *(16) Sort [ss_customer_sk#255 ASC NULLS FIRST], false, 0
                                                      :                 :  +- AQEShuffleRead coalesced
                                                      :                 :     +- ShuffleQueryStage 15
                                                      :                 :        +- Exchange hashpartitioning(ss_customer_sk#255, 200), ENSURE_REQUIREMENTS, [id=#102035]
                                                      :                 :           +- *(15) Project [ss_customer_sk#255, ss_net_profit#274, s_store_name#717, s_state#736, s_zip#737, i_current_price#673, i_size#683, i_color#685, i_units#686, i_manager_id#688]
                                                      :                 :              +- *(15) SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
                                                      :                 :                 :- *(13) Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                                                      :                 :                 :  +- AQEShuffleRead coalesced
                                                      :                 :                 :     +- ShuffleQueryStage 9
                                                      :                 :                 :        +- ReusedExchange [ss_item_sk#254, ss_customer_sk#255, ss_net_profit#274, s_store_name#717, s_state#736, s_zip#737], Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#100996]
                                                      :                 :                 +- *(14) Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                                                      :                 :                    +- AQEShuffleRead coalesced
                                                      :                 :                       +- ShuffleQueryStage 10
                                                      :                 :                          +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#101790]
                                                      :                 :                             +- *(10) Filter isnotnull(i_item_sk#668)
                                                      :                 :                                +- *(10) ColumnarToRow
                                                      :                 :                                   +- FileScan parquet [i_item_sk#668,i_current_price#673,i_size#683,i_color#685,i_units#686,i_manager_id#688] Batched: true, DataFilters: [isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
                                                      :                 +- *(17) Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
                                                      :                    +- AQEShuffleRead coalesced
                                                      :                       +- ShuffleQueryStage 12
                                                      :                          +- ReusedExchange [c_customer_sk#400, c_current_addr_sk#404, c_first_name#408, c_last_name#409, c_birth_country#414], Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#100059]
                                                      +- *(20) Sort [ca_address_sk#62 ASC NULLS FIRST, ca_zip#71 ASC NULLS FIRST], false, 0
                                                         +- AQEShuffleRead coalesced
                                                            +- ShuffleQueryStage 14
                                                               +- ReusedExchange [ca_address_sk#62, ca_state#70, ca_zip#71, ca_country#72], Exchange hashpartitioning(ca_address_sk#62, ca_zip#71, 200), ENSURE_REQUIREMENTS, [id=#100080]
                     +- == Initial Plan ==
                        HashAggregate(keys=[], functions=[avg(netpaid#7858)], output=[(0.05 * avg(netpaid))#7862])
                        +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#99740]
                           +- HashAggregate(keys=[], functions=[partial_avg(netpaid#7858)], output=[sum#7880, count#7881L])
                              +- HashAggregate(keys=[c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683], functions=[sum(UnscaledValue(ss_net_profit#274))], output=[netpaid#7858])
                                 +- Exchange hashpartitioning(c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683, 200), ENSURE_REQUIREMENTS, [id=#99736]
                                    +- HashAggregate(keys=[c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683], functions=[partial_sum(UnscaledValue(ss_net_profit#274))], output=[c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683, sum#7883L])
                                       +- Project [ss_net_profit#274, s_store_name#717, s_state#736, i_current_price#673, i_size#683, i_color#685, i_units#686, i_manager_id#688, c_first_name#408, c_last_name#409, ca_state#70]
                                          +- SortMergeJoin [c_current_addr_sk#404, s_zip#737], [ca_address_sk#62, ca_zip#71], Inner, NOT (c_birth_country#414 = upper(ca_country#72))
                                             :- Sort [c_current_addr_sk#404 ASC NULLS FIRST, s_zip#737 ASC NULLS FIRST], false, 0
                                             :  +- Exchange hashpartitioning(c_current_addr_sk#404, s_zip#737, 200), ENSURE_REQUIREMENTS, [id=#99728]
                                             :     +- Project [ss_net_profit#274, s_store_name#717, s_state#736, s_zip#737, i_current_price#673, i_size#683, i_color#685, i_units#686, i_manager_id#688, c_current_addr_sk#404, c_first_name#408, c_last_name#409, c_birth_country#414]
                                             :        +- SortMergeJoin [ss_customer_sk#255], [c_customer_sk#400], Inner
                                             :           :- Sort [ss_customer_sk#255 ASC NULLS FIRST], false, 0
                                             :           :  +- Exchange hashpartitioning(ss_customer_sk#255, 200), ENSURE_REQUIREMENTS, [id=#99720]
                                             :           :     +- Project [ss_customer_sk#255, ss_net_profit#274, s_store_name#717, s_state#736, s_zip#737, i_current_price#673, i_size#683, i_color#685, i_units#686, i_manager_id#688]
                                             :           :        +- SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
                                             :           :           :- Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                                             :           :           :  +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#99712]
                                             :           :           :     +- Project [ss_item_sk#254, ss_customer_sk#255, ss_net_profit#274, s_store_name#717, s_state#736, s_zip#737]
                                             :           :           :        +- SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
                                             :           :           :           :- Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
                                             :           :           :           :  +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#99704]
                                             :           :           :           :     +- Project [ss_item_sk#254, ss_customer_sk#255, ss_store_sk#259, ss_net_profit#274]
                                             :           :           :           :        +- SortMergeJoin [ss_ticket_number#261L, ss_item_sk#254], [sr_ticket_number#145L, sr_item_sk#138], Inner
                                             :           :           :           :           :- Sort [ss_ticket_number#261L ASC NULLS FIRST, ss_item_sk#254 ASC NULLS FIRST], false, 0
                                             :           :           :           :           :  +- Exchange hashpartitioning(ss_ticket_number#261L, ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#99696]
                                             :           :           :           :           :     +- Filter (((isnotnull(ss_ticket_number#261L) AND isnotnull(ss_item_sk#254)) AND isnotnull(ss_store_sk#259)) AND isnotnull(ss_customer_sk#255))
                                             :           :           :           :           :        +- FileScan parquet [ss_item_sk#254,ss_customer_sk#255,ss_store_sk#259,ss_ticket_number#261L,ss_net_profit#274] Batched: true, DataFilters: [isnotnull(ss_ticket_number#261L), isnotnull(ss_item_sk#254), isnotnull(ss_store_sk#259), isnotnu..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_store_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_net_profit:de...
                                             :           :           :           :           +- Sort [sr_ticket_number#145L ASC NULLS FIRST, sr_item_sk#138 ASC NULLS FIRST], false, 0
                                             :           :           :           :              +- Exchange hashpartitioning(sr_ticket_number#145L, sr_item_sk#138, 200), ENSURE_REQUIREMENTS, [id=#99697]
                                             :           :           :           :                 +- Filter (isnotnull(sr_ticket_number#145L) AND isnotnull(sr_item_sk#138))
                                             :           :           :           :                    +- FileScan parquet [sr_item_sk#138,sr_ticket_number#145L] Batched: true, DataFilters: [isnotnull(sr_ticket_number#145L), isnotnull(sr_item_sk#138)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
                                             :           :           :           +- Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
                                             :           :           :              +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#99705]
                                             :           :           :                 +- Project [s_store_sk#712, s_store_name#717, s_state#736, s_zip#737]
                                             :           :           :                    +- Filter (((isnotnull(s_market_id#722) AND (s_market_id#722 = 5)) AND isnotnull(s_store_sk#712)) AND isnotnull(s_zip#737))
                                             :           :           :                       +- FileScan parquet [s_store_sk#712,s_store_name#717,s_market_id#722,s_state#736,s_zip#737] Batched: true, DataFilters: [isnotnull(s_market_id#722), (s_market_id#722 = 5), isnotnull(s_store_sk#712), isnotnull(s_zip#737)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_market_id), EqualTo(s_market_id,5), IsNotNull(s_store_sk), IsNotNull(s_zip)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
                                             :           :           +- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                                             :           :              +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#99713]
                                             :           :                 +- Filter isnotnull(i_item_sk#668)
                                             :           :                    +- FileScan parquet [i_item_sk#668,i_current_price#673,i_size#683,i_color#685,i_units#686,i_manager_id#688] Batched: true, DataFilters: [isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
                                             :           +- Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
                                             :              +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#99721]
                                             :                 +- Filter ((isnotnull(c_customer_sk#400) AND isnotnull(c_current_addr_sk#404)) AND isnotnull(c_birth_country#414))
                                             :                    +- FileScan parquet [c_customer_sk#400,c_current_addr_sk#404,c_first_name#408,c_last_name#409,c_birth_country#414] Batched: true, DataFilters: [isnotnull(c_customer_sk#400), isnotnull(c_current_addr_sk#404), isnotnull(c_birth_country#414)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk), IsNotNull(c_birth_country)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int,c_first_name:string,c_last_name:string,c_birth_cou...
                                             +- Sort [ca_address_sk#62 ASC NULLS FIRST, ca_zip#71 ASC NULLS FIRST], false, 0
                                                +- Exchange hashpartitioning(ca_address_sk#62, ca_zip#71, 200), ENSURE_REQUIREMENTS, [id=#99729]
                                                   +- Filter ((isnotnull(ca_address_sk#62) AND isnotnull(ca_country#72)) AND isnotnull(ca_zip#71))
                                                      +- FileScan parquet [ca_address_sk#62,ca_state#70,ca_zip#71,ca_country#72] Batched: true, DataFilters: [isnotnull(ca_address_sk#62), isnotnull(ca_country#72), isnotnull(ca_zip#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer_address.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_country), IsNotNull(ca_zip)], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_zip:string,ca_country:string>
               +- *(23) HashAggregate(keys=[c_last_name#409, c_first_name#408, s_store_name#717], functions=[sum(netpaid#7858)], output=[c_last_name#409, c_first_name#408, s_store_name#717, paid#7856])
                  +- AQEShuffleRead coalesced
                     +- ShuffleQueryStage 11
                        +- Exchange hashpartitioning(c_last_name#409, c_first_name#408, s_store_name#717, 200), ENSURE_REQUIREMENTS, [id=#101500]
                           +- *(22) HashAggregate(keys=[c_last_name#409, c_first_name#408, s_store_name#717], functions=[partial_sum(netpaid#7858)], output=[c_last_name#409, c_first_name#408, s_store_name#717, sum#7874, isEmpty#7875])
                              +- *(22) HashAggregate(keys=[c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683], functions=[sum(UnscaledValue(ss_net_profit#274))], output=[c_last_name#409, c_first_name#408, s_store_name#717, netpaid#7858])
                                 +- AQEShuffleRead coalesced
                                    +- ShuffleQueryStage 10
                                       +- Exchange hashpartitioning(c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683, 200), ENSURE_REQUIREMENTS, [id=#101430]
                                          +- *(21) HashAggregate(keys=[c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683], functions=[partial_sum(UnscaledValue(ss_net_profit#274))], output=[c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683, sum#7877L])
                                             +- *(21) Project [ss_net_profit#274, s_store_name#717, s_state#736, i_current_price#673, i_size#683, i_color#685, i_units#686, i_manager_id#688, c_first_name#408, c_last_name#409, ca_state#70]
                                                +- *(21) SortMergeJoin [c_current_addr_sk#404, s_zip#737], [ca_address_sk#62, ca_zip#71], Inner, NOT (c_birth_country#414 = upper(ca_country#72))
                                                   :- *(19) Sort [c_current_addr_sk#404 ASC NULLS FIRST, s_zip#737 ASC NULLS FIRST], false, 0
                                                   :  +- AQEShuffleRead coalesced
                                                   :     +- ShuffleQueryStage 9
                                                   :        +- Exchange hashpartitioning(c_current_addr_sk#404, s_zip#737, 200), ENSURE_REQUIREMENTS, [id=#101311]
                                                   :           +- *(18) Project [ss_net_profit#274, s_store_name#717, s_state#736, s_zip#737, i_current_price#673, i_size#683, i_color#685, i_units#686, i_manager_id#688, c_current_addr_sk#404, c_first_name#408, c_last_name#409, c_birth_country#414]
                                                   :              +- *(18) SortMergeJoin [ss_customer_sk#255], [c_customer_sk#400], Inner
                                                   :                 :- *(16) Sort [ss_customer_sk#255 ASC NULLS FIRST], false, 0
                                                   :                 :  +- AQEShuffleRead coalesced
                                                   :                 :     +- ShuffleQueryStage 8
                                                   :                 :        +- Exchange hashpartitioning(ss_customer_sk#255, 200), ENSURE_REQUIREMENTS, [id=#101167]
                                                   :                 :           +- *(15) Project [ss_customer_sk#255, ss_net_profit#274, s_store_name#717, s_state#736, s_zip#737, i_current_price#673, i_size#683, i_color#685, i_units#686, i_manager_id#688]
                                                   :                 :              +- *(15) SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
                                                   :                 :                 :- *(13) Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                                                   :                 :                 :  +- AQEShuffleRead coalesced
                                                   :                 :                 :     +- ShuffleQueryStage 7
                                                   :                 :                 :        +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#100996]
                                                   :                 :                 :           +- *(12) Project [ss_item_sk#254, ss_customer_sk#255, ss_net_profit#274, s_store_name#717, s_state#736, s_zip#737]
                                                   :                 :                 :              +- *(12) SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
                                                   :                 :                 :                 :- *(10) Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
                                                   :                 :                 :                 :  +- AQEShuffleRead coalesced
                                                   :                 :                 :                 :     +- ShuffleQueryStage 6
                                                   :                 :                 :                 :        +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#100800]
                                                   :                 :                 :                 :           +- *(9) Project [ss_item_sk#254, ss_customer_sk#255, ss_store_sk#259, ss_net_profit#274]
                                                   :                 :                 :                 :              +- *(9) SortMergeJoin [ss_ticket_number#261L, ss_item_sk#254], [sr_ticket_number#145L, sr_item_sk#138], Inner
                                                   :                 :                 :                 :                 :- *(7) Sort [ss_ticket_number#261L ASC NULLS FIRST, ss_item_sk#254 ASC NULLS FIRST], false, 0
                                                   :                 :                 :                 :                 :  +- ShuffleQueryStage 0
                                                   :                 :                 :                 :                 :     +- Exchange hashpartitioning(ss_ticket_number#261L, ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#99975]
                                                   :                 :                 :                 :                 :        +- *(1) Filter (((isnotnull(ss_ticket_number#261L) AND isnotnull(ss_item_sk#254)) AND isnotnull(ss_store_sk#259)) AND isnotnull(ss_customer_sk#255))
                                                   :                 :                 :                 :                 :           +- *(1) ColumnarToRow
                                                   :                 :                 :                 :                 :              +- FileScan parquet [ss_item_sk#254,ss_customer_sk#255,ss_store_sk#259,ss_ticket_number#261L,ss_net_profit#274] Batched: true, DataFilters: [isnotnull(ss_ticket_number#261L), isnotnull(ss_item_sk#254), isnotnull(ss_store_sk#259), isnotnu..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_store_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_net_profit:de...
                                                   :                 :                 :                 :                 +- *(8) Sort [sr_ticket_number#145L ASC NULLS FIRST, sr_item_sk#138 ASC NULLS FIRST], false, 0
                                                   :                 :                 :                 :                    +- ShuffleQueryStage 1
                                                   :                 :                 :                 :                       +- Exchange hashpartitioning(sr_ticket_number#145L, sr_item_sk#138, 200), ENSURE_REQUIREMENTS, [id=#99992]
                                                   :                 :                 :                 :                          +- *(2) Filter (isnotnull(sr_ticket_number#145L) AND isnotnull(sr_item_sk#138))
                                                   :                 :                 :                 :                             +- *(2) ColumnarToRow
                                                   :                 :                 :                 :                                +- FileScan parquet [sr_item_sk#138,sr_ticket_number#145L] Batched: true, DataFilters: [isnotnull(sr_ticket_number#145L), isnotnull(sr_item_sk#138)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
                                                   :                 :                 :                 +- *(11) Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
                                                   :                 :                 :                    +- AQEShuffleRead coalesced
                                                   :                 :                 :                       +- ShuffleQueryStage 2
                                                   :                 :                 :                          +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#100015]
                                                   :                 :                 :                             +- *(3) Project [s_store_sk#712, s_store_name#717, s_state#736, s_zip#737]
                                                   :                 :                 :                                +- *(3) Filter (((isnotnull(s_market_id#722) AND (s_market_id#722 = 5)) AND isnotnull(s_store_sk#712)) AND isnotnull(s_zip#737))
                                                   :                 :                 :                                   +- *(3) ColumnarToRow
                                                   :                 :                 :                                      +- FileScan parquet [s_store_sk#712,s_store_name#717,s_market_id#722,s_state#736,s_zip#737] Batched: true, DataFilters: [isnotnull(s_market_id#722), (s_market_id#722 = 5), isnotnull(s_store_sk#712), isnotnull(s_zip#737)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_market_id), EqualTo(s_market_id,5), IsNotNull(s_store_sk), IsNotNull(s_zip)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
                                                   :                 :                 +- *(14) Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                                                   :                 :                    +- AQEShuffleRead coalesced
                                                   :                 :                       +- ShuffleQueryStage 3
                                                   :                 :                          +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#100038]
                                                   :                 :                             +- *(4) Filter ((isnotnull(i_color#685) AND (i_color#685 = misty)) AND isnotnull(i_item_sk#668))
                                                   :                 :                                +- *(4) ColumnarToRow
                                                   :                 :                                   +- FileScan parquet [i_item_sk#668,i_current_price#673,i_size#683,i_color#685,i_units#686,i_manager_id#688] Batched: true, DataFilters: [isnotnull(i_color#685), (i_color#685 = misty), isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_color), EqualTo(i_color,misty), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
                                                   :                 +- *(17) Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
                                                   :                    +- AQEShuffleRead coalesced
                                                   :                       +- ShuffleQueryStage 4
                                                   :                          +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#100059]
                                                   :                             +- *(5) Filter ((isnotnull(c_customer_sk#400) AND isnotnull(c_current_addr_sk#404)) AND isnotnull(c_birth_country#414))
                                                   :                                +- *(5) ColumnarToRow
                                                   :                                   +- FileScan parquet [c_customer_sk#400,c_current_addr_sk#404,c_first_name#408,c_last_name#409,c_birth_country#414] Batched: true, DataFilters: [isnotnull(c_customer_sk#400), isnotnull(c_current_addr_sk#404), isnotnull(c_birth_country#414)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk), IsNotNull(c_birth_country)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int,c_first_name:string,c_last_name:string,c_birth_cou...
                                                   +- *(20) Sort [ca_address_sk#62 ASC NULLS FIRST, ca_zip#71 ASC NULLS FIRST], false, 0
                                                      +- AQEShuffleRead coalesced
                                                         +- ShuffleQueryStage 5
                                                            +- Exchange hashpartitioning(ca_address_sk#62, ca_zip#71, 200), ENSURE_REQUIREMENTS, [id=#100080]
                                                               +- *(6) Filter ((isnotnull(ca_address_sk#62) AND isnotnull(ca_country#72)) AND isnotnull(ca_zip#71))
                                                                  +- *(6) ColumnarToRow
                                                                     +- FileScan parquet [ca_address_sk#62,ca_state#70,ca_zip#71,ca_country#72] Batched: true, DataFilters: [isnotnull(ca_address_sk#62), isnotnull(ca_country#72), isnotnull(ca_zip#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer_address.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_country), IsNotNull(ca_zip)], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_zip:string,ca_country:string>
+- == Initial Plan ==
   Sort [c_last_name#409 ASC NULLS FIRST, c_first_name#408 ASC NULLS FIRST, s_store_name#717 ASC NULLS FIRST], true, 0
   +- Exchange rangepartitioning(c_last_name#409 ASC NULLS FIRST, c_first_name#408 ASC NULLS FIRST, s_store_name#717 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#99811]
      +- Filter (isnotnull(paid#7856) AND (cast(paid#7856 as decimal(33,8)) > cast(Subquery subquery#7857, [id=#99742] as decimal(33,8))))
         :  +- Subquery subquery#7857, [id=#99742]
         :     +- AdaptiveSparkPlan isFinalPlan=true
               +- == Final Plan ==
                  *(23) HashAggregate(keys=[], functions=[avg(netpaid#7858)], output=[(0.05 * avg(netpaid))#7862])
                  +- ShuffleQueryStage 18
                     +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#102328]
                        +- *(22) HashAggregate(keys=[], functions=[partial_avg(netpaid#7858)], output=[sum#7880, count#7881L])
                           +- *(22) HashAggregate(keys=[c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683], functions=[sum(UnscaledValue(ss_net_profit#274))], output=[netpaid#7858])
                              +- AQEShuffleRead coalesced
                                 +- ShuffleQueryStage 17
                                    +- Exchange hashpartitioning(c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683, 200), ENSURE_REQUIREMENTS, [id=#102280]
                                       +- *(21) HashAggregate(keys=[c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683], functions=[partial_sum(UnscaledValue(ss_net_profit#274))], output=[c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683, sum#7883L])
                                          +- *(21) Project [ss_net_profit#274, s_store_name#717, s_state#736, i_current_price#673, i_size#683, i_color#685, i_units#686, i_manager_id#688, c_first_name#408, c_last_name#409, ca_state#70]
                                             +- *(21) SortMergeJoin [c_current_addr_sk#404, s_zip#737], [ca_address_sk#62, ca_zip#71], Inner, NOT (c_birth_country#414 = upper(ca_country#72))
                                                :- *(19) Sort [c_current_addr_sk#404 ASC NULLS FIRST, s_zip#737 ASC NULLS FIRST], false, 0
                                                :  +- AQEShuffleRead coalesced
                                                :     +- ShuffleQueryStage 16
                                                :        +- Exchange hashpartitioning(c_current_addr_sk#404, s_zip#737, 200), ENSURE_REQUIREMENTS, [id=#102173]
                                                :           +- *(18) Project [ss_net_profit#274, s_store_name#717, s_state#736, s_zip#737, i_current_price#673, i_size#683, i_color#685, i_units#686, i_manager_id#688, c_current_addr_sk#404, c_first_name#408, c_last_name#409, c_birth_country#414]
                                                :              +- *(18) SortMergeJoin [ss_customer_sk#255], [c_customer_sk#400], Inner
                                                :                 :- *(16) Sort [ss_customer_sk#255 ASC NULLS FIRST], false, 0
                                                :                 :  +- AQEShuffleRead coalesced
                                                :                 :     +- ShuffleQueryStage 15
                                                :                 :        +- Exchange hashpartitioning(ss_customer_sk#255, 200), ENSURE_REQUIREMENTS, [id=#102035]
                                                :                 :           +- *(15) Project [ss_customer_sk#255, ss_net_profit#274, s_store_name#717, s_state#736, s_zip#737, i_current_price#673, i_size#683, i_color#685, i_units#686, i_manager_id#688]
                                                :                 :              +- *(15) SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
                                                :                 :                 :- *(13) Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                                                :                 :                 :  +- AQEShuffleRead coalesced
                                                :                 :                 :     +- ShuffleQueryStage 9
                                                :                 :                 :        +- ReusedExchange [ss_item_sk#254, ss_customer_sk#255, ss_net_profit#274, s_store_name#717, s_state#736, s_zip#737], Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#100996]
                                                :                 :                 +- *(14) Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                                                :                 :                    +- AQEShuffleRead coalesced
                                                :                 :                       +- ShuffleQueryStage 10
                                                :                 :                          +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#101790]
                                                :                 :                             +- *(10) Filter isnotnull(i_item_sk#668)
                                                :                 :                                +- *(10) ColumnarToRow
                                                :                 :                                   +- FileScan parquet [i_item_sk#668,i_current_price#673,i_size#683,i_color#685,i_units#686,i_manager_id#688] Batched: true, DataFilters: [isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
                                                :                 +- *(17) Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
                                                :                    +- AQEShuffleRead coalesced
                                                :                       +- ShuffleQueryStage 12
                                                :                          +- ReusedExchange [c_customer_sk#400, c_current_addr_sk#404, c_first_name#408, c_last_name#409, c_birth_country#414], Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#100059]
                                                +- *(20) Sort [ca_address_sk#62 ASC NULLS FIRST, ca_zip#71 ASC NULLS FIRST], false, 0
                                                   +- AQEShuffleRead coalesced
                                                      +- ShuffleQueryStage 14
                                                         +- ReusedExchange [ca_address_sk#62, ca_state#70, ca_zip#71, ca_country#72], Exchange hashpartitioning(ca_address_sk#62, ca_zip#71, 200), ENSURE_REQUIREMENTS, [id=#100080]
               +- == Initial Plan ==
                  HashAggregate(keys=[], functions=[avg(netpaid#7858)], output=[(0.05 * avg(netpaid))#7862])
                  +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#99740]
                     +- HashAggregate(keys=[], functions=[partial_avg(netpaid#7858)], output=[sum#7880, count#7881L])
                        +- HashAggregate(keys=[c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683], functions=[sum(UnscaledValue(ss_net_profit#274))], output=[netpaid#7858])
                           +- Exchange hashpartitioning(c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683, 200), ENSURE_REQUIREMENTS, [id=#99736]
                              +- HashAggregate(keys=[c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683], functions=[partial_sum(UnscaledValue(ss_net_profit#274))], output=[c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683, sum#7883L])
                                 +- Project [ss_net_profit#274, s_store_name#717, s_state#736, i_current_price#673, i_size#683, i_color#685, i_units#686, i_manager_id#688, c_first_name#408, c_last_name#409, ca_state#70]
                                    +- SortMergeJoin [c_current_addr_sk#404, s_zip#737], [ca_address_sk#62, ca_zip#71], Inner, NOT (c_birth_country#414 = upper(ca_country#72))
                                       :- Sort [c_current_addr_sk#404 ASC NULLS FIRST, s_zip#737 ASC NULLS FIRST], false, 0
                                       :  +- Exchange hashpartitioning(c_current_addr_sk#404, s_zip#737, 200), ENSURE_REQUIREMENTS, [id=#99728]
                                       :     +- Project [ss_net_profit#274, s_store_name#717, s_state#736, s_zip#737, i_current_price#673, i_size#683, i_color#685, i_units#686, i_manager_id#688, c_current_addr_sk#404, c_first_name#408, c_last_name#409, c_birth_country#414]
                                       :        +- SortMergeJoin [ss_customer_sk#255], [c_customer_sk#400], Inner
                                       :           :- Sort [ss_customer_sk#255 ASC NULLS FIRST], false, 0
                                       :           :  +- Exchange hashpartitioning(ss_customer_sk#255, 200), ENSURE_REQUIREMENTS, [id=#99720]
                                       :           :     +- Project [ss_customer_sk#255, ss_net_profit#274, s_store_name#717, s_state#736, s_zip#737, i_current_price#673, i_size#683, i_color#685, i_units#686, i_manager_id#688]
                                       :           :        +- SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
                                       :           :           :- Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                                       :           :           :  +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#99712]
                                       :           :           :     +- Project [ss_item_sk#254, ss_customer_sk#255, ss_net_profit#274, s_store_name#717, s_state#736, s_zip#737]
                                       :           :           :        +- SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
                                       :           :           :           :- Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
                                       :           :           :           :  +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#99704]
                                       :           :           :           :     +- Project [ss_item_sk#254, ss_customer_sk#255, ss_store_sk#259, ss_net_profit#274]
                                       :           :           :           :        +- SortMergeJoin [ss_ticket_number#261L, ss_item_sk#254], [sr_ticket_number#145L, sr_item_sk#138], Inner
                                       :           :           :           :           :- Sort [ss_ticket_number#261L ASC NULLS FIRST, ss_item_sk#254 ASC NULLS FIRST], false, 0
                                       :           :           :           :           :  +- Exchange hashpartitioning(ss_ticket_number#261L, ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#99696]
                                       :           :           :           :           :     +- Filter (((isnotnull(ss_ticket_number#261L) AND isnotnull(ss_item_sk#254)) AND isnotnull(ss_store_sk#259)) AND isnotnull(ss_customer_sk#255))
                                       :           :           :           :           :        +- FileScan parquet [ss_item_sk#254,ss_customer_sk#255,ss_store_sk#259,ss_ticket_number#261L,ss_net_profit#274] Batched: true, DataFilters: [isnotnull(ss_ticket_number#261L), isnotnull(ss_item_sk#254), isnotnull(ss_store_sk#259), isnotnu..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_store_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_net_profit:de...
                                       :           :           :           :           +- Sort [sr_ticket_number#145L ASC NULLS FIRST, sr_item_sk#138 ASC NULLS FIRST], false, 0
                                       :           :           :           :              +- Exchange hashpartitioning(sr_ticket_number#145L, sr_item_sk#138, 200), ENSURE_REQUIREMENTS, [id=#99697]
                                       :           :           :           :                 +- Filter (isnotnull(sr_ticket_number#145L) AND isnotnull(sr_item_sk#138))
                                       :           :           :           :                    +- FileScan parquet [sr_item_sk#138,sr_ticket_number#145L] Batched: true, DataFilters: [isnotnull(sr_ticket_number#145L), isnotnull(sr_item_sk#138)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
                                       :           :           :           +- Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
                                       :           :           :              +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#99705]
                                       :           :           :                 +- Project [s_store_sk#712, s_store_name#717, s_state#736, s_zip#737]
                                       :           :           :                    +- Filter (((isnotnull(s_market_id#722) AND (s_market_id#722 = 5)) AND isnotnull(s_store_sk#712)) AND isnotnull(s_zip#737))
                                       :           :           :                       +- FileScan parquet [s_store_sk#712,s_store_name#717,s_market_id#722,s_state#736,s_zip#737] Batched: true, DataFilters: [isnotnull(s_market_id#722), (s_market_id#722 = 5), isnotnull(s_store_sk#712), isnotnull(s_zip#737)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_market_id), EqualTo(s_market_id,5), IsNotNull(s_store_sk), IsNotNull(s_zip)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
                                       :           :           +- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                                       :           :              +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#99713]
                                       :           :                 +- Filter isnotnull(i_item_sk#668)
                                       :           :                    +- FileScan parquet [i_item_sk#668,i_current_price#673,i_size#683,i_color#685,i_units#686,i_manager_id#688] Batched: true, DataFilters: [isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
                                       :           +- Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
                                       :              +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#99721]
                                       :                 +- Filter ((isnotnull(c_customer_sk#400) AND isnotnull(c_current_addr_sk#404)) AND isnotnull(c_birth_country#414))
                                       :                    +- FileScan parquet [c_customer_sk#400,c_current_addr_sk#404,c_first_name#408,c_last_name#409,c_birth_country#414] Batched: true, DataFilters: [isnotnull(c_customer_sk#400), isnotnull(c_current_addr_sk#404), isnotnull(c_birth_country#414)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk), IsNotNull(c_birth_country)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int,c_first_name:string,c_last_name:string,c_birth_cou...
                                       +- Sort [ca_address_sk#62 ASC NULLS FIRST, ca_zip#71 ASC NULLS FIRST], false, 0
                                          +- Exchange hashpartitioning(ca_address_sk#62, ca_zip#71, 200), ENSURE_REQUIREMENTS, [id=#99729]
                                             +- Filter ((isnotnull(ca_address_sk#62) AND isnotnull(ca_country#72)) AND isnotnull(ca_zip#71))
                                                +- FileScan parquet [ca_address_sk#62,ca_state#70,ca_zip#71,ca_country#72] Batched: true, DataFilters: [isnotnull(ca_address_sk#62), isnotnull(ca_country#72), isnotnull(ca_zip#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer_address.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_country), IsNotNull(ca_zip)], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_zip:string,ca_country:string>
         +- HashAggregate(keys=[c_last_name#409, c_first_name#408, s_store_name#717], functions=[sum(netpaid#7858)], output=[c_last_name#409, c_first_name#408, s_store_name#717, paid#7856])
            +- Exchange hashpartitioning(c_last_name#409, c_first_name#408, s_store_name#717, 200), ENSURE_REQUIREMENTS, [id=#99807]
               +- HashAggregate(keys=[c_last_name#409, c_first_name#408, s_store_name#717], functions=[partial_sum(netpaid#7858)], output=[c_last_name#409, c_first_name#408, s_store_name#717, sum#7874, isEmpty#7875])
                  +- HashAggregate(keys=[c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683], functions=[sum(UnscaledValue(ss_net_profit#274))], output=[c_last_name#409, c_first_name#408, s_store_name#717, netpaid#7858])
                     +- Exchange hashpartitioning(c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683, 200), ENSURE_REQUIREMENTS, [id=#99803]
                        +- HashAggregate(keys=[c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683], functions=[partial_sum(UnscaledValue(ss_net_profit#274))], output=[c_last_name#409, c_first_name#408, s_store_name#717, ca_state#70, s_state#736, i_color#685, i_current_price#673, i_manager_id#688, i_units#686, i_size#683, sum#7877L])
                           +- Project [ss_net_profit#274, s_store_name#717, s_state#736, i_current_price#673, i_size#683, i_color#685, i_units#686, i_manager_id#688, c_first_name#408, c_last_name#409, ca_state#70]
                              +- SortMergeJoin [c_current_addr_sk#404, s_zip#737], [ca_address_sk#62, ca_zip#71], Inner, NOT (c_birth_country#414 = upper(ca_country#72))
                                 :- Sort [c_current_addr_sk#404 ASC NULLS FIRST, s_zip#737 ASC NULLS FIRST], false, 0
                                 :  +- Exchange hashpartitioning(c_current_addr_sk#404, s_zip#737, 200), ENSURE_REQUIREMENTS, [id=#99795]
                                 :     +- Project [ss_net_profit#274, s_store_name#717, s_state#736, s_zip#737, i_current_price#673, i_size#683, i_color#685, i_units#686, i_manager_id#688, c_current_addr_sk#404, c_first_name#408, c_last_name#409, c_birth_country#414]
                                 :        +- SortMergeJoin [ss_customer_sk#255], [c_customer_sk#400], Inner
                                 :           :- Sort [ss_customer_sk#255 ASC NULLS FIRST], false, 0
                                 :           :  +- Exchange hashpartitioning(ss_customer_sk#255, 200), ENSURE_REQUIREMENTS, [id=#99787]
                                 :           :     +- Project [ss_customer_sk#255, ss_net_profit#274, s_store_name#717, s_state#736, s_zip#737, i_current_price#673, i_size#683, i_color#685, i_units#686, i_manager_id#688]
                                 :           :        +- SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
                                 :           :           :- Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                                 :           :           :  +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#99779]
                                 :           :           :     +- Project [ss_item_sk#254, ss_customer_sk#255, ss_net_profit#274, s_store_name#717, s_state#736, s_zip#737]
                                 :           :           :        +- SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
                                 :           :           :           :- Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
                                 :           :           :           :  +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#99771]
                                 :           :           :           :     +- Project [ss_item_sk#254, ss_customer_sk#255, ss_store_sk#259, ss_net_profit#274]
                                 :           :           :           :        +- SortMergeJoin [ss_ticket_number#261L, ss_item_sk#254], [sr_ticket_number#145L, sr_item_sk#138], Inner
                                 :           :           :           :           :- Sort [ss_ticket_number#261L ASC NULLS FIRST, ss_item_sk#254 ASC NULLS FIRST], false, 0
                                 :           :           :           :           :  +- Exchange hashpartitioning(ss_ticket_number#261L, ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#99763]
                                 :           :           :           :           :     +- Filter (((isnotnull(ss_ticket_number#261L) AND isnotnull(ss_item_sk#254)) AND isnotnull(ss_store_sk#259)) AND isnotnull(ss_customer_sk#255))
                                 :           :           :           :           :        +- FileScan parquet [ss_item_sk#254,ss_customer_sk#255,ss_store_sk#259,ss_ticket_number#261L,ss_net_profit#274] Batched: true, DataFilters: [isnotnull(ss_ticket_number#261L), isnotnull(ss_item_sk#254), isnotnull(ss_store_sk#259), isnotnu..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_store_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_net_profit:de...
                                 :           :           :           :           +- Sort [sr_ticket_number#145L ASC NULLS FIRST, sr_item_sk#138 ASC NULLS FIRST], false, 0
                                 :           :           :           :              +- Exchange hashpartitioning(sr_ticket_number#145L, sr_item_sk#138, 200), ENSURE_REQUIREMENTS, [id=#99764]
                                 :           :           :           :                 +- Filter (isnotnull(sr_ticket_number#145L) AND isnotnull(sr_item_sk#138))
                                 :           :           :           :                    +- FileScan parquet [sr_item_sk#138,sr_ticket_number#145L] Batched: true, DataFilters: [isnotnull(sr_ticket_number#145L), isnotnull(sr_item_sk#138)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
                                 :           :           :           +- Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
                                 :           :           :              +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#99772]
                                 :           :           :                 +- Project [s_store_sk#712, s_store_name#717, s_state#736, s_zip#737]
                                 :           :           :                    +- Filter (((isnotnull(s_market_id#722) AND (s_market_id#722 = 5)) AND isnotnull(s_store_sk#712)) AND isnotnull(s_zip#737))
                                 :           :           :                       +- FileScan parquet [s_store_sk#712,s_store_name#717,s_market_id#722,s_state#736,s_zip#737] Batched: true, DataFilters: [isnotnull(s_market_id#722), (s_market_id#722 = 5), isnotnull(s_store_sk#712), isnotnull(s_zip#737)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_market_id), EqualTo(s_market_id,5), IsNotNull(s_store_sk), IsNotNull(s_zip)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
                                 :           :           +- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                                 :           :              +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#99780]
                                 :           :                 +- Filter ((isnotnull(i_color#685) AND (i_color#685 = misty)) AND isnotnull(i_item_sk#668))
                                 :           :                    +- FileScan parquet [i_item_sk#668,i_current_price#673,i_size#683,i_color#685,i_units#686,i_manager_id#688] Batched: true, DataFilters: [isnotnull(i_color#685), (i_color#685 = misty), isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_color), EqualTo(i_color,misty), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
                                 :           +- Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
                                 :              +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#99788]
                                 :                 +- Filter ((isnotnull(c_customer_sk#400) AND isnotnull(c_current_addr_sk#404)) AND isnotnull(c_birth_country#414))
                                 :                    +- FileScan parquet [c_customer_sk#400,c_current_addr_sk#404,c_first_name#408,c_last_name#409,c_birth_country#414] Batched: true, DataFilters: [isnotnull(c_customer_sk#400), isnotnull(c_current_addr_sk#404), isnotnull(c_birth_country#414)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk), IsNotNull(c_birth_country)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int,c_first_name:string,c_last_name:string,c_birth_cou...
                                 +- Sort [ca_address_sk#62 ASC NULLS FIRST, ca_zip#71 ASC NULLS FIRST], false, 0
                                    +- Exchange hashpartitioning(ca_address_sk#62, ca_zip#71, 200), ENSURE_REQUIREMENTS, [id=#99796]
                                       +- Filter ((isnotnull(ca_address_sk#62) AND isnotnull(ca_country#72)) AND isnotnull(ca_zip#71))
                                          +- FileScan parquet [ca_address_sk#62,ca_state#70,ca_zip#71,ca_country#72] Batched: true, DataFilters: [isnotnull(ca_address_sk#62), isnotnull(ca_country#72), isnotnull(ca_zip#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer_address.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_country), IsNotNull(ca_zip)], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_zip:string,ca_country:string>
