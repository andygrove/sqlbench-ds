AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#12899 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#12900 as decimal(22,6)))), DecimalType(22,6), true) ASC NULLS FIRST,psum#12902 ASC NULLS FIRST], output=[cc_name#6,d_year#618,avg_monthly_sales#12900,sum_sales#12899,psum#12902,nsum#12903])
   +- *(54) Project [cc_name#6, d_year#618, avg_monthly_sales#12900, sum_sales#12899, sum_sales#12919 AS psum#12902, sum_sales#12927 AS nsum#12903]
      +- *(54) SortMergeJoin [i_category#680, i_brand#676, cc_name#6, rn#12901], [i_category#13072, i_brand#13068, cc_name#13150, (rn#13179 - 1)], Inner
         :- *(52) Project [i_category#680, i_brand#676, cc_name#6, d_year#618, sum_sales#12899, avg_monthly_sales#12900, rn#12901, sum_sales#12919]
         :  +- *(52) SortMergeJoin [i_category#680, i_brand#676, cc_name#6, rn#12901], [i_category#12952, i_brand#12948, cc_name#13030, (rn#13059 + 1)], Inner
         :     :- *(50) Sort [i_category#680 ASC NULLS FIRST, i_brand#676 ASC NULLS FIRST, cc_name#6 ASC NULLS FIRST, rn#12901 ASC NULLS FIRST], false, 0
         :     :  +- AQEShuffleRead coalesced
         :     :     +- ShuffleQueryStage 39
         :     :        +- Exchange hashpartitioning(i_category#680, i_brand#676, cc_name#6, rn#12901, 200), ENSURE_REQUIREMENTS, [id=#166880]
         :     :           +- *(45) Project [i_category#680, i_brand#676, cc_name#6, d_year#618, sum_sales#12899, avg_monthly_sales#12900, rn#12901]
         :     :              +- *(45) Filter ((isnotnull(avg_monthly_sales#12900) AND (avg_monthly_sales#12900 > 0.000000)) AND (CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#12899 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#12900 as decimal(22,6)))), DecimalType(22,6), true), false)) / promote_precision(cast(avg_monthly_sales#12900 as decimal(22,6)))), DecimalType(38,16), true) > 0.1000000000000000))
         :     :                 +- Window [avg(_w0#12913) windowspecdefinition(i_category#680, i_brand#676, cc_name#6, d_year#618, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#12900], [i_category#680, i_brand#676, cc_name#6, d_year#618]
         :     :                    +- *(44) Project [i_category#680, i_brand#676, cc_name#6, d_year#618, sum_sales#12899, _w0#12913, rn#12901]
         :     :                       +- *(44) Filter (isnotnull(d_year#618) AND (d_year#618 = 1999))
         :     :                          +- Window [rank(d_year#618, d_moy#620) windowspecdefinition(i_category#680, i_brand#676, cc_name#6, d_year#618 ASC NULLS FIRST, d_moy#620 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#12901], [i_category#680, i_brand#676, cc_name#6], [d_year#618 ASC NULLS FIRST, d_moy#620 ASC NULLS FIRST]
         :     :                             +- *(43) Sort [i_category#680 ASC NULLS FIRST, i_brand#676 ASC NULLS FIRST, cc_name#6 ASC NULLS FIRST, d_year#618 ASC NULLS FIRST, d_moy#620 ASC NULLS FIRST], false, 0
         :     :                                +- AQEShuffleRead coalesced
         :     :                                   +- ShuffleQueryStage 35
         :     :                                      +- Exchange hashpartitioning(i_category#680, i_brand#676, cc_name#6, 200), ENSURE_REQUIREMENTS, [id=#166676]
         :     :                                         +- *(40) HashAggregate(keys=[i_category#680, i_brand#676, cc_name#6, d_year#618, d_moy#620], functions=[sum(UnscaledValue(cs_sales_price#565))], output=[i_category#680, i_brand#676, cc_name#6, d_year#618, d_moy#620, sum_sales#12899, _w0#12913])
         :     :                                            +- AQEShuffleRead coalesced
         :     :                                               +- ShuffleQueryStage 30
         :     :                                                  +- Exchange hashpartitioning(i_category#680, i_brand#676, cc_name#6, d_year#618, d_moy#620, 200), ENSURE_REQUIREMENTS, [id=#166383]
         :     :                                                     +- *(33) HashAggregate(keys=[i_category#680, i_brand#676, cc_name#6, d_year#618, d_moy#620], functions=[partial_sum(UnscaledValue(cs_sales_price#565))], output=[i_category#680, i_brand#676, cc_name#6, d_year#618, d_moy#620, sum#13181L])
         :     :                                                        +- *(33) Project [i_brand#676, i_category#680, cs_sales_price#565, d_year#618, d_moy#620, cc_name#6]
         :     :                                                           +- *(33) SortMergeJoin [cs_call_center_sk#555], [cc_call_center_sk#0], Inner
         :     :                                                              :- *(31) Sort [cs_call_center_sk#555 ASC NULLS FIRST], false, 0
         :     :                                                              :  +- AQEShuffleRead coalesced
         :     :                                                              :     +- ShuffleQueryStage 25
         :     :                                                              :        +- Exchange hashpartitioning(cs_call_center_sk#555, 200), ENSURE_REQUIREMENTS, [id=#165976]
         :     :                                                              :           +- *(24) Project [i_brand#676, i_category#680, cs_call_center_sk#555, cs_sales_price#565, d_year#618, d_moy#620]
         :     :                                                              :              +- *(24) SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#612], Inner
         :     :                                                              :                 :- *(22) Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
         :     :                                                              :                 :  +- AQEShuffleRead coalesced
         :     :                                                              :                 :     +- ShuffleQueryStage 20
         :     :                                                              :                 :        +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#165566]
         :     :                                                              :                 :           +- *(15) Project [i_brand#676, i_category#680, cs_sold_date_sk#544, cs_call_center_sk#555, cs_sales_price#565]
         :     :                                                              :                 :              +- *(15) SortMergeJoin [i_item_sk#668], [cs_item_sk#559], Inner
         :     :                                                              :                 :                 :- *(13) Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
         :     :                                                              :                 :                 :  +- AQEShuffleRead coalesced
         :     :                                                              :                 :                 :     +- ShuffleQueryStage 0
         :     :                                                              :                 :                 :        +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#163806]
         :     :                                                              :                 :                 :           +- *(1) Filter ((isnotnull(i_item_sk#668) AND isnotnull(i_category#680)) AND isnotnull(i_brand#676))
         :     :                                                              :                 :                 :              +- *(1) ColumnarToRow
         :     :                                                              :                 :                 :                 +- FileScan parquet [i_item_sk#668,i_brand#676,i_category#680] Batched: true, DataFilters: [isnotnull(i_item_sk#668), isnotnull(i_category#680), isnotnull(i_brand#676)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
         :     :                                                              :                 :                 +- *(14) Sort [cs_item_sk#559 ASC NULLS FIRST], false, 0
         :     :                                                              :                 :                    +- AQEShuffleRead coalesced
         :     :                                                              :                 :                       +- ShuffleQueryStage 1
         :     :                                                              :                 :                          +- Exchange hashpartitioning(cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#163823]
         :     :                                                              :                 :                             +- *(2) Filter ((isnotnull(cs_item_sk#559) AND isnotnull(cs_sold_date_sk#544)) AND isnotnull(cs_call_center_sk#555))
         :     :                                                              :                 :                                +- *(2) ColumnarToRow
         :     :                                                              :                 :                                   +- FileScan parquet [cs_sold_date_sk#544,cs_call_center_sk#555,cs_item_sk#559,cs_sales_price#565] Batched: true, DataFilters: [isnotnull(cs_item_sk#559), isnotnull(cs_sold_date_sk#544), isnotnull(cs_call_center_sk#555)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_call_center_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_call_center_sk:int,cs_item_sk:int,cs_sales_price:decimal(7,2)>
         :     :                                                              :                 +- *(23) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
         :     :                                                              :                    +- AQEShuffleRead coalesced
         :     :                                                              :                       +- ShuffleQueryStage 2
         :     :                                                              :                          +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#163844]
         :     :                                                              :                             +- *(3) Filter ((((d_year#618 = 1999) OR ((d_year#618 = 1998) AND (d_moy#620 = 12))) OR ((d_year#618 = 2000) AND (d_moy#620 = 1))) AND isnotnull(d_date_sk#612))
         :     :                                                              :                                +- *(3) ColumnarToRow
         :     :                                                              :                                   +- FileScan parquet [d_date_sk#612,d_year#618,d_moy#620] Batched: true, DataFilters: [(((d_year#618 = 1999) OR ((d_year#618 = 1998) AND (d_moy#620 = 12))) OR ((d_year#618 = 2000) AND..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,1999),And(EqualTo(d_year,1998),EqualTo(d_moy,12))),And(EqualTo(d_year,2000)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
         :     :                                                              +- *(32) Sort [cc_call_center_sk#0 ASC NULLS FIRST], false, 0
         :     :                                                                 +- AQEShuffleRead coalesced
         :     :                                                                    +- ShuffleQueryStage 3
         :     :                                                                       +- Exchange hashpartitioning(cc_call_center_sk#0, 200), ENSURE_REQUIREMENTS, [id=#163865]
         :     :                                                                          +- *(4) Filter (isnotnull(cc_call_center_sk#0) AND isnotnull(cc_name#6))
         :     :                                                                             +- *(4) ColumnarToRow
         :     :                                                                                +- FileScan parquet [cc_call_center_sk#0,cc_name#6] Batched: true, DataFilters: [isnotnull(cc_call_center_sk#0), isnotnull(cc_name#6)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/call_center.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cc_call_center_sk), IsNotNull(cc_name)], ReadSchema: struct<cc_call_center_sk:int,cc_name:string>
         :     +- *(51) Sort [i_category#12952 ASC NULLS FIRST, i_brand#12948 ASC NULLS FIRST, cc_name#13030 ASC NULLS FIRST, (rn#13059 + 1) ASC NULLS FIRST], false, 0
         :        +- AQEShuffleRead coalesced
         :           +- ShuffleQueryStage 40
         :              +- Exchange hashpartitioning(i_category#12952, i_brand#12948, cc_name#13030, (rn#13059 + 1), 200), ENSURE_REQUIREMENTS, [id=#166990]
         :                 +- *(47) Project [i_category#12952, i_brand#12948, cc_name#13030, sum_sales#12899 AS sum_sales#12919, rn#13059]
         :                    +- Window [rank(d_year#13002, d_moy#13004) windowspecdefinition(i_category#12952, i_brand#12948, cc_name#13030, d_year#13002 ASC NULLS FIRST, d_moy#13004 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#13059], [i_category#12952, i_brand#12948, cc_name#13030], [d_year#13002 ASC NULLS FIRST, d_moy#13004 ASC NULLS FIRST]
         :                       +- *(46) Sort [i_category#12952 ASC NULLS FIRST, i_brand#12948 ASC NULLS FIRST, cc_name#13030 ASC NULLS FIRST, d_year#13002 ASC NULLS FIRST, d_moy#13004 ASC NULLS FIRST], false, 0
         :                          +- AQEShuffleRead coalesced
         :                             +- ShuffleQueryStage 36
         :                                +- Exchange hashpartitioning(i_category#12952, i_brand#12948, cc_name#13030, 200), ENSURE_REQUIREMENTS, [id=#166712]
         :                                   +- *(41) HashAggregate(keys=[i_category#12952, i_brand#12948, cc_name#13030, d_year#13002, d_moy#13004], functions=[sum(UnscaledValue(cs_sales_price#12983))], output=[i_category#12952, i_brand#12948, cc_name#13030, d_year#13002, d_moy#13004, sum_sales#12899])
         :                                      +- AQEShuffleRead coalesced
         :                                         +- ShuffleQueryStage 32
         :                                            +- ReusedExchange [i_category#12952, i_brand#12948, cc_name#13030, d_year#13002, d_moy#13004, sum#13183L], Exchange hashpartitioning(i_category#680, i_brand#676, cc_name#6, d_year#618, d_moy#620, 200), ENSURE_REQUIREMENTS, [id=#166383]
         +- *(53) Sort [i_category#13072 ASC NULLS FIRST, i_brand#13068 ASC NULLS FIRST, cc_name#13150 ASC NULLS FIRST, (rn#13179 - 1) ASC NULLS FIRST], false, 0
            +- AQEShuffleRead coalesced
               +- ShuffleQueryStage 41
                  +- Exchange hashpartitioning(i_category#13072, i_brand#13068, cc_name#13150, (rn#13179 - 1), 200), ENSURE_REQUIREMENTS, [id=#167020]
                     +- *(49) Project [i_category#13072, i_brand#13068, cc_name#13150, sum_sales#12899 AS sum_sales#12927, rn#13179]
                        +- Window [rank(d_year#13122, d_moy#13124) windowspecdefinition(i_category#13072, i_brand#13068, cc_name#13150, d_year#13122 ASC NULLS FIRST, d_moy#13124 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#13179], [i_category#13072, i_brand#13068, cc_name#13150], [d_year#13122 ASC NULLS FIRST, d_moy#13124 ASC NULLS FIRST]
                           +- *(48) Sort [i_category#13072 ASC NULLS FIRST, i_brand#13068 ASC NULLS FIRST, cc_name#13150 ASC NULLS FIRST, d_year#13122 ASC NULLS FIRST, d_moy#13124 ASC NULLS FIRST], false, 0
                              +- AQEShuffleRead coalesced
                                 +- ShuffleQueryStage 38
                                    +- ReusedExchange [i_category#13072, i_brand#13068, cc_name#13150, d_year#13122, d_moy#13124, sum_sales#12899], Exchange hashpartitioning(i_category#12952, i_brand#12948, cc_name#13030, 200), ENSURE_REQUIREMENTS, [id=#166712]
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#12899 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#12900 as decimal(22,6)))), DecimalType(22,6), true) ASC NULLS FIRST,psum#12902 ASC NULLS FIRST], output=[cc_name#6,d_year#618,avg_monthly_sales#12900,sum_sales#12899,psum#12902,nsum#12903])
   +- Project [cc_name#6, d_year#618, avg_monthly_sales#12900, sum_sales#12899, sum_sales#12919 AS psum#12902, sum_sales#12927 AS nsum#12903]
      +- SortMergeJoin [i_category#680, i_brand#676, cc_name#6, rn#12901], [i_category#13072, i_brand#13068, cc_name#13150, (rn#13179 - 1)], Inner
         :- Project [i_category#680, i_brand#676, cc_name#6, d_year#618, sum_sales#12899, avg_monthly_sales#12900, rn#12901, sum_sales#12919]
         :  +- SortMergeJoin [i_category#680, i_brand#676, cc_name#6, rn#12901], [i_category#12952, i_brand#12948, cc_name#13030, (rn#13059 + 1)], Inner
         :     :- Sort [i_category#680 ASC NULLS FIRST, i_brand#676 ASC NULLS FIRST, cc_name#6 ASC NULLS FIRST, rn#12901 ASC NULLS FIRST], false, 0
         :     :  +- Exchange hashpartitioning(i_category#680, i_brand#676, cc_name#6, rn#12901, 200), ENSURE_REQUIREMENTS, [id=#163682]
         :     :     +- Project [i_category#680, i_brand#676, cc_name#6, d_year#618, sum_sales#12899, avg_monthly_sales#12900, rn#12901]
         :     :        +- Filter ((isnotnull(avg_monthly_sales#12900) AND (avg_monthly_sales#12900 > 0.000000)) AND (CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#12899 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#12900 as decimal(22,6)))), DecimalType(22,6), true), false)) / promote_precision(cast(avg_monthly_sales#12900 as decimal(22,6)))), DecimalType(38,16), true) > 0.1000000000000000))
         :     :           +- Window [avg(_w0#12913) windowspecdefinition(i_category#680, i_brand#676, cc_name#6, d_year#618, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#12900], [i_category#680, i_brand#676, cc_name#6, d_year#618]
         :     :              +- Project [i_category#680, i_brand#676, cc_name#6, d_year#618, sum_sales#12899, _w0#12913, rn#12901]
         :     :                 +- Filter (isnotnull(d_year#618) AND (d_year#618 = 1999))
         :     :                    +- Window [rank(d_year#618, d_moy#620) windowspecdefinition(i_category#680, i_brand#676, cc_name#6, d_year#618 ASC NULLS FIRST, d_moy#620 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#12901], [i_category#680, i_brand#676, cc_name#6], [d_year#618 ASC NULLS FIRST, d_moy#620 ASC NULLS FIRST]
         :     :                       +- Sort [i_category#680 ASC NULLS FIRST, i_brand#676 ASC NULLS FIRST, cc_name#6 ASC NULLS FIRST, d_year#618 ASC NULLS FIRST, d_moy#620 ASC NULLS FIRST], false, 0
         :     :                          +- Exchange hashpartitioning(i_category#680, i_brand#676, cc_name#6, 200), ENSURE_REQUIREMENTS, [id=#163640]
         :     :                             +- HashAggregate(keys=[i_category#680, i_brand#676, cc_name#6, d_year#618, d_moy#620], functions=[sum(UnscaledValue(cs_sales_price#565))], output=[i_category#680, i_brand#676, cc_name#6, d_year#618, d_moy#620, sum_sales#12899, _w0#12913])
         :     :                                +- Exchange hashpartitioning(i_category#680, i_brand#676, cc_name#6, d_year#618, d_moy#620, 200), ENSURE_REQUIREMENTS, [id=#163637]
         :     :                                   +- HashAggregate(keys=[i_category#680, i_brand#676, cc_name#6, d_year#618, d_moy#620], functions=[partial_sum(UnscaledValue(cs_sales_price#565))], output=[i_category#680, i_brand#676, cc_name#6, d_year#618, d_moy#620, sum#13181L])
         :     :                                      +- Project [i_brand#676, i_category#680, cs_sales_price#565, d_year#618, d_moy#620, cc_name#6]
         :     :                                         +- SortMergeJoin [cs_call_center_sk#555], [cc_call_center_sk#0], Inner
         :     :                                            :- Sort [cs_call_center_sk#555 ASC NULLS FIRST], false, 0
         :     :                                            :  +- Exchange hashpartitioning(cs_call_center_sk#555, 200), ENSURE_REQUIREMENTS, [id=#163629]
         :     :                                            :     +- Project [i_brand#676, i_category#680, cs_call_center_sk#555, cs_sales_price#565, d_year#618, d_moy#620]
         :     :                                            :        +- SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#612], Inner
         :     :                                            :           :- Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
         :     :                                            :           :  +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#163621]
         :     :                                            :           :     +- Project [i_brand#676, i_category#680, cs_sold_date_sk#544, cs_call_center_sk#555, cs_sales_price#565]
         :     :                                            :           :        +- SortMergeJoin [i_item_sk#668], [cs_item_sk#559], Inner
         :     :                                            :           :           :- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
         :     :                                            :           :           :  +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#163613]
         :     :                                            :           :           :     +- Filter ((isnotnull(i_item_sk#668) AND isnotnull(i_category#680)) AND isnotnull(i_brand#676))
         :     :                                            :           :           :        +- FileScan parquet [i_item_sk#668,i_brand#676,i_category#680] Batched: true, DataFilters: [isnotnull(i_item_sk#668), isnotnull(i_category#680), isnotnull(i_brand#676)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
         :     :                                            :           :           +- Sort [cs_item_sk#559 ASC NULLS FIRST], false, 0
         :     :                                            :           :              +- Exchange hashpartitioning(cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#163614]
         :     :                                            :           :                 +- Filter ((isnotnull(cs_item_sk#559) AND isnotnull(cs_sold_date_sk#544)) AND isnotnull(cs_call_center_sk#555))
         :     :                                            :           :                    +- FileScan parquet [cs_sold_date_sk#544,cs_call_center_sk#555,cs_item_sk#559,cs_sales_price#565] Batched: true, DataFilters: [isnotnull(cs_item_sk#559), isnotnull(cs_sold_date_sk#544), isnotnull(cs_call_center_sk#555)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_call_center_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_call_center_sk:int,cs_item_sk:int,cs_sales_price:decimal(7,2)>
         :     :                                            :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
         :     :                                            :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#163622]
         :     :                                            :                 +- Filter ((((d_year#618 = 1999) OR ((d_year#618 = 1998) AND (d_moy#620 = 12))) OR ((d_year#618 = 2000) AND (d_moy#620 = 1))) AND isnotnull(d_date_sk#612))
         :     :                                            :                    +- FileScan parquet [d_date_sk#612,d_year#618,d_moy#620] Batched: true, DataFilters: [(((d_year#618 = 1999) OR ((d_year#618 = 1998) AND (d_moy#620 = 12))) OR ((d_year#618 = 2000) AND..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,1999),And(EqualTo(d_year,1998),EqualTo(d_moy,12))),And(EqualTo(d_year,2000)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
         :     :                                            +- Sort [cc_call_center_sk#0 ASC NULLS FIRST], false, 0
         :     :                                               +- Exchange hashpartitioning(cc_call_center_sk#0, 200), ENSURE_REQUIREMENTS, [id=#163630]
         :     :                                                  +- Filter (isnotnull(cc_call_center_sk#0) AND isnotnull(cc_name#6))
         :     :                                                     +- FileScan parquet [cc_call_center_sk#0,cc_name#6] Batched: true, DataFilters: [isnotnull(cc_call_center_sk#0), isnotnull(cc_name#6)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/call_center.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cc_call_center_sk), IsNotNull(cc_name)], ReadSchema: struct<cc_call_center_sk:int,cc_name:string>
         :     +- Sort [i_category#12952 ASC NULLS FIRST, i_brand#12948 ASC NULLS FIRST, cc_name#13030 ASC NULLS FIRST, (rn#13059 + 1) ASC NULLS FIRST], false, 0
         :        +- Exchange hashpartitioning(i_category#12952, i_brand#12948, cc_name#13030, (rn#13059 + 1), 200), ENSURE_REQUIREMENTS, [id=#163683]
         :           +- Project [i_category#12952, i_brand#12948, cc_name#13030, sum_sales#12899 AS sum_sales#12919, rn#13059]
         :              +- Window [rank(d_year#13002, d_moy#13004) windowspecdefinition(i_category#12952, i_brand#12948, cc_name#13030, d_year#13002 ASC NULLS FIRST, d_moy#13004 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#13059], [i_category#12952, i_brand#12948, cc_name#13030], [d_year#13002 ASC NULLS FIRST, d_moy#13004 ASC NULLS FIRST]
         :                 +- Sort [i_category#12952 ASC NULLS FIRST, i_brand#12948 ASC NULLS FIRST, cc_name#13030 ASC NULLS FIRST, d_year#13002 ASC NULLS FIRST, d_moy#13004 ASC NULLS FIRST], false, 0
         :                    +- Exchange hashpartitioning(i_category#12952, i_brand#12948, cc_name#13030, 200), ENSURE_REQUIREMENTS, [id=#163676]
         :                       +- HashAggregate(keys=[i_category#12952, i_brand#12948, cc_name#13030, d_year#13002, d_moy#13004], functions=[sum(UnscaledValue(cs_sales_price#12983))], output=[i_category#12952, i_brand#12948, cc_name#13030, d_year#13002, d_moy#13004, sum_sales#12899])
         :                          +- Exchange hashpartitioning(i_category#12952, i_brand#12948, cc_name#13030, d_year#13002, d_moy#13004, 200), ENSURE_REQUIREMENTS, [id=#163673]
         :                             +- HashAggregate(keys=[i_category#12952, i_brand#12948, cc_name#13030, d_year#13002, d_moy#13004], functions=[partial_sum(UnscaledValue(cs_sales_price#12983))], output=[i_category#12952, i_brand#12948, cc_name#13030, d_year#13002, d_moy#13004, sum#13183L])
         :                                +- Project [i_brand#12948, i_category#12952, cs_sales_price#12983, d_year#13002, d_moy#13004, cc_name#13030]
         :                                   +- SortMergeJoin [cs_call_center_sk#12973], [cc_call_center_sk#13024], Inner
         :                                      :- Sort [cs_call_center_sk#12973 ASC NULLS FIRST], false, 0
         :                                      :  +- Exchange hashpartitioning(cs_call_center_sk#12973, 200), ENSURE_REQUIREMENTS, [id=#163665]
         :                                      :     +- Project [i_brand#12948, i_category#12952, cs_call_center_sk#12973, cs_sales_price#12983, d_year#13002, d_moy#13004]
         :                                      :        +- SortMergeJoin [cs_sold_date_sk#12962], [d_date_sk#12996], Inner
         :                                      :           :- Sort [cs_sold_date_sk#12962 ASC NULLS FIRST], false, 0
         :                                      :           :  +- Exchange hashpartitioning(cs_sold_date_sk#12962, 200), ENSURE_REQUIREMENTS, [id=#163657]
         :                                      :           :     +- Project [i_brand#12948, i_category#12952, cs_sold_date_sk#12962, cs_call_center_sk#12973, cs_sales_price#12983]
         :                                      :           :        +- SortMergeJoin [i_item_sk#12940], [cs_item_sk#12977], Inner
         :                                      :           :           :- Sort [i_item_sk#12940 ASC NULLS FIRST], false, 0
         :                                      :           :           :  +- Exchange hashpartitioning(i_item_sk#12940, 200), ENSURE_REQUIREMENTS, [id=#163649]
         :                                      :           :           :     +- Filter ((isnotnull(i_item_sk#12940) AND isnotnull(i_category#12952)) AND isnotnull(i_brand#12948))
         :                                      :           :           :        +- FileScan parquet [i_item_sk#12940,i_brand#12948,i_category#12952] Batched: true, DataFilters: [isnotnull(i_item_sk#12940), isnotnull(i_category#12952), isnotnull(i_brand#12948)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
         :                                      :           :           +- Sort [cs_item_sk#12977 ASC NULLS FIRST], false, 0
         :                                      :           :              +- Exchange hashpartitioning(cs_item_sk#12977, 200), ENSURE_REQUIREMENTS, [id=#163650]
         :                                      :           :                 +- Filter ((isnotnull(cs_item_sk#12977) AND isnotnull(cs_sold_date_sk#12962)) AND isnotnull(cs_call_center_sk#12973))
         :                                      :           :                    +- FileScan parquet [cs_sold_date_sk#12962,cs_call_center_sk#12973,cs_item_sk#12977,cs_sales_price#12983] Batched: true, DataFilters: [isnotnull(cs_item_sk#12977), isnotnull(cs_sold_date_sk#12962), isnotnull(cs_call_center_sk#12973)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_call_center_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_call_center_sk:int,cs_item_sk:int,cs_sales_price:decimal(7,2)>
         :                                      :           +- Sort [d_date_sk#12996 ASC NULLS FIRST], false, 0
         :                                      :              +- Exchange hashpartitioning(d_date_sk#12996, 200), ENSURE_REQUIREMENTS, [id=#163658]
         :                                      :                 +- Filter ((((d_year#13002 = 1999) OR ((d_year#13002 = 1998) AND (d_moy#13004 = 12))) OR ((d_year#13002 = 2000) AND (d_moy#13004 = 1))) AND isnotnull(d_date_sk#12996))
         :                                      :                    +- FileScan parquet [d_date_sk#12996,d_year#13002,d_moy#13004] Batched: true, DataFilters: [(((d_year#13002 = 1999) OR ((d_year#13002 = 1998) AND (d_moy#13004 = 12))) OR ((d_year#13002 = 2..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,1999),And(EqualTo(d_year,1998),EqualTo(d_moy,12))),And(EqualTo(d_year,2000)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
         :                                      +- Sort [cc_call_center_sk#13024 ASC NULLS FIRST], false, 0
         :                                         +- Exchange hashpartitioning(cc_call_center_sk#13024, 200), ENSURE_REQUIREMENTS, [id=#163666]
         :                                            +- Filter (isnotnull(cc_call_center_sk#13024) AND isnotnull(cc_name#13030))
         :                                               +- FileScan parquet [cc_call_center_sk#13024,cc_name#13030] Batched: true, DataFilters: [isnotnull(cc_call_center_sk#13024), isnotnull(cc_name#13030)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/call_center.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cc_call_center_sk), IsNotNull(cc_name)], ReadSchema: struct<cc_call_center_sk:int,cc_name:string>
         +- Sort [i_category#13072 ASC NULLS FIRST, i_brand#13068 ASC NULLS FIRST, cc_name#13150 ASC NULLS FIRST, (rn#13179 - 1) ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(i_category#13072, i_brand#13068, cc_name#13150, (rn#13179 - 1), 200), ENSURE_REQUIREMENTS, [id=#163722]
               +- Project [i_category#13072, i_brand#13068, cc_name#13150, sum_sales#12899 AS sum_sales#12927, rn#13179]
                  +- Window [rank(d_year#13122, d_moy#13124) windowspecdefinition(i_category#13072, i_brand#13068, cc_name#13150, d_year#13122 ASC NULLS FIRST, d_moy#13124 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#13179], [i_category#13072, i_brand#13068, cc_name#13150], [d_year#13122 ASC NULLS FIRST, d_moy#13124 ASC NULLS FIRST]
                     +- Sort [i_category#13072 ASC NULLS FIRST, i_brand#13068 ASC NULLS FIRST, cc_name#13150 ASC NULLS FIRST, d_year#13122 ASC NULLS FIRST, d_moy#13124 ASC NULLS FIRST], false, 0
                        +- Exchange hashpartitioning(i_category#13072, i_brand#13068, cc_name#13150, 200), ENSURE_REQUIREMENTS, [id=#163716]
                           +- HashAggregate(keys=[i_category#13072, i_brand#13068, cc_name#13150, d_year#13122, d_moy#13124], functions=[sum(UnscaledValue(cs_sales_price#13103))], output=[i_category#13072, i_brand#13068, cc_name#13150, d_year#13122, d_moy#13124, sum_sales#12899])
                              +- Exchange hashpartitioning(i_category#13072, i_brand#13068, cc_name#13150, d_year#13122, d_moy#13124, 200), ENSURE_REQUIREMENTS, [id=#163713]
                                 +- HashAggregate(keys=[i_category#13072, i_brand#13068, cc_name#13150, d_year#13122, d_moy#13124], functions=[partial_sum(UnscaledValue(cs_sales_price#13103))], output=[i_category#13072, i_brand#13068, cc_name#13150, d_year#13122, d_moy#13124, sum#13185L])
                                    +- Project [i_brand#13068, i_category#13072, cs_sales_price#13103, d_year#13122, d_moy#13124, cc_name#13150]
                                       +- SortMergeJoin [cs_call_center_sk#13093], [cc_call_center_sk#13144], Inner
                                          :- Sort [cs_call_center_sk#13093 ASC NULLS FIRST], false, 0
                                          :  +- Exchange hashpartitioning(cs_call_center_sk#13093, 200), ENSURE_REQUIREMENTS, [id=#163705]
                                          :     +- Project [i_brand#13068, i_category#13072, cs_call_center_sk#13093, cs_sales_price#13103, d_year#13122, d_moy#13124]
                                          :        +- SortMergeJoin [cs_sold_date_sk#13082], [d_date_sk#13116], Inner
                                          :           :- Sort [cs_sold_date_sk#13082 ASC NULLS FIRST], false, 0
                                          :           :  +- Exchange hashpartitioning(cs_sold_date_sk#13082, 200), ENSURE_REQUIREMENTS, [id=#163697]
                                          :           :     +- Project [i_brand#13068, i_category#13072, cs_sold_date_sk#13082, cs_call_center_sk#13093, cs_sales_price#13103]
                                          :           :        +- SortMergeJoin [i_item_sk#13060], [cs_item_sk#13097], Inner
                                          :           :           :- Sort [i_item_sk#13060 ASC NULLS FIRST], false, 0
                                          :           :           :  +- Exchange hashpartitioning(i_item_sk#13060, 200), ENSURE_REQUIREMENTS, [id=#163689]
                                          :           :           :     +- Filter ((isnotnull(i_item_sk#13060) AND isnotnull(i_category#13072)) AND isnotnull(i_brand#13068))
                                          :           :           :        +- FileScan parquet [i_item_sk#13060,i_brand#13068,i_category#13072] Batched: true, DataFilters: [isnotnull(i_item_sk#13060), isnotnull(i_category#13072), isnotnull(i_brand#13068)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
                                          :           :           +- Sort [cs_item_sk#13097 ASC NULLS FIRST], false, 0
                                          :           :              +- Exchange hashpartitioning(cs_item_sk#13097, 200), ENSURE_REQUIREMENTS, [id=#163690]
                                          :           :                 +- Filter ((isnotnull(cs_item_sk#13097) AND isnotnull(cs_sold_date_sk#13082)) AND isnotnull(cs_call_center_sk#13093))
                                          :           :                    +- FileScan parquet [cs_sold_date_sk#13082,cs_call_center_sk#13093,cs_item_sk#13097,cs_sales_price#13103] Batched: true, DataFilters: [isnotnull(cs_item_sk#13097), isnotnull(cs_sold_date_sk#13082), isnotnull(cs_call_center_sk#13093)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_call_center_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_call_center_sk:int,cs_item_sk:int,cs_sales_price:decimal(7,2)>
                                          :           +- Sort [d_date_sk#13116 ASC NULLS FIRST], false, 0
                                          :              +- Exchange hashpartitioning(d_date_sk#13116, 200), ENSURE_REQUIREMENTS, [id=#163698]
                                          :                 +- Filter ((((d_year#13122 = 1999) OR ((d_year#13122 = 1998) AND (d_moy#13124 = 12))) OR ((d_year#13122 = 2000) AND (d_moy#13124 = 1))) AND isnotnull(d_date_sk#13116))
                                          :                    +- FileScan parquet [d_date_sk#13116,d_year#13122,d_moy#13124] Batched: true, DataFilters: [(((d_year#13122 = 1999) OR ((d_year#13122 = 1998) AND (d_moy#13124 = 12))) OR ((d_year#13122 = 2..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,1999),And(EqualTo(d_year,1998),EqualTo(d_moy,12))),And(EqualTo(d_year,2000)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                                          +- Sort [cc_call_center_sk#13144 ASC NULLS FIRST], false, 0
                                             +- Exchange hashpartitioning(cc_call_center_sk#13144, 200), ENSURE_REQUIREMENTS, [id=#163706]
                                                +- Filter (isnotnull(cc_call_center_sk#13144) AND isnotnull(cc_name#13150))
                                                   +- FileScan parquet [cc_call_center_sk#13144,cc_name#13150] Batched: true, DataFilters: [isnotnull(cc_call_center_sk#13144), isnotnull(cc_name#13150)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/call_center.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cc_call_center_sk), IsNotNull(cc_name)], ReadSchema: struct<cc_call_center_sk:int,cc_name:string>
