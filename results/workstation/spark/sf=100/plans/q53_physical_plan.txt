AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[avg_quarterly_sales#10259 ASC NULLS FIRST,sum_sales#10258 ASC NULLS FIRST,i_manufact_id#681 ASC NULLS FIRST], output=[i_manufact_id#681,sum_sales#10258,avg_quarterly_sales#10259])
   +- *(16) Project [i_manufact_id#681, sum_sales#10258, avg_quarterly_sales#10259]
      +- *(16) Filter (isnotnull(avg_quarterly_sales#10259) AND ((avg_quarterly_sales#10259 > 0.000000) AND (CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#10258 as decimal(22,6))) - promote_precision(cast(avg_quarterly_sales#10259 as decimal(22,6)))), DecimalType(22,6), true), false)) / promote_precision(cast(avg_quarterly_sales#10259 as decimal(22,6)))), DecimalType(38,16), true) > 0.1000000000000000)))
         +- Window [avg(_w0#10263) windowspecdefinition(i_manufact_id#681, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_quarterly_sales#10259], [i_manufact_id#681]
            +- *(15) Sort [i_manufact_id#681 ASC NULLS FIRST], false, 0
               +- AQEShuffleRead coalesced
                  +- ShuffleQueryStage 7
                     +- Exchange hashpartitioning(i_manufact_id#681, 200), ENSURE_REQUIREMENTS, [id=#84717]
                        +- *(14) HashAggregate(keys=[i_manufact_id#681, d_qoy#622], functions=[sum(UnscaledValue(ss_sales_price#265))], output=[i_manufact_id#681, sum_sales#10258, _w0#10263])
                           +- AQEShuffleRead coalesced
                              +- ShuffleQueryStage 6
                                 +- Exchange hashpartitioning(i_manufact_id#681, d_qoy#622, 200), ENSURE_REQUIREMENTS, [id=#84659]
                                    +- *(13) HashAggregate(keys=[i_manufact_id#681, d_qoy#622], functions=[partial_sum(UnscaledValue(ss_sales_price#265))], output=[i_manufact_id#681, d_qoy#622, sum#10268L])
                                       +- *(13) Project [i_manufact_id#681, ss_sales_price#265, d_qoy#622]
                                          +- *(13) SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
                                             :- *(11) Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
                                             :  +- AQEShuffleRead coalesced
                                             :     +- ShuffleQueryStage 5
                                             :        +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#84551]
                                             :           +- *(10) Project [i_manufact_id#681, ss_store_sk#259, ss_sales_price#265, d_qoy#622]
                                             :              +- *(10) SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
                                             :                 :- *(8) Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                                             :                 :  +- AQEShuffleRead coalesced
                                             :                 :     +- ShuffleQueryStage 4
                                             :                 :        +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#84418]
                                             :                 :           +- *(7) Project [i_manufact_id#681, ss_sold_date_sk#252, ss_store_sk#259, ss_sales_price#265]
                                             :                 :              +- *(7) SortMergeJoin [i_item_sk#668], [ss_item_sk#254], Inner
                                             :                 :                 :- *(5) Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                                             :                 :                 :  +- AQEShuffleRead coalesced
                                             :                 :                 :     +- ShuffleQueryStage 0
                                             :                 :                 :        +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#83994]
                                             :                 :                 :           +- *(1) Project [i_item_sk#668, i_manufact_id#681]
                                             :                 :                 :              +- *(1) Filter ((((i_category#680 IN (Books,Children,Electronics) AND i_class#678 IN (personal,portable,reference,self-help)) AND i_brand#676 IN (scholaramalgamalg #14,scholaramalgamalg #7,exportiunivamalg #9,scholaramalgamalg #9)) OR ((i_category#680 IN (Women,Music,Men) AND i_class#678 IN (accessories,classical,fragrances,pants)) AND i_brand#676 IN (amalgimporto #1,edu packscholar #1,exportiimporto #1,importoamalg #1))) AND isnotnull(i_item_sk#668))
                                             :                 :                 :                 +- *(1) ColumnarToRow
                                             :                 :                 :                    +- FileScan parquet [i_item_sk#668,i_brand#676,i_class#678,i_category#680,i_manufact_id#681] Batched: true, DataFilters: [(((i_category#680 IN (Books,Children,Electronics) AND i_class#678 IN (personal,portable,referenc..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [Or(And(And(In(i_category, [Books,Children,Electronics]),In(i_class, [personal,portable,reference..., ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_manufact_id:int>
                                             :                 :                 +- *(6) Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                                             :                 :                    +- AQEShuffleRead coalesced
                                             :                 :                       +- ShuffleQueryStage 1
                                             :                 :                          +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#84013]
                                             :                 :                             +- *(2) Filter ((isnotnull(ss_item_sk#254) AND isnotnull(ss_sold_date_sk#252)) AND isnotnull(ss_store_sk#259))
                                             :                 :                                +- *(2) ColumnarToRow
                                             :                 :                                   +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_store_sk#259,ss_sales_price#265] Batched: true, DataFilters: [isnotnull(ss_item_sk#254), isnotnull(ss_sold_date_sk#252), isnotnull(ss_store_sk#259)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
                                             :                 +- *(9) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                                             :                    +- AQEShuffleRead coalesced
                                             :                       +- ShuffleQueryStage 2
                                             :                          +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#84036]
                                             :                             +- *(3) Project [d_date_sk#612, d_qoy#622]
                                             :                                +- *(3) Filter (d_month_seq#615 INSET 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223 AND isnotnull(d_date_sk#612))
                                             :                                   +- *(3) ColumnarToRow
                                             :                                      +- FileScan parquet [d_date_sk#612,d_month_seq#615,d_qoy#622] Batched: true, DataFilters: [d_month_seq#615 INSET 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_month_seq, [1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223]), IsNotNull(d_date..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_qoy:int>
                                             +- *(12) Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
                                                +- AQEShuffleRead coalesced
                                                   +- ShuffleQueryStage 3
                                                      +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#84059]
                                                         +- *(4) Filter isnotnull(s_store_sk#712)
                                                            +- *(4) ColumnarToRow
                                                               +- FileScan parquet [s_store_sk#712] Batched: true, DataFilters: [isnotnull(s_store_sk#712)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int>
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[avg_quarterly_sales#10259 ASC NULLS FIRST,sum_sales#10258 ASC NULLS FIRST,i_manufact_id#681 ASC NULLS FIRST], output=[i_manufact_id#681,sum_sales#10258,avg_quarterly_sales#10259])
   +- Project [i_manufact_id#681, sum_sales#10258, avg_quarterly_sales#10259]
      +- Filter (isnotnull(avg_quarterly_sales#10259) AND ((avg_quarterly_sales#10259 > 0.000000) AND (CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#10258 as decimal(22,6))) - promote_precision(cast(avg_quarterly_sales#10259 as decimal(22,6)))), DecimalType(22,6), true), false)) / promote_precision(cast(avg_quarterly_sales#10259 as decimal(22,6)))), DecimalType(38,16), true) > 0.1000000000000000)))
         +- Window [avg(_w0#10263) windowspecdefinition(i_manufact_id#681, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_quarterly_sales#10259], [i_manufact_id#681]
            +- Sort [i_manufact_id#681 ASC NULLS FIRST], false, 0
               +- Exchange hashpartitioning(i_manufact_id#681, 200), ENSURE_REQUIREMENTS, [id=#83919]
                  +- HashAggregate(keys=[i_manufact_id#681, d_qoy#622], functions=[sum(UnscaledValue(ss_sales_price#265))], output=[i_manufact_id#681, sum_sales#10258, _w0#10263])
                     +- Exchange hashpartitioning(i_manufact_id#681, d_qoy#622, 200), ENSURE_REQUIREMENTS, [id=#83916]
                        +- HashAggregate(keys=[i_manufact_id#681, d_qoy#622], functions=[partial_sum(UnscaledValue(ss_sales_price#265))], output=[i_manufact_id#681, d_qoy#622, sum#10268L])
                           +- Project [i_manufact_id#681, ss_sales_price#265, d_qoy#622]
                              +- SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
                                 :- Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
                                 :  +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#83908]
                                 :     +- Project [i_manufact_id#681, ss_store_sk#259, ss_sales_price#265, d_qoy#622]
                                 :        +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
                                 :           :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                                 :           :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#83900]
                                 :           :     +- Project [i_manufact_id#681, ss_sold_date_sk#252, ss_store_sk#259, ss_sales_price#265]
                                 :           :        +- SortMergeJoin [i_item_sk#668], [ss_item_sk#254], Inner
                                 :           :           :- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                                 :           :           :  +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#83892]
                                 :           :           :     +- Project [i_item_sk#668, i_manufact_id#681]
                                 :           :           :        +- Filter ((((i_category#680 IN (Books,Children,Electronics) AND i_class#678 IN (personal,portable,reference,self-help)) AND i_brand#676 IN (scholaramalgamalg #14,scholaramalgamalg #7,exportiunivamalg #9,scholaramalgamalg #9)) OR ((i_category#680 IN (Women,Music,Men) AND i_class#678 IN (accessories,classical,fragrances,pants)) AND i_brand#676 IN (amalgimporto #1,edu packscholar #1,exportiimporto #1,importoamalg #1))) AND isnotnull(i_item_sk#668))
                                 :           :           :           +- FileScan parquet [i_item_sk#668,i_brand#676,i_class#678,i_category#680,i_manufact_id#681] Batched: true, DataFilters: [(((i_category#680 IN (Books,Children,Electronics) AND i_class#678 IN (personal,portable,referenc..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [Or(And(And(In(i_category, [Books,Children,Electronics]),In(i_class, [personal,portable,reference..., ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_manufact_id:int>
                                 :           :           +- Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                                 :           :              +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#83893]
                                 :           :                 +- Filter ((isnotnull(ss_item_sk#254) AND isnotnull(ss_sold_date_sk#252)) AND isnotnull(ss_store_sk#259))
                                 :           :                    +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_store_sk#259,ss_sales_price#265] Batched: true, DataFilters: [isnotnull(ss_item_sk#254), isnotnull(ss_sold_date_sk#252), isnotnull(ss_store_sk#259)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
                                 :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                                 :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#83901]
                                 :                 +- Project [d_date_sk#612, d_qoy#622]
                                 :                    +- Filter (d_month_seq#615 INSET 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223 AND isnotnull(d_date_sk#612))
                                 :                       +- FileScan parquet [d_date_sk#612,d_month_seq#615,d_qoy#622] Batched: true, DataFilters: [d_month_seq#615 INSET 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [In(d_month_seq, [1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223]), IsNotNull(d_date..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_qoy:int>
                                 +- Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
                                    +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#83909]
                                       +- Filter isnotnull(s_store_sk#712)
                                          +- FileScan parquet [s_store_sk#712] Batched: true, DataFilters: [isnotnull(s_store_sk#712)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int>
