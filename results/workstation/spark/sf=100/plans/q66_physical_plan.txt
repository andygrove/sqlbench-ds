AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[w_warehouse_name#772 ASC NULLS FIRST], output=[w_warehouse_name#772,w_warehouse_sq_ft#773,w_city#778,w_county#779,w_state#780,w_country#782,ship_carriers#13075,year#13076,jan_sales#13127,feb_sales#13128,mar_sales#13129,apr_sales#13130,may_sales#13131,jun_sales#13132,jul_sales#13133,aug_sales#13134,sep_sales#13135,oct_sales#13136,nov_sales#13137,dec_sales#13138,jan_sales_per_sq_foot#13139,feb_sales_per_sq_foot#13140,mar_sales_per_sq_foot#13141,apr_sales_per_sq_foot#13142,... 20 more fields])
   +- *(38) HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#13075, year#13076], functions=[sum(jan_sales#13077), sum(feb_sales#13078), sum(mar_sales#13079), sum(apr_sales#13080), sum(may_sales#13081), sum(jun_sales#13082), sum(jul_sales#13083), sum(aug_sales#13084), sum(sep_sales#13085), sum(oct_sales#13086), sum(nov_sales#13087), sum(dec_sales#13088), sum(CheckOverflow((promote_precision(jan_sales#13077) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(feb_sales#13078) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(mar_sales#13079) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(apr_sales#13080) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(may_sales#13081) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jun_sales#13082) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jul_sales#13083) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(aug_sales#13084) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(sep_sales#13085) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(oct_sales#13086) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(nov_sales#13087) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(dec_sales#13088) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), ... 12 more fields], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#13075, year#13076, jan_sales#13127, feb_sales#13128, mar_sales#13129, apr_sales#13130, may_sales#13131, jun_sales#13132, jul_sales#13133, aug_sales#13134, sep_sales#13135, oct_sales#13136, nov_sales#13137, dec_sales#13138, jan_sales_per_sq_foot#13139, feb_sales_per_sq_foot#13140, mar_sales_per_sq_foot#13141, apr_sales_per_sq_foot#13142, ... 20 more fields])
      +- AQEShuffleRead coalesced
         +- ShuffleQueryStage 22
            +- Exchange hashpartitioning(w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#13075, year#13076, 200), ENSURE_REQUIREMENTS, [id=#138466]
               +- *(37) HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#13075, year#13076], functions=[partial_sum(jan_sales#13077), partial_sum(feb_sales#13078), partial_sum(mar_sales#13079), partial_sum(apr_sales#13080), partial_sum(may_sales#13081), partial_sum(jun_sales#13082), partial_sum(jul_sales#13083), partial_sum(aug_sales#13084), partial_sum(sep_sales#13085), partial_sum(oct_sales#13086), partial_sum(nov_sales#13087), partial_sum(dec_sales#13088), partial_sum(CheckOverflow((promote_precision(jan_sales#13077) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(feb_sales#13078) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(mar_sales#13079) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(apr_sales#13080) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(may_sales#13081) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jun_sales#13082) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jul_sales#13083) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(aug_sales#13084) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(sep_sales#13085) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(oct_sales#13086) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(nov_sales#13087) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(dec_sales#13088) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), ... 12 more fields], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#13075, year#13076, sum#13421, isEmpty#13422, sum#13423, isEmpty#13424, sum#13425, isEmpty#13426, sum#13427, isEmpty#13428, sum#13429, isEmpty#13430, sum#13431, isEmpty#13432, sum#13433, isEmpty#13434, sum#13435, isEmpty#13436, ... 56 more fields])
                  +- Union
                     :- *(35) HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618], functions=[sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#13075, year#13076, jan_sales#13077, feb_sales#13078, mar_sales#13079, apr_sales#13080, may_sales#13081, jun_sales#13082, jul_sales#13083, aug_sales#13084, sep_sales#13085, oct_sales#13086, nov_sales#13087, dec_sales#13088, jan_net#13089, feb_net#13090, mar_net#13091, apr_net#13092, ... 8 more fields])
                     :  +- AQEShuffleRead coalesced
                     :     +- ShuffleQueryStage 18
                     :        +- Exchange hashpartitioning(w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, 200), ENSURE_REQUIREMENTS, [id=#137956]
                     :           +- *(25) HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618], functions=[partial_sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, sum#13541, isEmpty#13542, sum#13543, isEmpty#13544, sum#13545, isEmpty#13546, sum#13547, isEmpty#13548, sum#13549, isEmpty#13550, sum#13551, isEmpty#13552, sum#13553, isEmpty#13554, sum#13555, isEmpty#13556, sum#13557, ... 31 more fields])
                     :              +- *(25) Project [ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, d_moy#620]
                     :                 +- *(25) SortMergeJoin [ws_ship_mode_sk#490], [sm_ship_mode_sk#444], Inner
                     :                    :- *(23) Sort [ws_ship_mode_sk#490 ASC NULLS FIRST], false, 0
                     :                    :  +- AQEShuffleRead coalesced
                     :                    :     +- ShuffleQueryStage 17
                     :                    :        +- Exchange hashpartitioning(ws_ship_mode_sk#490, 200), ENSURE_REQUIREMENTS, [id=#137794]
                     :                    :           +- *(22) Project [ws_ship_mode_sk#490, ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, d_moy#620]
                     :                    :              +- *(22) SortMergeJoin [ws_sold_time_sk#477], [t_time_sk#456], Inner
                     :                    :                 :- *(20) Sort [ws_sold_time_sk#477 ASC NULLS FIRST], false, 0
                     :                    :                 :  +- AQEShuffleRead coalesced
                     :                    :                 :     +- ShuffleQueryStage 16
                     :                    :                 :        +- Exchange hashpartitioning(ws_sold_time_sk#477, 200), ENSURE_REQUIREMENTS, [id=#137607]
                     :                    :                 :           +- *(19) Project [ws_sold_time_sk#477, ws_ship_mode_sk#490, ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, d_moy#620]
                     :                    :                 :              +- *(19) SortMergeJoin [ws_sold_date_sk#476], [d_date_sk#612], Inner
                     :                    :                 :                 :- *(17) Sort [ws_sold_date_sk#476 ASC NULLS FIRST], false, 0
                     :                    :                 :                 :  +- AQEShuffleRead coalesced
                     :                    :                 :                 :     +- ShuffleQueryStage 14
                     :                    :                 :                 :        +- Exchange hashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#137164]
                     :                    :                 :                 :           +- *(13) Project [ws_sold_date_sk#476, ws_sold_time_sk#477, ws_ship_mode_sk#490, ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782]
                     :                    :                 :                 :              +- *(13) SortMergeJoin [ws_warehouse_sk#491], [w_warehouse_sk#770], Inner
                     :                    :                 :                 :                 :- *(11) Sort [ws_warehouse_sk#491 ASC NULLS FIRST], false, 0
                     :                    :                 :                 :                 :  +- AQEShuffleRead coalesced
                     :                    :                 :                 :                 :     +- ShuffleQueryStage 0
                     :                    :                 :                 :                 :        +- Exchange hashpartitioning(ws_warehouse_sk#491, 200), ENSURE_REQUIREMENTS, [id=#136062]
                     :                    :                 :                 :                 :           +- *(1) Filter (((isnotnull(ws_warehouse_sk#491) AND isnotnull(ws_sold_date_sk#476)) AND isnotnull(ws_sold_time_sk#477)) AND isnotnull(ws_ship_mode_sk#490))
                     :                    :                 :                 :                 :              +- *(1) ColumnarToRow
                     :                    :                 :                 :                 :                 +- FileScan parquet [ws_sold_date_sk#476,ws_sold_time_sk#477,ws_ship_mode_sk#490,ws_warehouse_sk#491,ws_quantity#494,ws_sales_price#497,ws_net_paid_inc_tax#506] Batched: true, DataFilters: [isnotnull(ws_warehouse_sk#491), isnotnull(ws_sold_date_sk#476), isnotnull(ws_sold_time_sk#477), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_warehouse_sk), IsNotNull(ws_sold_date_sk), IsNotNull(ws_sold_time_sk), IsNotNull(ws..., ReadSchema: struct<ws_sold_date_sk:int,ws_sold_time_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_quantit...
                     :                    :                 :                 :                 +- *(12) Sort [w_warehouse_sk#770 ASC NULLS FIRST], false, 0
                     :                    :                 :                 :                    +- AQEShuffleRead coalesced
                     :                    :                 :                 :                       +- ShuffleQueryStage 1
                     :                    :                 :                 :                          +- Exchange hashpartitioning(w_warehouse_sk#770, 200), ENSURE_REQUIREMENTS, [id=#136079]
                     :                    :                 :                 :                             +- *(2) Filter isnotnull(w_warehouse_sk#770)
                     :                    :                 :                 :                                +- *(2) ColumnarToRow
                     :                    :                 :                 :                                   +- FileScan parquet [w_warehouse_sk#770,w_warehouse_name#772,w_warehouse_sq_ft#773,w_city#778,w_county#779,w_state#780,w_country#782] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#770)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/warehouse.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county:st...
                     :                    :                 :                 +- *(18) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                     :                    :                 :                    +- AQEShuffleRead coalesced
                     :                    :                 :                       +- ShuffleQueryStage 2
                     :                    :                 :                          +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#136100]
                     :                    :                 :                             +- *(3) Filter ((isnotnull(d_year#618) AND (d_year#618 = 2002)) AND isnotnull(d_date_sk#612))
                     :                    :                 :                                +- *(3) ColumnarToRow
                     :                    :                 :                                   +- FileScan parquet [d_date_sk#612,d_year#618,d_moy#620] Batched: true, DataFilters: [isnotnull(d_year#618), (d_year#618 = 2002), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                     :                    :                 +- *(21) Sort [t_time_sk#456 ASC NULLS FIRST], false, 0
                     :                    :                    +- AQEShuffleRead coalesced
                     :                    :                       +- ShuffleQueryStage 3
                     :                    :                          +- Exchange hashpartitioning(t_time_sk#456, 200), ENSURE_REQUIREMENTS, [id=#136123]
                     :                    :                             +- *(4) Project [t_time_sk#456]
                     :                    :                                +- *(4) Filter (((isnotnull(t_time#458) AND (t_time#458 >= 49530)) AND (t_time#458 <= 78330)) AND isnotnull(t_time_sk#456))
                     :                    :                                   +- *(4) ColumnarToRow
                     :                    :                                      +- FileScan parquet [t_time_sk#456,t_time#458] Batched: true, DataFilters: [isnotnull(t_time#458), (t_time#458 >= 49530), (t_time#458 <= 78330), isnotnull(t_time_sk#456)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/time_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(t_time), GreaterThanOrEqual(t_time,49530), LessThanOrEqual(t_time,78330), IsNotNull(t_..., ReadSchema: struct<t_time_sk:int,t_time:int>
                     :                    +- *(24) Sort [sm_ship_mode_sk#444 ASC NULLS FIRST], false, 0
                     :                       +- AQEShuffleRead coalesced
                     :                          +- ShuffleQueryStage 4
                     :                             +- Exchange hashpartitioning(sm_ship_mode_sk#444, 200), ENSURE_REQUIREMENTS, [id=#136148]
                     :                                +- *(5) Project [sm_ship_mode_sk#444]
                     :                                   +- *(5) Filter (sm_carrier#448 IN (DIAMOND,AIRBORNE) AND isnotnull(sm_ship_mode_sk#444))
                     :                                      +- *(5) ColumnarToRow
                     :                                         +- FileScan parquet [sm_ship_mode_sk#444,sm_carrier#448] Batched: true, DataFilters: [sm_carrier#448 IN (DIAMOND,AIRBORNE), isnotnull(sm_ship_mode_sk#444)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/ship_mode.parquet], PartitionFilters: [], PushedFilters: [In(sm_carrier, [AIRBORNE,DIAMOND]), IsNotNull(sm_ship_mode_sk)], ReadSchema: struct<sm_ship_mode_sk:int,sm_carrier:string>
                     +- *(36) HashAggregate(keys=[w_warehouse_name#13165, w_warehouse_sq_ft#13166, w_city#13171, w_county#13172, w_state#13173, w_country#13175, d_year#13183], functions=[sum(CASE WHEN (d_moy#13185 = 1) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 2) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 3) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 4) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 5) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 6) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 7) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 8) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 9) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 10) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 11) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 12) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#13165, w_warehouse_sq_ft#13166, w_city#13171, w_county#13172, w_state#13173, w_country#13175, ship_carriers#13101, year#13102, jan_sales#13103, feb_sales#13104, mar_sales#13105, apr_sales#13106, may_sales#13107, jun_sales#13108, jul_sales#13109, aug_sales#13110, sep_sales#13111, oct_sales#13112, nov_sales#13113, dec_sales#13114, jan_net#13115, feb_net#13116, mar_net#13117, apr_net#13118, ... 8 more fields])
                        +- AQEShuffleRead coalesced
                           +- ShuffleQueryStage 21
                              +- Exchange hashpartitioning(w_warehouse_name#13165, w_warehouse_sq_ft#13166, w_city#13171, w_county#13172, w_state#13173, w_country#13175, d_year#13183, 200), ENSURE_REQUIREMENTS, [id=#138397]
                                 +- *(34) HashAggregate(keys=[w_warehouse_name#13165, w_warehouse_sq_ft#13166, w_city#13171, w_county#13172, w_state#13173, w_country#13175, d_year#13183], functions=[partial_sum(CASE WHEN (d_moy#13185 = 1) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 2) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 3) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 4) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 5) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 6) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 7) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 8) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 9) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 10) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 11) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 12) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#13165, w_warehouse_sq_ft#13166, w_city#13171, w_county#13172, w_state#13173, w_country#13175, d_year#13183, sum#13637, isEmpty#13638, sum#13639, isEmpty#13640, sum#13641, isEmpty#13642, sum#13643, isEmpty#13644, sum#13645, isEmpty#13646, sum#13647, isEmpty#13648, sum#13649, isEmpty#13650, sum#13651, isEmpty#13652, sum#13653, ... 31 more fields])
                                    +- *(34) Project [cs_quantity#562, cs_ext_sales_price#567, cs_net_paid_inc_ship_tax#576, w_warehouse_name#13165, w_warehouse_sq_ft#13166, w_city#13171, w_county#13172, w_state#13173, w_country#13175, d_year#13183, d_moy#13185]
                                       +- *(34) SortMergeJoin [cs_ship_mode_sk#557], [sm_ship_mode_sk#13215], Inner
                                          :- *(32) Sort [cs_ship_mode_sk#557 ASC NULLS FIRST], false, 0
                                          :  +- AQEShuffleRead coalesced
                                          :     +- ShuffleQueryStage 20
                                          :        +- Exchange hashpartitioning(cs_ship_mode_sk#557, 200), ENSURE_REQUIREMENTS, [id=#138287]
                                          :           +- *(31) Project [cs_ship_mode_sk#557, cs_quantity#562, cs_ext_sales_price#567, cs_net_paid_inc_ship_tax#576, w_warehouse_name#13165, w_warehouse_sq_ft#13166, w_city#13171, w_county#13172, w_state#13173, w_country#13175, d_year#13183, d_moy#13185]
                                          :              +- *(31) SortMergeJoin [cs_sold_time_sk#545], [t_time_sk#13205], Inner
                                          :                 :- *(29) Sort [cs_sold_time_sk#545 ASC NULLS FIRST], false, 0
                                          :                 :  +- AQEShuffleRead coalesced
                                          :                 :     +- ShuffleQueryStage 19
                                          :                 :        +- Exchange hashpartitioning(cs_sold_time_sk#545, 200), ENSURE_REQUIREMENTS, [id=#138152]
                                          :                 :           +- *(28) Project [cs_sold_time_sk#545, cs_ship_mode_sk#557, cs_quantity#562, cs_ext_sales_price#567, cs_net_paid_inc_ship_tax#576, w_warehouse_name#13165, w_warehouse_sq_ft#13166, w_city#13171, w_county#13172, w_state#13173, w_country#13175, d_year#13183, d_moy#13185]
                                          :                 :              +- *(28) SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#13177], Inner
                                          :                 :                 :- *(26) Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
                                          :                 :                 :  +- AQEShuffleRead coalesced
                                          :                 :                 :     +- ShuffleQueryStage 15
                                          :                 :                 :        +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#137393]
                                          :                 :                 :           +- *(16) Project [cs_sold_date_sk#544, cs_sold_time_sk#545, cs_ship_mode_sk#557, cs_quantity#562, cs_ext_sales_price#567, cs_net_paid_inc_ship_tax#576, w_warehouse_name#13165, w_warehouse_sq_ft#13166, w_city#13171, w_county#13172, w_state#13173, w_country#13175]
                                          :                 :                 :              +- *(16) SortMergeJoin [cs_warehouse_sk#558], [w_warehouse_sk#13163], Inner
                                          :                 :                 :                 :- *(14) Sort [cs_warehouse_sk#558 ASC NULLS FIRST], false, 0
                                          :                 :                 :                 :  +- AQEShuffleRead coalesced
                                          :                 :                 :                 :     +- ShuffleQueryStage 5
                                          :                 :                 :                 :        +- Exchange hashpartitioning(cs_warehouse_sk#558, 200), ENSURE_REQUIREMENTS, [id=#136172]
                                          :                 :                 :                 :           +- *(6) Filter (((isnotnull(cs_warehouse_sk#558) AND isnotnull(cs_sold_date_sk#544)) AND isnotnull(cs_sold_time_sk#545)) AND isnotnull(cs_ship_mode_sk#557))
                                          :                 :                 :                 :              +- *(6) ColumnarToRow
                                          :                 :                 :                 :                 +- FileScan parquet [cs_sold_date_sk#544,cs_sold_time_sk#545,cs_ship_mode_sk#557,cs_warehouse_sk#558,cs_quantity#562,cs_ext_sales_price#567,cs_net_paid_inc_ship_tax#576] Batched: true, DataFilters: [isnotnull(cs_warehouse_sk#558), isnotnull(cs_sold_date_sk#544), isnotnull(cs_sold_time_sk#545), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_sold_time_sk), IsNotNull(cs..., ReadSchema: struct<cs_sold_date_sk:int,cs_sold_time_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_quantit...
                                          :                 :                 :                 +- *(15) Sort [w_warehouse_sk#13163 ASC NULLS FIRST], false, 0
                                          :                 :                 :                    +- AQEShuffleRead coalesced
                                          :                 :                 :                       +- ShuffleQueryStage 7
                                          :                 :                 :                          +- ReusedExchange [w_warehouse_sk#13163, w_warehouse_name#13165, w_warehouse_sq_ft#13166, w_city#13171, w_county#13172, w_state#13173, w_country#13175], Exchange hashpartitioning(w_warehouse_sk#770, 200), ENSURE_REQUIREMENTS, [id=#136079]
                                          :                 :                 +- *(27) Sort [d_date_sk#13177 ASC NULLS FIRST], false, 0
                                          :                 :                    +- AQEShuffleRead coalesced
                                          :                 :                       +- ShuffleQueryStage 9
                                          :                 :                          +- ReusedExchange [d_date_sk#13177, d_year#13183, d_moy#13185], Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#136100]
                                          :                 +- *(30) Sort [t_time_sk#13205 ASC NULLS FIRST], false, 0
                                          :                    +- AQEShuffleRead coalesced
                                          :                       +- ShuffleQueryStage 11
                                          :                          +- ReusedExchange [t_time_sk#13205], Exchange hashpartitioning(t_time_sk#456, 200), ENSURE_REQUIREMENTS, [id=#136123]
                                          +- *(33) Sort [sm_ship_mode_sk#13215 ASC NULLS FIRST], false, 0
                                             +- AQEShuffleRead coalesced
                                                +- ShuffleQueryStage 13
                                                   +- ReusedExchange [sm_ship_mode_sk#13215], Exchange hashpartitioning(sm_ship_mode_sk#444, 200), ENSURE_REQUIREMENTS, [id=#136148]
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[w_warehouse_name#772 ASC NULLS FIRST], output=[w_warehouse_name#772,w_warehouse_sq_ft#773,w_city#778,w_county#779,w_state#780,w_country#782,ship_carriers#13075,year#13076,jan_sales#13127,feb_sales#13128,mar_sales#13129,apr_sales#13130,may_sales#13131,jun_sales#13132,jul_sales#13133,aug_sales#13134,sep_sales#13135,oct_sales#13136,nov_sales#13137,dec_sales#13138,jan_sales_per_sq_foot#13139,feb_sales_per_sq_foot#13140,mar_sales_per_sq_foot#13141,apr_sales_per_sq_foot#13142,... 20 more fields])
   +- HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#13075, year#13076], functions=[sum(jan_sales#13077), sum(feb_sales#13078), sum(mar_sales#13079), sum(apr_sales#13080), sum(may_sales#13081), sum(jun_sales#13082), sum(jul_sales#13083), sum(aug_sales#13084), sum(sep_sales#13085), sum(oct_sales#13086), sum(nov_sales#13087), sum(dec_sales#13088), sum(CheckOverflow((promote_precision(jan_sales#13077) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(feb_sales#13078) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(mar_sales#13079) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(apr_sales#13080) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(may_sales#13081) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jun_sales#13082) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jul_sales#13083) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(aug_sales#13084) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(sep_sales#13085) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(oct_sales#13086) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(nov_sales#13087) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(dec_sales#13088) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), ... 12 more fields], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#13075, year#13076, jan_sales#13127, feb_sales#13128, mar_sales#13129, apr_sales#13130, may_sales#13131, jun_sales#13132, jul_sales#13133, aug_sales#13134, sep_sales#13135, oct_sales#13136, nov_sales#13137, dec_sales#13138, jan_sales_per_sq_foot#13139, feb_sales_per_sq_foot#13140, mar_sales_per_sq_foot#13141, apr_sales_per_sq_foot#13142, ... 20 more fields])
      +- Exchange hashpartitioning(w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#13075, year#13076, 200), ENSURE_REQUIREMENTS, [id=#135901]
         +- HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#13075, year#13076], functions=[partial_sum(jan_sales#13077), partial_sum(feb_sales#13078), partial_sum(mar_sales#13079), partial_sum(apr_sales#13080), partial_sum(may_sales#13081), partial_sum(jun_sales#13082), partial_sum(jul_sales#13083), partial_sum(aug_sales#13084), partial_sum(sep_sales#13085), partial_sum(oct_sales#13086), partial_sum(nov_sales#13087), partial_sum(dec_sales#13088), partial_sum(CheckOverflow((promote_precision(jan_sales#13077) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(feb_sales#13078) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(mar_sales#13079) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(apr_sales#13080) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(may_sales#13081) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jun_sales#13082) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jul_sales#13083) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(aug_sales#13084) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(sep_sales#13085) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(oct_sales#13086) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(nov_sales#13087) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(dec_sales#13088) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), ... 12 more fields], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#13075, year#13076, sum#13421, isEmpty#13422, sum#13423, isEmpty#13424, sum#13425, isEmpty#13426, sum#13427, isEmpty#13428, sum#13429, isEmpty#13430, sum#13431, isEmpty#13432, sum#13433, isEmpty#13434, sum#13435, isEmpty#13436, ... 56 more fields])
            +- Union
               :- HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618], functions=[sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#13075, year#13076, jan_sales#13077, feb_sales#13078, mar_sales#13079, apr_sales#13080, may_sales#13081, jun_sales#13082, jul_sales#13083, aug_sales#13084, sep_sales#13085, oct_sales#13086, nov_sales#13087, dec_sales#13088, jan_net#13089, feb_net#13090, mar_net#13091, apr_net#13092, ... 8 more fields])
               :  +- Exchange hashpartitioning(w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, 200), ENSURE_REQUIREMENTS, [id=#135861]
               :     +- HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618], functions=[partial_sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, sum#13541, isEmpty#13542, sum#13543, isEmpty#13544, sum#13545, isEmpty#13546, sum#13547, isEmpty#13548, sum#13549, isEmpty#13550, sum#13551, isEmpty#13552, sum#13553, isEmpty#13554, sum#13555, isEmpty#13556, sum#13557, ... 31 more fields])
               :        +- Project [ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, d_moy#620]
               :           +- SortMergeJoin [ws_ship_mode_sk#490], [sm_ship_mode_sk#444], Inner
               :              :- Sort [ws_ship_mode_sk#490 ASC NULLS FIRST], false, 0
               :              :  +- Exchange hashpartitioning(ws_ship_mode_sk#490, 200), ENSURE_REQUIREMENTS, [id=#135853]
               :              :     +- Project [ws_ship_mode_sk#490, ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, d_moy#620]
               :              :        +- SortMergeJoin [ws_sold_time_sk#477], [t_time_sk#456], Inner
               :              :           :- Sort [ws_sold_time_sk#477 ASC NULLS FIRST], false, 0
               :              :           :  +- Exchange hashpartitioning(ws_sold_time_sk#477, 200), ENSURE_REQUIREMENTS, [id=#135845]
               :              :           :     +- Project [ws_sold_time_sk#477, ws_ship_mode_sk#490, ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, d_moy#620]
               :              :           :        +- SortMergeJoin [ws_sold_date_sk#476], [d_date_sk#612], Inner
               :              :           :           :- Sort [ws_sold_date_sk#476 ASC NULLS FIRST], false, 0
               :              :           :           :  +- Exchange hashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#135837]
               :              :           :           :     +- Project [ws_sold_date_sk#476, ws_sold_time_sk#477, ws_ship_mode_sk#490, ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782]
               :              :           :           :        +- SortMergeJoin [ws_warehouse_sk#491], [w_warehouse_sk#770], Inner
               :              :           :           :           :- Sort [ws_warehouse_sk#491 ASC NULLS FIRST], false, 0
               :              :           :           :           :  +- Exchange hashpartitioning(ws_warehouse_sk#491, 200), ENSURE_REQUIREMENTS, [id=#135829]
               :              :           :           :           :     +- Filter (((isnotnull(ws_warehouse_sk#491) AND isnotnull(ws_sold_date_sk#476)) AND isnotnull(ws_sold_time_sk#477)) AND isnotnull(ws_ship_mode_sk#490))
               :              :           :           :           :        +- FileScan parquet [ws_sold_date_sk#476,ws_sold_time_sk#477,ws_ship_mode_sk#490,ws_warehouse_sk#491,ws_quantity#494,ws_sales_price#497,ws_net_paid_inc_tax#506] Batched: true, DataFilters: [isnotnull(ws_warehouse_sk#491), isnotnull(ws_sold_date_sk#476), isnotnull(ws_sold_time_sk#477), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_warehouse_sk), IsNotNull(ws_sold_date_sk), IsNotNull(ws_sold_time_sk), IsNotNull(ws..., ReadSchema: struct<ws_sold_date_sk:int,ws_sold_time_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_quantit...
               :              :           :           :           +- Sort [w_warehouse_sk#770 ASC NULLS FIRST], false, 0
               :              :           :           :              +- Exchange hashpartitioning(w_warehouse_sk#770, 200), ENSURE_REQUIREMENTS, [id=#135830]
               :              :           :           :                 +- Filter isnotnull(w_warehouse_sk#770)
               :              :           :           :                    +- FileScan parquet [w_warehouse_sk#770,w_warehouse_name#772,w_warehouse_sq_ft#773,w_city#778,w_county#779,w_state#780,w_country#782] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#770)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/warehouse.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county:st...
               :              :           :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
               :              :           :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#135838]
               :              :           :                 +- Filter ((isnotnull(d_year#618) AND (d_year#618 = 2002)) AND isnotnull(d_date_sk#612))
               :              :           :                    +- FileScan parquet [d_date_sk#612,d_year#618,d_moy#620] Batched: true, DataFilters: [isnotnull(d_year#618), (d_year#618 = 2002), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
               :              :           +- Sort [t_time_sk#456 ASC NULLS FIRST], false, 0
               :              :              +- Exchange hashpartitioning(t_time_sk#456, 200), ENSURE_REQUIREMENTS, [id=#135846]
               :              :                 +- Project [t_time_sk#456]
               :              :                    +- Filter (((isnotnull(t_time#458) AND (t_time#458 >= 49530)) AND (t_time#458 <= 78330)) AND isnotnull(t_time_sk#456))
               :              :                       +- FileScan parquet [t_time_sk#456,t_time#458] Batched: true, DataFilters: [isnotnull(t_time#458), (t_time#458 >= 49530), (t_time#458 <= 78330), isnotnull(t_time_sk#456)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/time_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(t_time), GreaterThanOrEqual(t_time,49530), LessThanOrEqual(t_time,78330), IsNotNull(t_..., ReadSchema: struct<t_time_sk:int,t_time:int>
               :              +- Sort [sm_ship_mode_sk#444 ASC NULLS FIRST], false, 0
               :                 +- Exchange hashpartitioning(sm_ship_mode_sk#444, 200), ENSURE_REQUIREMENTS, [id=#135854]
               :                    +- Project [sm_ship_mode_sk#444]
               :                       +- Filter (sm_carrier#448 IN (DIAMOND,AIRBORNE) AND isnotnull(sm_ship_mode_sk#444))
               :                          +- FileScan parquet [sm_ship_mode_sk#444,sm_carrier#448] Batched: true, DataFilters: [sm_carrier#448 IN (DIAMOND,AIRBORNE), isnotnull(sm_ship_mode_sk#444)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/ship_mode.parquet], PartitionFilters: [], PushedFilters: [In(sm_carrier, [AIRBORNE,DIAMOND]), IsNotNull(sm_ship_mode_sk)], ReadSchema: struct<sm_ship_mode_sk:int,sm_carrier:string>
               +- HashAggregate(keys=[w_warehouse_name#13165, w_warehouse_sq_ft#13166, w_city#13171, w_county#13172, w_state#13173, w_country#13175, d_year#13183], functions=[sum(CASE WHEN (d_moy#13185 = 1) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 2) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 3) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 4) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 5) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 6) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 7) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 8) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 9) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 10) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 11) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 12) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#13185 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#13165, w_warehouse_sq_ft#13166, w_city#13171, w_county#13172, w_state#13173, w_country#13175, ship_carriers#13101, year#13102, jan_sales#13103, feb_sales#13104, mar_sales#13105, apr_sales#13106, may_sales#13107, jun_sales#13108, jul_sales#13109, aug_sales#13110, sep_sales#13111, oct_sales#13112, nov_sales#13113, dec_sales#13114, jan_net#13115, feb_net#13116, mar_net#13117, apr_net#13118, ... 8 more fields])
                  +- Exchange hashpartitioning(w_warehouse_name#13165, w_warehouse_sq_ft#13166, w_city#13171, w_county#13172, w_state#13173, w_country#13175, d_year#13183, 200), ENSURE_REQUIREMENTS, [id=#135896]
                     +- HashAggregate(keys=[w_warehouse_name#13165, w_warehouse_sq_ft#13166, w_city#13171, w_county#13172, w_state#13173, w_country#13175, d_year#13183], functions=[partial_sum(CASE WHEN (d_moy#13185 = 1) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 2) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 3) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 4) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 5) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 6) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 7) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 8) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 9) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 10) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 11) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 12) THEN CheckOverflow((promote_precision(cast(cs_ext_sales_price#567 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#13185 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_ship_tax#576 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#13165, w_warehouse_sq_ft#13166, w_city#13171, w_county#13172, w_state#13173, w_country#13175, d_year#13183, sum#13637, isEmpty#13638, sum#13639, isEmpty#13640, sum#13641, isEmpty#13642, sum#13643, isEmpty#13644, sum#13645, isEmpty#13646, sum#13647, isEmpty#13648, sum#13649, isEmpty#13650, sum#13651, isEmpty#13652, sum#13653, ... 31 more fields])
                        +- Project [cs_quantity#562, cs_ext_sales_price#567, cs_net_paid_inc_ship_tax#576, w_warehouse_name#13165, w_warehouse_sq_ft#13166, w_city#13171, w_county#13172, w_state#13173, w_country#13175, d_year#13183, d_moy#13185]
                           +- SortMergeJoin [cs_ship_mode_sk#557], [sm_ship_mode_sk#13215], Inner
                              :- Sort [cs_ship_mode_sk#557 ASC NULLS FIRST], false, 0
                              :  +- Exchange hashpartitioning(cs_ship_mode_sk#557, 200), ENSURE_REQUIREMENTS, [id=#135888]
                              :     +- Project [cs_ship_mode_sk#557, cs_quantity#562, cs_ext_sales_price#567, cs_net_paid_inc_ship_tax#576, w_warehouse_name#13165, w_warehouse_sq_ft#13166, w_city#13171, w_county#13172, w_state#13173, w_country#13175, d_year#13183, d_moy#13185]
                              :        +- SortMergeJoin [cs_sold_time_sk#545], [t_time_sk#13205], Inner
                              :           :- Sort [cs_sold_time_sk#545 ASC NULLS FIRST], false, 0
                              :           :  +- Exchange hashpartitioning(cs_sold_time_sk#545, 200), ENSURE_REQUIREMENTS, [id=#135880]
                              :           :     +- Project [cs_sold_time_sk#545, cs_ship_mode_sk#557, cs_quantity#562, cs_ext_sales_price#567, cs_net_paid_inc_ship_tax#576, w_warehouse_name#13165, w_warehouse_sq_ft#13166, w_city#13171, w_county#13172, w_state#13173, w_country#13175, d_year#13183, d_moy#13185]
                              :           :        +- SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#13177], Inner
                              :           :           :- Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
                              :           :           :  +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#135872]
                              :           :           :     +- Project [cs_sold_date_sk#544, cs_sold_time_sk#545, cs_ship_mode_sk#557, cs_quantity#562, cs_ext_sales_price#567, cs_net_paid_inc_ship_tax#576, w_warehouse_name#13165, w_warehouse_sq_ft#13166, w_city#13171, w_county#13172, w_state#13173, w_country#13175]
                              :           :           :        +- SortMergeJoin [cs_warehouse_sk#558], [w_warehouse_sk#13163], Inner
                              :           :           :           :- Sort [cs_warehouse_sk#558 ASC NULLS FIRST], false, 0
                              :           :           :           :  +- Exchange hashpartitioning(cs_warehouse_sk#558, 200), ENSURE_REQUIREMENTS, [id=#135864]
                              :           :           :           :     +- Filter (((isnotnull(cs_warehouse_sk#558) AND isnotnull(cs_sold_date_sk#544)) AND isnotnull(cs_sold_time_sk#545)) AND isnotnull(cs_ship_mode_sk#557))
                              :           :           :           :        +- FileScan parquet [cs_sold_date_sk#544,cs_sold_time_sk#545,cs_ship_mode_sk#557,cs_warehouse_sk#558,cs_quantity#562,cs_ext_sales_price#567,cs_net_paid_inc_ship_tax#576] Batched: true, DataFilters: [isnotnull(cs_warehouse_sk#558), isnotnull(cs_sold_date_sk#544), isnotnull(cs_sold_time_sk#545), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_sold_time_sk), IsNotNull(cs..., ReadSchema: struct<cs_sold_date_sk:int,cs_sold_time_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_quantit...
                              :           :           :           +- Sort [w_warehouse_sk#13163 ASC NULLS FIRST], false, 0
                              :           :           :              +- Exchange hashpartitioning(w_warehouse_sk#13163, 200), ENSURE_REQUIREMENTS, [id=#135865]
                              :           :           :                 +- Filter isnotnull(w_warehouse_sk#13163)
                              :           :           :                    +- FileScan parquet [w_warehouse_sk#13163,w_warehouse_name#13165,w_warehouse_sq_ft#13166,w_city#13171,w_county#13172,w_state#13173,w_country#13175] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#13163)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/warehouse.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county:st...
                              :           :           +- Sort [d_date_sk#13177 ASC NULLS FIRST], false, 0
                              :           :              +- Exchange hashpartitioning(d_date_sk#13177, 200), ENSURE_REQUIREMENTS, [id=#135873]
                              :           :                 +- Filter ((isnotnull(d_year#13183) AND (d_year#13183 = 2002)) AND isnotnull(d_date_sk#13177))
                              :           :                    +- FileScan parquet [d_date_sk#13177,d_year#13183,d_moy#13185] Batched: true, DataFilters: [isnotnull(d_year#13183), (d_year#13183 = 2002), isnotnull(d_date_sk#13177)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                              :           +- Sort [t_time_sk#13205 ASC NULLS FIRST], false, 0
                              :              +- Exchange hashpartitioning(t_time_sk#13205, 200), ENSURE_REQUIREMENTS, [id=#135881]
                              :                 +- Project [t_time_sk#13205]
                              :                    +- Filter (((isnotnull(t_time#13207) AND (t_time#13207 >= 49530)) AND (t_time#13207 <= 78330)) AND isnotnull(t_time_sk#13205))
                              :                       +- FileScan parquet [t_time_sk#13205,t_time#13207] Batched: true, DataFilters: [isnotnull(t_time#13207), (t_time#13207 >= 49530), (t_time#13207 <= 78330), isnotnull(t_time_sk#1..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/time_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(t_time), GreaterThanOrEqual(t_time,49530), LessThanOrEqual(t_time,78330), IsNotNull(t_..., ReadSchema: struct<t_time_sk:int,t_time:int>
                              +- Sort [sm_ship_mode_sk#13215 ASC NULLS FIRST], false, 0
                                 +- Exchange hashpartitioning(sm_ship_mode_sk#13215, 200), ENSURE_REQUIREMENTS, [id=#135889]
                                    +- Project [sm_ship_mode_sk#13215]
                                       +- Filter (sm_carrier#13219 IN (DIAMOND,AIRBORNE) AND isnotnull(sm_ship_mode_sk#13215))
                                          +- FileScan parquet [sm_ship_mode_sk#13215,sm_carrier#13219] Batched: true, DataFilters: [sm_carrier#13219 IN (DIAMOND,AIRBORNE), isnotnull(sm_ship_mode_sk#13215)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/ship_mode.parquet], PartitionFilters: [], PushedFilters: [In(sm_carrier, [AIRBORNE,DIAMOND]), IsNotNull(sm_ship_mode_sk)], ReadSchema: struct<sm_ship_mode_sk:int,sm_carrier:string>
