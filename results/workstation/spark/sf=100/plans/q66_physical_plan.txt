AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[w_warehouse_name#772 ASC NULLS FIRST], output=[w_warehouse_name#772,w_warehouse_sq_ft#773,w_city#778,w_county#779,w_state#780,w_country#782,ship_carriers#15228,year#15229,jan_sales#15280,feb_sales#15281,mar_sales#15282,apr_sales#15283,may_sales#15284,jun_sales#15285,jul_sales#15286,aug_sales#15287,sep_sales#15288,oct_sales#15289,nov_sales#15290,dec_sales#15291,jan_sales_per_sq_foot#15292,feb_sales_per_sq_foot#15293,mar_sales_per_sq_foot#15294,apr_sales_per_sq_foot#15295,... 20 more fields])
   +- *(38) HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#15228, year#15229], functions=[sum(jan_sales#15230), sum(feb_sales#15231), sum(mar_sales#15232), sum(apr_sales#15233), sum(may_sales#15234), sum(jun_sales#15235), sum(jul_sales#15236), sum(aug_sales#15237), sum(sep_sales#15238), sum(oct_sales#15239), sum(nov_sales#15240), sum(dec_sales#15241), sum(CheckOverflow((promote_precision(jan_sales#15230) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(feb_sales#15231) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(mar_sales#15232) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(apr_sales#15233) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(may_sales#15234) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jun_sales#15235) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jul_sales#15236) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(aug_sales#15237) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(sep_sales#15238) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(oct_sales#15239) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(nov_sales#15240) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(dec_sales#15241) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), ... 12 more fields], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#15228, year#15229, jan_sales#15280, feb_sales#15281, mar_sales#15282, apr_sales#15283, may_sales#15284, jun_sales#15285, jul_sales#15286, aug_sales#15287, sep_sales#15288, oct_sales#15289, nov_sales#15290, dec_sales#15291, jan_sales_per_sq_foot#15292, feb_sales_per_sq_foot#15293, mar_sales_per_sq_foot#15294, apr_sales_per_sq_foot#15295, ... 20 more fields])
      +- AQEShuffleRead coalesced
         +- ShuffleQueryStage 22
            +- Exchange hashpartitioning(w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#15228, year#15229, 200), ENSURE_REQUIREMENTS, [id=#211759]
               +- *(37) HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#15228, year#15229], functions=[partial_sum(jan_sales#15230), partial_sum(feb_sales#15231), partial_sum(mar_sales#15232), partial_sum(apr_sales#15233), partial_sum(may_sales#15234), partial_sum(jun_sales#15235), partial_sum(jul_sales#15236), partial_sum(aug_sales#15237), partial_sum(sep_sales#15238), partial_sum(oct_sales#15239), partial_sum(nov_sales#15240), partial_sum(dec_sales#15241), partial_sum(CheckOverflow((promote_precision(jan_sales#15230) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(feb_sales#15231) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(mar_sales#15232) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(apr_sales#15233) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(may_sales#15234) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jun_sales#15235) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jul_sales#15236) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(aug_sales#15237) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(sep_sales#15238) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(oct_sales#15239) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(nov_sales#15240) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(dec_sales#15241) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), ... 12 more fields], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#15228, year#15229, sum#15574, isEmpty#15575, sum#15576, isEmpty#15577, sum#15578, isEmpty#15579, sum#15580, isEmpty#15581, sum#15582, isEmpty#15583, sum#15584, isEmpty#15585, sum#15586, isEmpty#15587, sum#15588, isEmpty#15589, ... 56 more fields])
                  +- Union
                     :- *(35) HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618], functions=[sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#15228, year#15229, jan_sales#15230, feb_sales#15231, mar_sales#15232, apr_sales#15233, may_sales#15234, jun_sales#15235, jul_sales#15236, aug_sales#15237, sep_sales#15238, oct_sales#15239, nov_sales#15240, dec_sales#15241, jan_net#15242, feb_net#15243, mar_net#15244, apr_net#15245, ... 8 more fields])
                     :  +- AQEShuffleRead coalesced
                     :     +- ShuffleQueryStage 21
                     :        +- Exchange hashpartitioning(w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, 200), ENSURE_REQUIREMENTS, [id=#211674]
                     :           +- *(34) HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618], functions=[partial_sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, sum#15694, isEmpty#15695, sum#15696, isEmpty#15697, sum#15698, isEmpty#15699, sum#15700, isEmpty#15701, sum#15702, isEmpty#15703, sum#15704, isEmpty#15705, sum#15706, isEmpty#15707, sum#15708, isEmpty#15709, sum#15710, ... 31 more fields])
                     :              +- *(34) Project [ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, d_moy#620]
                     :                 +- *(34) SortMergeJoin [ws_ship_mode_sk#490], [sm_ship_mode_sk#444], Inner
                     :                    :- *(32) Sort [ws_ship_mode_sk#490 ASC NULLS FIRST], false, 0
                     :                    :  +- AQEShuffleRead coalesced
                     :                    :     +- ShuffleQueryStage 19
                     :                    :        +- Exchange hashpartitioning(ws_ship_mode_sk#490, 200), ENSURE_REQUIREMENTS, [id=#211445]
                     :                    :           +- *(28) Project [ws_ship_mode_sk#490, ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, d_moy#620]
                     :                    :              +- *(28) SortMergeJoin [ws_sold_time_sk#477], [t_time_sk#456], Inner
                     :                    :                 :- *(26) Sort [ws_sold_time_sk#477 ASC NULLS FIRST], false, 0
                     :                    :                 :  +- AQEShuffleRead coalesced
                     :                    :                 :     +- ShuffleQueryStage 17
                     :                    :                 :        +- Exchange hashpartitioning(ws_sold_time_sk#477, 200), ENSURE_REQUIREMENTS, [id=#211128]
                     :                    :                 :           +- *(22) Project [ws_sold_time_sk#477, ws_ship_mode_sk#490, ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, d_moy#620]
                     :                    :                 :              +- *(22) SortMergeJoin [ws_sold_date_sk#476], [d_date_sk#612], Inner
                     :                    :                 :                 :- *(20) Sort [ws_sold_date_sk#476 ASC NULLS FIRST], false, 0
                     :                    :                 :                 :  +- AQEShuffleRead coalesced
                     :                    :                 :                 :     +- ShuffleQueryStage 14
                     :                    :                 :                 :        +- Exchange hashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#210492]
                     :                    :                 :                 :           +- *(13) Project [ws_sold_date_sk#476, ws_sold_time_sk#477, ws_ship_mode_sk#490, ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782]
                     :                    :                 :                 :              +- *(13) SortMergeJoin [ws_warehouse_sk#491], [w_warehouse_sk#770], Inner
                     :                    :                 :                 :                 :- *(11) Sort [ws_warehouse_sk#491 ASC NULLS FIRST], false, 0
                     :                    :                 :                 :                 :  +- AQEShuffleRead coalesced
                     :                    :                 :                 :                 :     +- ShuffleQueryStage 0
                     :                    :                 :                 :                 :        +- Exchange hashpartitioning(ws_warehouse_sk#491, 200), ENSURE_REQUIREMENTS, [id=#209390]
                     :                    :                 :                 :                 :           +- *(1) Filter (((isnotnull(ws_warehouse_sk#491) AND isnotnull(ws_sold_date_sk#476)) AND isnotnull(ws_sold_time_sk#477)) AND isnotnull(ws_ship_mode_sk#490))
                     :                    :                 :                 :                 :              +- *(1) ColumnarToRow
                     :                    :                 :                 :                 :                 +- FileScan parquet [ws_sold_date_sk#476,ws_sold_time_sk#477,ws_ship_mode_sk#490,ws_warehouse_sk#491,ws_quantity#494,ws_sales_price#497,ws_net_paid_inc_tax#506] Batched: true, DataFilters: [isnotnull(ws_warehouse_sk#491), isnotnull(ws_sold_date_sk#476), isnotnull(ws_sold_time_sk#477), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_warehouse_sk), IsNotNull(ws_sold_date_sk), IsNotNull(ws_sold_time_sk), IsNotNull(ws..., ReadSchema: struct<ws_sold_date_sk:int,ws_sold_time_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_quantit...
                     :                    :                 :                 :                 +- *(12) Sort [w_warehouse_sk#770 ASC NULLS FIRST], false, 0
                     :                    :                 :                 :                    +- AQEShuffleRead coalesced
                     :                    :                 :                 :                       +- ShuffleQueryStage 1
                     :                    :                 :                 :                          +- Exchange hashpartitioning(w_warehouse_sk#770, 200), ENSURE_REQUIREMENTS, [id=#209407]
                     :                    :                 :                 :                             +- *(2) Filter isnotnull(w_warehouse_sk#770)
                     :                    :                 :                 :                                +- *(2) ColumnarToRow
                     :                    :                 :                 :                                   +- FileScan parquet [w_warehouse_sk#770,w_warehouse_name#772,w_warehouse_sq_ft#773,w_city#778,w_county#779,w_state#780,w_country#782] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#770)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/warehouse.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county:st...
                     :                    :                 :                 +- *(21) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                     :                    :                 :                    +- AQEShuffleRead coalesced
                     :                    :                 :                       +- ShuffleQueryStage 2
                     :                    :                 :                          +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#209428]
                     :                    :                 :                             +- *(3) Filter ((isnotnull(d_year#618) AND (d_year#618 = 2000)) AND isnotnull(d_date_sk#612))
                     :                    :                 :                                +- *(3) ColumnarToRow
                     :                    :                 :                                   +- FileScan parquet [d_date_sk#612,d_year#618,d_moy#620] Batched: true, DataFilters: [isnotnull(d_year#618), (d_year#618 = 2000), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                     :                    :                 +- *(27) Sort [t_time_sk#456 ASC NULLS FIRST], false, 0
                     :                    :                    +- AQEShuffleRead coalesced
                     :                    :                       +- ShuffleQueryStage 3
                     :                    :                          +- Exchange hashpartitioning(t_time_sk#456, 200), ENSURE_REQUIREMENTS, [id=#209451]
                     :                    :                             +- *(4) Project [t_time_sk#456]
                     :                    :                                +- *(4) Filter (((isnotnull(t_time#458) AND (t_time#458 >= 12143)) AND (t_time#458 <= 40943)) AND isnotnull(t_time_sk#456))
                     :                    :                                   +- *(4) ColumnarToRow
                     :                    :                                      +- FileScan parquet [t_time_sk#456,t_time#458] Batched: true, DataFilters: [isnotnull(t_time#458), (t_time#458 >= 12143), (t_time#458 <= 40943), isnotnull(t_time_sk#456)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/time_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(t_time), GreaterThanOrEqual(t_time,12143), LessThanOrEqual(t_time,40943), IsNotNull(t_..., ReadSchema: struct<t_time_sk:int,t_time:int>
                     :                    +- *(33) Sort [sm_ship_mode_sk#444 ASC NULLS FIRST], false, 0
                     :                       +- AQEShuffleRead coalesced
                     :                          +- ShuffleQueryStage 4
                     :                             +- Exchange hashpartitioning(sm_ship_mode_sk#444, 200), ENSURE_REQUIREMENTS, [id=#209476]
                     :                                +- *(5) Project [sm_ship_mode_sk#444]
                     :                                   +- *(5) Filter (sm_carrier#448 IN (ZHOU,MSC) AND isnotnull(sm_ship_mode_sk#444))
                     :                                      +- *(5) ColumnarToRow
                     :                                         +- FileScan parquet [sm_ship_mode_sk#444,sm_carrier#448] Batched: true, DataFilters: [sm_carrier#448 IN (ZHOU,MSC), isnotnull(sm_ship_mode_sk#444)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/ship_mode.parquet], PartitionFilters: [], PushedFilters: [In(sm_carrier, [MSC,ZHOU]), IsNotNull(sm_ship_mode_sk)], ReadSchema: struct<sm_ship_mode_sk:int,sm_carrier:string>
                     +- *(36) HashAggregate(keys=[w_warehouse_name#15318, w_warehouse_sq_ft#15319, w_city#15324, w_county#15325, w_state#15326, w_country#15328, d_year#15336], functions=[sum(CASE WHEN (d_moy#15338 = 1) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 2) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 3) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 4) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 5) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 6) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 7) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 8) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 9) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 10) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 11) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 12) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#15318, w_warehouse_sq_ft#15319, w_city#15324, w_county#15325, w_state#15326, w_country#15328, ship_carriers#15254, year#15255, jan_sales#15256, feb_sales#15257, mar_sales#15258, apr_sales#15259, may_sales#15260, jun_sales#15261, jul_sales#15262, aug_sales#15263, sep_sales#15264, oct_sales#15265, nov_sales#15266, dec_sales#15267, jan_net#15268, feb_net#15269, mar_net#15270, apr_net#15271, ... 8 more fields])
                        +- AQEShuffleRead coalesced
                           +- ShuffleQueryStage 20
                              +- Exchange hashpartitioning(w_warehouse_name#15318, w_warehouse_sq_ft#15319, w_city#15324, w_county#15325, w_state#15326, w_country#15328, d_year#15336, 200), ENSURE_REQUIREMENTS, [id=#211577]
                                 +- *(31) HashAggregate(keys=[w_warehouse_name#15318, w_warehouse_sq_ft#15319, w_city#15324, w_county#15325, w_state#15326, w_country#15328, d_year#15336], functions=[partial_sum(CASE WHEN (d_moy#15338 = 1) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 2) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 3) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 4) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 5) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 6) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 7) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 8) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 9) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 10) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 11) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 12) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#15318, w_warehouse_sq_ft#15319, w_city#15324, w_county#15325, w_state#15326, w_country#15328, d_year#15336, sum#15790, isEmpty#15791, sum#15792, isEmpty#15793, sum#15794, isEmpty#15795, sum#15796, isEmpty#15797, sum#15798, isEmpty#15799, sum#15800, isEmpty#15801, sum#15802, isEmpty#15803, sum#15804, isEmpty#15805, sum#15806, ... 31 more fields])
                                    +- *(31) Project [cs_quantity#562, cs_ext_list_price#569, cs_net_paid_inc_tax#574, w_warehouse_name#15318, w_warehouse_sq_ft#15319, w_city#15324, w_county#15325, w_state#15326, w_country#15328, d_year#15336, d_moy#15338]
                                       +- *(31) SortMergeJoin [cs_ship_mode_sk#557], [sm_ship_mode_sk#15368], Inner
                                          :- *(29) Sort [cs_ship_mode_sk#557 ASC NULLS FIRST], false, 0
                                          :  +- AQEShuffleRead coalesced
                                          :     +- ShuffleQueryStage 18
                                          :        +- Exchange hashpartitioning(cs_ship_mode_sk#557, 200), ENSURE_REQUIREMENTS, [id=#211300]
                                          :           +- *(25) Project [cs_ship_mode_sk#557, cs_quantity#562, cs_ext_list_price#569, cs_net_paid_inc_tax#574, w_warehouse_name#15318, w_warehouse_sq_ft#15319, w_city#15324, w_county#15325, w_state#15326, w_country#15328, d_year#15336, d_moy#15338]
                                          :              +- *(25) SortMergeJoin [cs_sold_time_sk#545], [t_time_sk#15358], Inner
                                          :                 :- *(23) Sort [cs_sold_time_sk#545 ASC NULLS FIRST], false, 0
                                          :                 :  +- AQEShuffleRead coalesced
                                          :                 :     +- ShuffleQueryStage 16
                                          :                 :        +- Exchange hashpartitioning(cs_sold_time_sk#545, 200), ENSURE_REQUIREMENTS, [id=#210941]
                                          :                 :           +- *(19) Project [cs_sold_time_sk#545, cs_ship_mode_sk#557, cs_quantity#562, cs_ext_list_price#569, cs_net_paid_inc_tax#574, w_warehouse_name#15318, w_warehouse_sq_ft#15319, w_city#15324, w_county#15325, w_state#15326, w_country#15328, d_year#15336, d_moy#15338]
                                          :                 :              +- *(19) SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#15330], Inner
                                          :                 :                 :- *(17) Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
                                          :                 :                 :  +- AQEShuffleRead coalesced
                                          :                 :                 :     +- ShuffleQueryStage 15
                                          :                 :                 :        +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#210727]
                                          :                 :                 :           +- *(16) Project [cs_sold_date_sk#544, cs_sold_time_sk#545, cs_ship_mode_sk#557, cs_quantity#562, cs_ext_list_price#569, cs_net_paid_inc_tax#574, w_warehouse_name#15318, w_warehouse_sq_ft#15319, w_city#15324, w_county#15325, w_state#15326, w_country#15328]
                                          :                 :                 :              +- *(16) SortMergeJoin(skew=true) [cs_warehouse_sk#558], [w_warehouse_sk#15316], Inner
                                          :                 :                 :                 :- *(14) Sort [cs_warehouse_sk#558 ASC NULLS FIRST], false, 0
                                          :                 :                 :                 :  +- AQEShuffleRead skewed
                                          :                 :                 :                 :     +- ShuffleQueryStage 5
                                          :                 :                 :                 :        +- Exchange hashpartitioning(cs_warehouse_sk#558, 200), ENSURE_REQUIREMENTS, [id=#209500]
                                          :                 :                 :                 :           +- *(6) Filter (((isnotnull(cs_warehouse_sk#558) AND isnotnull(cs_sold_date_sk#544)) AND isnotnull(cs_sold_time_sk#545)) AND isnotnull(cs_ship_mode_sk#557))
                                          :                 :                 :                 :              +- *(6) ColumnarToRow
                                          :                 :                 :                 :                 +- FileScan parquet [cs_sold_date_sk#544,cs_sold_time_sk#545,cs_ship_mode_sk#557,cs_warehouse_sk#558,cs_quantity#562,cs_ext_list_price#569,cs_net_paid_inc_tax#574] Batched: true, DataFilters: [isnotnull(cs_warehouse_sk#558), isnotnull(cs_sold_date_sk#544), isnotnull(cs_sold_time_sk#545), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_sold_time_sk), IsNotNull(cs..., ReadSchema: struct<cs_sold_date_sk:int,cs_sold_time_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_quantit...
                                          :                 :                 :                 +- *(15) Sort [w_warehouse_sk#15316 ASC NULLS FIRST], false, 0
                                          :                 :                 :                    +- AQEShuffleRead
                                          :                 :                 :                       +- ShuffleQueryStage 7
                                          :                 :                 :                          +- ReusedExchange [w_warehouse_sk#15316, w_warehouse_name#15318, w_warehouse_sq_ft#15319, w_city#15324, w_county#15325, w_state#15326, w_country#15328], Exchange hashpartitioning(w_warehouse_sk#770, 200), ENSURE_REQUIREMENTS, [id=#209407]
                                          :                 :                 +- *(18) Sort [d_date_sk#15330 ASC NULLS FIRST], false, 0
                                          :                 :                    +- AQEShuffleRead coalesced
                                          :                 :                       +- ShuffleQueryStage 9
                                          :                 :                          +- ReusedExchange [d_date_sk#15330, d_year#15336, d_moy#15338], Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#209428]
                                          :                 +- *(24) Sort [t_time_sk#15358 ASC NULLS FIRST], false, 0
                                          :                    +- AQEShuffleRead coalesced
                                          :                       +- ShuffleQueryStage 11
                                          :                          +- ReusedExchange [t_time_sk#15358], Exchange hashpartitioning(t_time_sk#456, 200), ENSURE_REQUIREMENTS, [id=#209451]
                                          +- *(30) Sort [sm_ship_mode_sk#15368 ASC NULLS FIRST], false, 0
                                             +- AQEShuffleRead coalesced
                                                +- ShuffleQueryStage 13
                                                   +- ReusedExchange [sm_ship_mode_sk#15368], Exchange hashpartitioning(sm_ship_mode_sk#444, 200), ENSURE_REQUIREMENTS, [id=#209476]
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[w_warehouse_name#772 ASC NULLS FIRST], output=[w_warehouse_name#772,w_warehouse_sq_ft#773,w_city#778,w_county#779,w_state#780,w_country#782,ship_carriers#15228,year#15229,jan_sales#15280,feb_sales#15281,mar_sales#15282,apr_sales#15283,may_sales#15284,jun_sales#15285,jul_sales#15286,aug_sales#15287,sep_sales#15288,oct_sales#15289,nov_sales#15290,dec_sales#15291,jan_sales_per_sq_foot#15292,feb_sales_per_sq_foot#15293,mar_sales_per_sq_foot#15294,apr_sales_per_sq_foot#15295,... 20 more fields])
   +- HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#15228, year#15229], functions=[sum(jan_sales#15230), sum(feb_sales#15231), sum(mar_sales#15232), sum(apr_sales#15233), sum(may_sales#15234), sum(jun_sales#15235), sum(jul_sales#15236), sum(aug_sales#15237), sum(sep_sales#15238), sum(oct_sales#15239), sum(nov_sales#15240), sum(dec_sales#15241), sum(CheckOverflow((promote_precision(jan_sales#15230) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(feb_sales#15231) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(mar_sales#15232) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(apr_sales#15233) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(may_sales#15234) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jun_sales#15235) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jul_sales#15236) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(aug_sales#15237) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(sep_sales#15238) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(oct_sales#15239) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(nov_sales#15240) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(dec_sales#15241) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), ... 12 more fields], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#15228, year#15229, jan_sales#15280, feb_sales#15281, mar_sales#15282, apr_sales#15283, may_sales#15284, jun_sales#15285, jul_sales#15286, aug_sales#15287, sep_sales#15288, oct_sales#15289, nov_sales#15290, dec_sales#15291, jan_sales_per_sq_foot#15292, feb_sales_per_sq_foot#15293, mar_sales_per_sq_foot#15294, apr_sales_per_sq_foot#15295, ... 20 more fields])
      +- Exchange hashpartitioning(w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#15228, year#15229, 200), ENSURE_REQUIREMENTS, [id=#209229]
         +- HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#15228, year#15229], functions=[partial_sum(jan_sales#15230), partial_sum(feb_sales#15231), partial_sum(mar_sales#15232), partial_sum(apr_sales#15233), partial_sum(may_sales#15234), partial_sum(jun_sales#15235), partial_sum(jul_sales#15236), partial_sum(aug_sales#15237), partial_sum(sep_sales#15238), partial_sum(oct_sales#15239), partial_sum(nov_sales#15240), partial_sum(dec_sales#15241), partial_sum(CheckOverflow((promote_precision(jan_sales#15230) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(feb_sales#15231) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(mar_sales#15232) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(apr_sales#15233) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(may_sales#15234) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jun_sales#15235) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jul_sales#15236) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(aug_sales#15237) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(sep_sales#15238) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(oct_sales#15239) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(nov_sales#15240) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(dec_sales#15241) / promote_precision(cast(cast(w_warehouse_sq_ft#773 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), ... 12 more fields], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#15228, year#15229, sum#15574, isEmpty#15575, sum#15576, isEmpty#15577, sum#15578, isEmpty#15579, sum#15580, isEmpty#15581, sum#15582, isEmpty#15583, sum#15584, isEmpty#15585, sum#15586, isEmpty#15587, sum#15588, isEmpty#15589, ... 56 more fields])
            +- Union
               :- HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618], functions=[sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, ship_carriers#15228, year#15229, jan_sales#15230, feb_sales#15231, mar_sales#15232, apr_sales#15233, may_sales#15234, jun_sales#15235, jul_sales#15236, aug_sales#15237, sep_sales#15238, oct_sales#15239, nov_sales#15240, dec_sales#15241, jan_net#15242, feb_net#15243, mar_net#15244, apr_net#15245, ... 8 more fields])
               :  +- Exchange hashpartitioning(w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, 200), ENSURE_REQUIREMENTS, [id=#209189]
               :     +- HashAggregate(keys=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618], functions=[partial_sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_sales_price#497 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#620 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid_inc_tax#506 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#494 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, sum#15694, isEmpty#15695, sum#15696, isEmpty#15697, sum#15698, isEmpty#15699, sum#15700, isEmpty#15701, sum#15702, isEmpty#15703, sum#15704, isEmpty#15705, sum#15706, isEmpty#15707, sum#15708, isEmpty#15709, sum#15710, ... 31 more fields])
               :        +- Project [ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, d_moy#620]
               :           +- SortMergeJoin [ws_ship_mode_sk#490], [sm_ship_mode_sk#444], Inner
               :              :- Sort [ws_ship_mode_sk#490 ASC NULLS FIRST], false, 0
               :              :  +- Exchange hashpartitioning(ws_ship_mode_sk#490, 200), ENSURE_REQUIREMENTS, [id=#209181]
               :              :     +- Project [ws_ship_mode_sk#490, ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, d_moy#620]
               :              :        +- SortMergeJoin [ws_sold_time_sk#477], [t_time_sk#456], Inner
               :              :           :- Sort [ws_sold_time_sk#477 ASC NULLS FIRST], false, 0
               :              :           :  +- Exchange hashpartitioning(ws_sold_time_sk#477, 200), ENSURE_REQUIREMENTS, [id=#209173]
               :              :           :     +- Project [ws_sold_time_sk#477, ws_ship_mode_sk#490, ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782, d_year#618, d_moy#620]
               :              :           :        +- SortMergeJoin [ws_sold_date_sk#476], [d_date_sk#612], Inner
               :              :           :           :- Sort [ws_sold_date_sk#476 ASC NULLS FIRST], false, 0
               :              :           :           :  +- Exchange hashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#209165]
               :              :           :           :     +- Project [ws_sold_date_sk#476, ws_sold_time_sk#477, ws_ship_mode_sk#490, ws_quantity#494, ws_sales_price#497, ws_net_paid_inc_tax#506, w_warehouse_name#772, w_warehouse_sq_ft#773, w_city#778, w_county#779, w_state#780, w_country#782]
               :              :           :           :        +- SortMergeJoin [ws_warehouse_sk#491], [w_warehouse_sk#770], Inner
               :              :           :           :           :- Sort [ws_warehouse_sk#491 ASC NULLS FIRST], false, 0
               :              :           :           :           :  +- Exchange hashpartitioning(ws_warehouse_sk#491, 200), ENSURE_REQUIREMENTS, [id=#209157]
               :              :           :           :           :     +- Filter (((isnotnull(ws_warehouse_sk#491) AND isnotnull(ws_sold_date_sk#476)) AND isnotnull(ws_sold_time_sk#477)) AND isnotnull(ws_ship_mode_sk#490))
               :              :           :           :           :        +- FileScan parquet [ws_sold_date_sk#476,ws_sold_time_sk#477,ws_ship_mode_sk#490,ws_warehouse_sk#491,ws_quantity#494,ws_sales_price#497,ws_net_paid_inc_tax#506] Batched: true, DataFilters: [isnotnull(ws_warehouse_sk#491), isnotnull(ws_sold_date_sk#476), isnotnull(ws_sold_time_sk#477), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_warehouse_sk), IsNotNull(ws_sold_date_sk), IsNotNull(ws_sold_time_sk), IsNotNull(ws..., ReadSchema: struct<ws_sold_date_sk:int,ws_sold_time_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_quantit...
               :              :           :           :           +- Sort [w_warehouse_sk#770 ASC NULLS FIRST], false, 0
               :              :           :           :              +- Exchange hashpartitioning(w_warehouse_sk#770, 200), ENSURE_REQUIREMENTS, [id=#209158]
               :              :           :           :                 +- Filter isnotnull(w_warehouse_sk#770)
               :              :           :           :                    +- FileScan parquet [w_warehouse_sk#770,w_warehouse_name#772,w_warehouse_sq_ft#773,w_city#778,w_county#779,w_state#780,w_country#782] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#770)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/warehouse.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county:st...
               :              :           :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
               :              :           :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#209166]
               :              :           :                 +- Filter ((isnotnull(d_year#618) AND (d_year#618 = 2000)) AND isnotnull(d_date_sk#612))
               :              :           :                    +- FileScan parquet [d_date_sk#612,d_year#618,d_moy#620] Batched: true, DataFilters: [isnotnull(d_year#618), (d_year#618 = 2000), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
               :              :           +- Sort [t_time_sk#456 ASC NULLS FIRST], false, 0
               :              :              +- Exchange hashpartitioning(t_time_sk#456, 200), ENSURE_REQUIREMENTS, [id=#209174]
               :              :                 +- Project [t_time_sk#456]
               :              :                    +- Filter (((isnotnull(t_time#458) AND (t_time#458 >= 12143)) AND (t_time#458 <= 40943)) AND isnotnull(t_time_sk#456))
               :              :                       +- FileScan parquet [t_time_sk#456,t_time#458] Batched: true, DataFilters: [isnotnull(t_time#458), (t_time#458 >= 12143), (t_time#458 <= 40943), isnotnull(t_time_sk#456)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/time_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(t_time), GreaterThanOrEqual(t_time,12143), LessThanOrEqual(t_time,40943), IsNotNull(t_..., ReadSchema: struct<t_time_sk:int,t_time:int>
               :              +- Sort [sm_ship_mode_sk#444 ASC NULLS FIRST], false, 0
               :                 +- Exchange hashpartitioning(sm_ship_mode_sk#444, 200), ENSURE_REQUIREMENTS, [id=#209182]
               :                    +- Project [sm_ship_mode_sk#444]
               :                       +- Filter (sm_carrier#448 IN (ZHOU,MSC) AND isnotnull(sm_ship_mode_sk#444))
               :                          +- FileScan parquet [sm_ship_mode_sk#444,sm_carrier#448] Batched: true, DataFilters: [sm_carrier#448 IN (ZHOU,MSC), isnotnull(sm_ship_mode_sk#444)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/ship_mode.parquet], PartitionFilters: [], PushedFilters: [In(sm_carrier, [MSC,ZHOU]), IsNotNull(sm_ship_mode_sk)], ReadSchema: struct<sm_ship_mode_sk:int,sm_carrier:string>
               +- HashAggregate(keys=[w_warehouse_name#15318, w_warehouse_sq_ft#15319, w_city#15324, w_county#15325, w_state#15326, w_country#15328, d_year#15336], functions=[sum(CASE WHEN (d_moy#15338 = 1) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 2) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 3) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 4) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 5) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 6) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 7) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 8) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 9) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 10) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 11) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 12) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#15338 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#15318, w_warehouse_sq_ft#15319, w_city#15324, w_county#15325, w_state#15326, w_country#15328, ship_carriers#15254, year#15255, jan_sales#15256, feb_sales#15257, mar_sales#15258, apr_sales#15259, may_sales#15260, jun_sales#15261, jul_sales#15262, aug_sales#15263, sep_sales#15264, oct_sales#15265, nov_sales#15266, dec_sales#15267, jan_net#15268, feb_net#15269, mar_net#15270, apr_net#15271, ... 8 more fields])
                  +- Exchange hashpartitioning(w_warehouse_name#15318, w_warehouse_sq_ft#15319, w_city#15324, w_county#15325, w_state#15326, w_country#15328, d_year#15336, 200), ENSURE_REQUIREMENTS, [id=#209224]
                     +- HashAggregate(keys=[w_warehouse_name#15318, w_warehouse_sq_ft#15319, w_city#15324, w_county#15325, w_state#15326, w_country#15328, d_year#15336], functions=[partial_sum(CASE WHEN (d_moy#15338 = 1) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 2) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 3) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 4) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 5) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 6) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 7) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 8) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 9) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 10) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 11) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 12) THEN CheckOverflow((promote_precision(cast(cs_ext_list_price#569 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15338 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#574 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#562 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)], output=[w_warehouse_name#15318, w_warehouse_sq_ft#15319, w_city#15324, w_county#15325, w_state#15326, w_country#15328, d_year#15336, sum#15790, isEmpty#15791, sum#15792, isEmpty#15793, sum#15794, isEmpty#15795, sum#15796, isEmpty#15797, sum#15798, isEmpty#15799, sum#15800, isEmpty#15801, sum#15802, isEmpty#15803, sum#15804, isEmpty#15805, sum#15806, ... 31 more fields])
                        +- Project [cs_quantity#562, cs_ext_list_price#569, cs_net_paid_inc_tax#574, w_warehouse_name#15318, w_warehouse_sq_ft#15319, w_city#15324, w_county#15325, w_state#15326, w_country#15328, d_year#15336, d_moy#15338]
                           +- SortMergeJoin [cs_ship_mode_sk#557], [sm_ship_mode_sk#15368], Inner
                              :- Sort [cs_ship_mode_sk#557 ASC NULLS FIRST], false, 0
                              :  +- Exchange hashpartitioning(cs_ship_mode_sk#557, 200), ENSURE_REQUIREMENTS, [id=#209216]
                              :     +- Project [cs_ship_mode_sk#557, cs_quantity#562, cs_ext_list_price#569, cs_net_paid_inc_tax#574, w_warehouse_name#15318, w_warehouse_sq_ft#15319, w_city#15324, w_county#15325, w_state#15326, w_country#15328, d_year#15336, d_moy#15338]
                              :        +- SortMergeJoin [cs_sold_time_sk#545], [t_time_sk#15358], Inner
                              :           :- Sort [cs_sold_time_sk#545 ASC NULLS FIRST], false, 0
                              :           :  +- Exchange hashpartitioning(cs_sold_time_sk#545, 200), ENSURE_REQUIREMENTS, [id=#209208]
                              :           :     +- Project [cs_sold_time_sk#545, cs_ship_mode_sk#557, cs_quantity#562, cs_ext_list_price#569, cs_net_paid_inc_tax#574, w_warehouse_name#15318, w_warehouse_sq_ft#15319, w_city#15324, w_county#15325, w_state#15326, w_country#15328, d_year#15336, d_moy#15338]
                              :           :        +- SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#15330], Inner
                              :           :           :- Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
                              :           :           :  +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#209200]
                              :           :           :     +- Project [cs_sold_date_sk#544, cs_sold_time_sk#545, cs_ship_mode_sk#557, cs_quantity#562, cs_ext_list_price#569, cs_net_paid_inc_tax#574, w_warehouse_name#15318, w_warehouse_sq_ft#15319, w_city#15324, w_county#15325, w_state#15326, w_country#15328]
                              :           :           :        +- SortMergeJoin [cs_warehouse_sk#558], [w_warehouse_sk#15316], Inner
                              :           :           :           :- Sort [cs_warehouse_sk#558 ASC NULLS FIRST], false, 0
                              :           :           :           :  +- Exchange hashpartitioning(cs_warehouse_sk#558, 200), ENSURE_REQUIREMENTS, [id=#209192]
                              :           :           :           :     +- Filter (((isnotnull(cs_warehouse_sk#558) AND isnotnull(cs_sold_date_sk#544)) AND isnotnull(cs_sold_time_sk#545)) AND isnotnull(cs_ship_mode_sk#557))
                              :           :           :           :        +- FileScan parquet [cs_sold_date_sk#544,cs_sold_time_sk#545,cs_ship_mode_sk#557,cs_warehouse_sk#558,cs_quantity#562,cs_ext_list_price#569,cs_net_paid_inc_tax#574] Batched: true, DataFilters: [isnotnull(cs_warehouse_sk#558), isnotnull(cs_sold_date_sk#544), isnotnull(cs_sold_time_sk#545), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_sold_time_sk), IsNotNull(cs..., ReadSchema: struct<cs_sold_date_sk:int,cs_sold_time_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_quantit...
                              :           :           :           +- Sort [w_warehouse_sk#15316 ASC NULLS FIRST], false, 0
                              :           :           :              +- Exchange hashpartitioning(w_warehouse_sk#15316, 200), ENSURE_REQUIREMENTS, [id=#209193]
                              :           :           :                 +- Filter isnotnull(w_warehouse_sk#15316)
                              :           :           :                    +- FileScan parquet [w_warehouse_sk#15316,w_warehouse_name#15318,w_warehouse_sq_ft#15319,w_city#15324,w_county#15325,w_state#15326,w_country#15328] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#15316)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/warehouse.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county:st...
                              :           :           +- Sort [d_date_sk#15330 ASC NULLS FIRST], false, 0
                              :           :              +- Exchange hashpartitioning(d_date_sk#15330, 200), ENSURE_REQUIREMENTS, [id=#209201]
                              :           :                 +- Filter ((isnotnull(d_year#15336) AND (d_year#15336 = 2000)) AND isnotnull(d_date_sk#15330))
                              :           :                    +- FileScan parquet [d_date_sk#15330,d_year#15336,d_moy#15338] Batched: true, DataFilters: [isnotnull(d_year#15336), (d_year#15336 = 2000), isnotnull(d_date_sk#15330)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                              :           +- Sort [t_time_sk#15358 ASC NULLS FIRST], false, 0
                              :              +- Exchange hashpartitioning(t_time_sk#15358, 200), ENSURE_REQUIREMENTS, [id=#209209]
                              :                 +- Project [t_time_sk#15358]
                              :                    +- Filter (((isnotnull(t_time#15360) AND (t_time#15360 >= 12143)) AND (t_time#15360 <= 40943)) AND isnotnull(t_time_sk#15358))
                              :                       +- FileScan parquet [t_time_sk#15358,t_time#15360] Batched: true, DataFilters: [isnotnull(t_time#15360), (t_time#15360 >= 12143), (t_time#15360 <= 40943), isnotnull(t_time_sk#1..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/time_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(t_time), GreaterThanOrEqual(t_time,12143), LessThanOrEqual(t_time,40943), IsNotNull(t_..., ReadSchema: struct<t_time_sk:int,t_time:int>
                              +- Sort [sm_ship_mode_sk#15368 ASC NULLS FIRST], false, 0
                                 +- Exchange hashpartitioning(sm_ship_mode_sk#15368, 200), ENSURE_REQUIREMENTS, [id=#209217]
                                    +- Project [sm_ship_mode_sk#15368]
                                       +- Filter (sm_carrier#15372 IN (ZHOU,MSC) AND isnotnull(sm_ship_mode_sk#15368))
                                          +- FileScan parquet [sm_ship_mode_sk#15368,sm_carrier#15372] Batched: true, DataFilters: [sm_carrier#15372 IN (ZHOU,MSC), isnotnull(sm_ship_mode_sk#15368)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/ship_mode.parquet], PartitionFilters: [], PushedFilters: [In(sm_carrier, [MSC,ZHOU]), IsNotNull(sm_ship_mode_sk)], ReadSchema: struct<sm_ship_mode_sk:int,sm_carrier:string>
