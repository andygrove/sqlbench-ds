AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(19) Sort [c_last_name#409 ASC NULLS FIRST, c_first_name#408 ASC NULLS FIRST, c_salutation#407 ASC NULLS FIRST, c_preferred_cust_flag#410 DESC NULLS LAST, ss_ticket_number#261L ASC NULLS FIRST], true, 0
   +- AQEShuffleRead coalesced
      +- ShuffleQueryStage 9
         +- Exchange rangepartitioning(c_last_name#409 ASC NULLS FIRST, c_first_name#408 ASC NULLS FIRST, c_salutation#407 ASC NULLS FIRST, c_preferred_cust_flag#410 DESC NULLS LAST, ss_ticket_number#261L ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#54948]
            +- *(18) Project [c_last_name#409, c_first_name#408, c_salutation#407, c_preferred_cust_flag#410, ss_ticket_number#261L, cnt#7463L]
               +- *(18) SortMergeJoin [ss_customer_sk#255], [c_customer_sk#400], Inner
                  :- *(16) Sort [ss_customer_sk#255 ASC NULLS FIRST], false, 0
                  :  +- AQEShuffleRead coalesced
                  :     +- ShuffleQueryStage 8
                  :        +- Exchange hashpartitioning(ss_customer_sk#255, 200), ENSURE_REQUIREMENTS, [id=#54886]
                  :           +- *(15) Filter ((cnt#7463L >= 15) AND (cnt#7463L <= 20))
                  :              +- *(15) HashAggregate(keys=[ss_ticket_number#261L, ss_customer_sk#255], functions=[count(1)], output=[ss_ticket_number#261L, ss_customer_sk#255, cnt#7463L])
                  :                 +- AQEShuffleRead coalesced
                  :                    +- ShuffleQueryStage 7
                  :                       +- Exchange hashpartitioning(ss_ticket_number#261L, ss_customer_sk#255, 200), ENSURE_REQUIREMENTS, [id=#54809]
                  :                          +- *(14) HashAggregate(keys=[ss_ticket_number#261L, ss_customer_sk#255], functions=[partial_count(1)], output=[ss_ticket_number#261L, ss_customer_sk#255, count#7472L])
                  :                             +- *(14) Project [ss_customer_sk#255, ss_ticket_number#261L]
                  :                                +- *(14) SortMergeJoin [ss_hdemo_sk#257], [hd_demo_sk#88], Inner
                  :                                   :- *(12) Sort [ss_hdemo_sk#257 ASC NULLS FIRST], false, 0
                  :                                   :  +- AQEShuffleRead coalesced
                  :                                   :     +- ShuffleQueryStage 6
                  :                                   :        +- Exchange hashpartitioning(ss_hdemo_sk#257, 200), ENSURE_REQUIREMENTS, [id=#54683]
                  :                                   :           +- *(11) Project [ss_customer_sk#255, ss_hdemo_sk#257, ss_ticket_number#261L]
                  :                                   :              +- *(11) SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
                  :                                   :                 :- *(9) Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
                  :                                   :                 :  +- AQEShuffleRead coalesced
                  :                                   :                 :     +- ShuffleQueryStage 5
                  :                                   :                 :        +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#54532]
                  :                                   :                 :           +- *(8) Project [ss_customer_sk#255, ss_hdemo_sk#257, ss_store_sk#259, ss_ticket_number#261L]
                  :                                   :                 :              +- *(8) SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
                  :                                   :                 :                 :- *(6) Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                  :                                   :                 :                 :  +- AQEShuffleRead coalesced
                  :                                   :                 :                 :     +- ShuffleQueryStage 0
                  :                                   :                 :                 :        +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#53966]
                  :                                   :                 :                 :           +- *(1) Filter (((isnotnull(ss_sold_date_sk#252) AND isnotnull(ss_store_sk#259)) AND isnotnull(ss_hdemo_sk#257)) AND isnotnull(ss_customer_sk#255))
                  :                                   :                 :                 :              +- *(1) ColumnarToRow
                  :                                   :                 :                 :                 +- FileScan parquet [ss_sold_date_sk#252,ss_customer_sk#255,ss_hdemo_sk#257,ss_store_sk#259,ss_ticket_number#261L] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_store_sk#259), isnotnull(ss_hdemo_sk#257), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_hdemo_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_hdemo_sk:int,ss_store_sk:int,ss_ticket_number:bi...
                  :                                   :                 :                 +- *(7) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                  :                                   :                 :                    +- AQEShuffleRead coalesced
                  :                                   :                 :                       +- ShuffleQueryStage 1
                  :                                   :                 :                          +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#53985]
                  :                                   :                 :                             +- *(2) Project [d_date_sk#612]
                  :                                   :                 :                                +- *(2) Filter (((((d_dom#621 >= 1) AND (d_dom#621 <= 3)) OR ((d_dom#621 >= 25) AND (d_dom#621 <= 28))) AND d_year#618 IN (1999,2000,2001)) AND isnotnull(d_date_sk#612))
                  :                                   :                 :                                   +- *(2) ColumnarToRow
                  :                                   :                 :                                      +- FileScan parquet [d_date_sk#612,d_year#618,d_dom#621] Batched: true, DataFilters: [(((d_dom#621 >= 1) AND (d_dom#621 <= 3)) OR ((d_dom#621 >= 25) AND (d_dom#621 <= 28))), d_year#6..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [Or(And(GreaterThanOrEqual(d_dom,1),LessThanOrEqual(d_dom,3)),And(GreaterThanOrEqual(d_dom,25),Le..., ReadSchema: struct<d_date_sk:int,d_year:int,d_dom:int>
                  :                                   :                 +- *(10) Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
                  :                                   :                    +- AQEShuffleRead coalesced
                  :                                   :                       +- ShuffleQueryStage 2
                  :                                   :                          +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#54010]
                  :                                   :                             +- *(3) Project [s_store_sk#712]
                  :                                   :                                +- *(3) Filter (s_county#735 IN (Daviess County,Franklin Parish,Barrow County,Luce County,Fairfield County,Richland County,Ziebach County,Walker County) AND isnotnull(s_store_sk#712))
                  :                                   :                                   +- *(3) ColumnarToRow
                  :                                   :                                      +- FileScan parquet [s_store_sk#712,s_county#735] Batched: true, DataFilters: [s_county#735 IN (Daviess County,Franklin Parish,Barrow County,Luce County,Fairfield County,Richl..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [In(s_county, [Barrow County,Daviess County,Fairfield County,Franklin Parish,Luce County,Richland..., ReadSchema: struct<s_store_sk:int,s_county:string>
                  :                                   +- *(13) Sort [hd_demo_sk#88 ASC NULLS FIRST], false, 0
                  :                                      +- AQEShuffleRead coalesced
                  :                                         +- ShuffleQueryStage 3
                  :                                            +- Exchange hashpartitioning(hd_demo_sk#88, 200), ENSURE_REQUIREMENTS, [id=#54035]
                  :                                               +- *(4) Project [hd_demo_sk#88]
                  :                                                  +- *(4) Filter (((((isnotnull(hd_vehicle_count#92) AND isnotnull(hd_dep_count#91)) AND ((hd_buy_potential#90 = >10000) OR (hd_buy_potential#90 = 5001-10000))) AND (hd_vehicle_count#92 > 0)) AND ((cast(hd_dep_count#91 as double) / cast(hd_vehicle_count#92 as double)) > 1.2)) AND isnotnull(hd_demo_sk#88))
                  :                                                     +- *(4) ColumnarToRow
                  :                                                        +- FileScan parquet [hd_demo_sk#88,hd_buy_potential#90,hd_dep_count#91,hd_vehicle_count#92] Batched: true, DataFilters: [isnotnull(hd_vehicle_count#92), isnotnull(hd_dep_count#91), ((hd_buy_potential#90 = >10000) OR (..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/household_demographics.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(hd_vehicle_count), IsNotNull(hd_dep_count), Or(EqualTo(hd_buy_potential,>10000),EqualT..., ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string,hd_dep_count:int,hd_vehicle_count:int>
                  +- *(17) Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
                     +- AQEShuffleRead coalesced
                        +- ShuffleQueryStage 4
                           +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#54062]
                              +- *(5) Filter isnotnull(c_customer_sk#400)
                                 +- *(5) ColumnarToRow
                                    +- FileScan parquet [c_customer_sk#400,c_salutation#407,c_first_name#408,c_last_name#409,c_preferred_cust_flag#410] Batched: true, DataFilters: [isnotnull(c_customer_sk#400)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_salutation:string,c_first_name:string,c_last_name:string,c_preferred_c...
+- == Initial Plan ==
   Sort [c_last_name#409 ASC NULLS FIRST, c_first_name#408 ASC NULLS FIRST, c_salutation#407 ASC NULLS FIRST, c_preferred_cust_flag#410 DESC NULLS LAST, ss_ticket_number#261L ASC NULLS FIRST], true, 0
   +- Exchange rangepartitioning(c_last_name#409 ASC NULLS FIRST, c_first_name#408 ASC NULLS FIRST, c_salutation#407 ASC NULLS FIRST, c_preferred_cust_flag#410 DESC NULLS LAST, ss_ticket_number#261L ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#53878]
      +- Project [c_last_name#409, c_first_name#408, c_salutation#407, c_preferred_cust_flag#410, ss_ticket_number#261L, cnt#7463L]
         +- SortMergeJoin [ss_customer_sk#255], [c_customer_sk#400], Inner
            :- Sort [ss_customer_sk#255 ASC NULLS FIRST], false, 0
            :  +- Exchange hashpartitioning(ss_customer_sk#255, 200), ENSURE_REQUIREMENTS, [id=#53871]
            :     +- Filter ((cnt#7463L >= 15) AND (cnt#7463L <= 20))
            :        +- HashAggregate(keys=[ss_ticket_number#261L, ss_customer_sk#255], functions=[count(1)], output=[ss_ticket_number#261L, ss_customer_sk#255, cnt#7463L])
            :           +- Exchange hashpartitioning(ss_ticket_number#261L, ss_customer_sk#255, 200), ENSURE_REQUIREMENTS, [id=#53866]
            :              +- HashAggregate(keys=[ss_ticket_number#261L, ss_customer_sk#255], functions=[partial_count(1)], output=[ss_ticket_number#261L, ss_customer_sk#255, count#7472L])
            :                 +- Project [ss_customer_sk#255, ss_ticket_number#261L]
            :                    +- SortMergeJoin [ss_hdemo_sk#257], [hd_demo_sk#88], Inner
            :                       :- Sort [ss_hdemo_sk#257 ASC NULLS FIRST], false, 0
            :                       :  +- Exchange hashpartitioning(ss_hdemo_sk#257, 200), ENSURE_REQUIREMENTS, [id=#53858]
            :                       :     +- Project [ss_customer_sk#255, ss_hdemo_sk#257, ss_ticket_number#261L]
            :                       :        +- SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
            :                       :           :- Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
            :                       :           :  +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#53850]
            :                       :           :     +- Project [ss_customer_sk#255, ss_hdemo_sk#257, ss_store_sk#259, ss_ticket_number#261L]
            :                       :           :        +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
            :                       :           :           :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
            :                       :           :           :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#53842]
            :                       :           :           :     +- Filter (((isnotnull(ss_sold_date_sk#252) AND isnotnull(ss_store_sk#259)) AND isnotnull(ss_hdemo_sk#257)) AND isnotnull(ss_customer_sk#255))
            :                       :           :           :        +- FileScan parquet [ss_sold_date_sk#252,ss_customer_sk#255,ss_hdemo_sk#257,ss_store_sk#259,ss_ticket_number#261L] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_store_sk#259), isnotnull(ss_hdemo_sk#257), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_hdemo_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_hdemo_sk:int,ss_store_sk:int,ss_ticket_number:bi...
            :                       :           :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
            :                       :           :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#53843]
            :                       :           :                 +- Project [d_date_sk#612]
            :                       :           :                    +- Filter (((((d_dom#621 >= 1) AND (d_dom#621 <= 3)) OR ((d_dom#621 >= 25) AND (d_dom#621 <= 28))) AND d_year#618 IN (1999,2000,2001)) AND isnotnull(d_date_sk#612))
            :                       :           :                       +- FileScan parquet [d_date_sk#612,d_year#618,d_dom#621] Batched: true, DataFilters: [(((d_dom#621 >= 1) AND (d_dom#621 <= 3)) OR ((d_dom#621 >= 25) AND (d_dom#621 <= 28))), d_year#6..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [Or(And(GreaterThanOrEqual(d_dom,1),LessThanOrEqual(d_dom,3)),And(GreaterThanOrEqual(d_dom,25),Le..., ReadSchema: struct<d_date_sk:int,d_year:int,d_dom:int>
            :                       :           +- Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
            :                       :              +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#53851]
            :                       :                 +- Project [s_store_sk#712]
            :                       :                    +- Filter (s_county#735 IN (Daviess County,Franklin Parish,Barrow County,Luce County,Fairfield County,Richland County,Ziebach County,Walker County) AND isnotnull(s_store_sk#712))
            :                       :                       +- FileScan parquet [s_store_sk#712,s_county#735] Batched: true, DataFilters: [s_county#735 IN (Daviess County,Franklin Parish,Barrow County,Luce County,Fairfield County,Richl..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [In(s_county, [Barrow County,Daviess County,Fairfield County,Franklin Parish,Luce County,Richland..., ReadSchema: struct<s_store_sk:int,s_county:string>
            :                       +- Sort [hd_demo_sk#88 ASC NULLS FIRST], false, 0
            :                          +- Exchange hashpartitioning(hd_demo_sk#88, 200), ENSURE_REQUIREMENTS, [id=#53859]
            :                             +- Project [hd_demo_sk#88]
            :                                +- Filter (((((isnotnull(hd_vehicle_count#92) AND isnotnull(hd_dep_count#91)) AND ((hd_buy_potential#90 = >10000) OR (hd_buy_potential#90 = 5001-10000))) AND (hd_vehicle_count#92 > 0)) AND ((cast(hd_dep_count#91 as double) / cast(hd_vehicle_count#92 as double)) > 1.2)) AND isnotnull(hd_demo_sk#88))
            :                                   +- FileScan parquet [hd_demo_sk#88,hd_buy_potential#90,hd_dep_count#91,hd_vehicle_count#92] Batched: true, DataFilters: [isnotnull(hd_vehicle_count#92), isnotnull(hd_dep_count#91), ((hd_buy_potential#90 = >10000) OR (..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/household_demographics.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(hd_vehicle_count), IsNotNull(hd_dep_count), Or(EqualTo(hd_buy_potential,>10000),EqualT..., ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string,hd_dep_count:int,hd_vehicle_count:int>
            +- Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
               +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#53872]
                  +- Filter isnotnull(c_customer_sk#400)
                     +- FileScan parquet [c_customer_sk#400,c_salutation#407,c_first_name#408,c_last_name#409,c_preferred_cust_flag#410] Batched: true, DataFilters: [isnotnull(c_customer_sk#400)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_salutation:string,c_first_name:string,c_last_name:string,c_preferred_c...
