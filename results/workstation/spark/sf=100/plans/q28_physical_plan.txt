AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   CartesianProduct
   :- CartesianProduct
   :  :- CartesianProduct
   :  :  :- CartesianProduct
   :  :  :  :- CartesianProduct
   :  :  :  :  :- *(13) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#264)), count(ss_list_price#264), count(distinct ss_list_price#264)], output=[B1_LP#8319, B1_CNT#8320L, B1_CNTD#8321L])
   :  :  :  :  :  +- ShuffleQueryStage 6
   :  :  :  :  :     +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#110175]
   :  :  :  :  :        +- *(7) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#264)), merge_count(ss_list_price#264), partial_count(distinct ss_list_price#264)], output=[sum#8490, count#8491L, count#8493L, count#8496L])
   :  :  :  :  :           +- *(7) HashAggregate(keys=[ss_list_price#264], functions=[merge_avg(UnscaledValue(ss_list_price#264)), merge_count(ss_list_price#264)], output=[ss_list_price#264, sum#8490, count#8491L, count#8493L])
   :  :  :  :  :              +- AQEShuffleRead coalesced
   :  :  :  :  :                 +- ShuffleQueryStage 0
   :  :  :  :  :                    +- Exchange hashpartitioning(ss_list_price#264, 200), ENSURE_REQUIREMENTS, [id=#109904]
   :  :  :  :  :                       +- *(1) HashAggregate(keys=[ss_list_price#264], functions=[partial_avg(UnscaledValue(ss_list_price#264)), partial_count(ss_list_price#264)], output=[ss_list_price#264, sum#8490, count#8491L, count#8493L])
   :  :  :  :  :                          +- *(1) Project [ss_list_price#264]
   :  :  :  :  :                             +- *(1) Filter (((isnotnull(ss_quantity#262) AND (ss_quantity#262 >= 0)) AND (ss_quantity#262 <= 5)) AND ((((ss_list_price#264 >= 19.00) AND (ss_list_price#264 <= 29.00)) OR ((ss_coupon_amt#271 >= 11468.00) AND (ss_coupon_amt#271 <= 12468.00))) OR ((ss_wholesale_cost#263 >= 20.00) AND (ss_wholesale_cost#263 <= 40.00))))
   :  :  :  :  :                                +- *(1) ColumnarToRow
   :  :  :  :  :                                   +- FileScan parquet [ss_quantity#262,ss_wholesale_cost#263,ss_list_price#264,ss_coupon_amt#271] Batched: true, DataFilters: [isnotnull(ss_quantity#262), (ss_quantity#262 >= 0), (ss_quantity#262 <= 5), ((((ss_list_price#26..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,0), LessThanOrEqual(ss_quantity,5), Or(Or..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   :  :  :  :  +- *(14) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#8349)), count(ss_list_price#8349), count(distinct ss_list_price#8349)], output=[B2_LP#8322, B2_CNT#8323L, B2_CNTD#8324L])
   :  :  :  :     +- ShuffleQueryStage 7
   :  :  :  :        +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#110250]
   :  :  :  :           +- *(8) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#8349)), merge_count(ss_list_price#8349), partial_count(distinct ss_list_price#8349)], output=[sum#8500, count#8501L, count#8503L, count#8506L])
   :  :  :  :              +- *(8) HashAggregate(keys=[ss_list_price#8349], functions=[merge_avg(UnscaledValue(ss_list_price#8349)), merge_count(ss_list_price#8349)], output=[ss_list_price#8349, sum#8500, count#8501L, count#8503L])
   :  :  :  :                 +- AQEShuffleRead coalesced
   :  :  :  :                    +- ShuffleQueryStage 1
   :  :  :  :                       +- Exchange hashpartitioning(ss_list_price#8349, 200), ENSURE_REQUIREMENTS, [id=#109946]
   :  :  :  :                          +- *(2) HashAggregate(keys=[ss_list_price#8349], functions=[partial_avg(UnscaledValue(ss_list_price#8349)), partial_count(ss_list_price#8349)], output=[ss_list_price#8349, sum#8500, count#8501L, count#8503L])
   :  :  :  :                             +- *(2) Project [ss_list_price#8349]
   :  :  :  :                                +- *(2) Filter (((isnotnull(ss_quantity#8347) AND (ss_quantity#8347 >= 6)) AND (ss_quantity#8347 <= 10)) AND ((((ss_list_price#8349 >= 14.00) AND (ss_list_price#8349 <= 24.00)) OR ((ss_coupon_amt#8356 >= 92.00) AND (ss_coupon_amt#8356 <= 1092.00))) OR ((ss_wholesale_cost#8348 >= 13.00) AND (ss_wholesale_cost#8348 <= 33.00))))
   :  :  :  :                                   +- *(2) ColumnarToRow
   :  :  :  :                                      +- FileScan parquet [ss_quantity#8347,ss_wholesale_cost#8348,ss_list_price#8349,ss_coupon_amt#8356] Batched: true, DataFilters: [isnotnull(ss_quantity#8347), (ss_quantity#8347 >= 6), (ss_quantity#8347 <= 10), ((((ss_list_pric..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,6), LessThanOrEqual(ss_quantity,10), Or(O..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   :  :  :  +- *(15) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#8372)), count(ss_list_price#8372), count(distinct ss_list_price#8372)], output=[B3_LP#8325, B3_CNT#8326L, B3_CNTD#8327L])
   :  :  :     +- ShuffleQueryStage 8
   :  :  :        +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#110300]
   :  :  :           +- *(9) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#8372)), merge_count(ss_list_price#8372), partial_count(distinct ss_list_price#8372)], output=[sum#8510, count#8511L, count#8513L, count#8516L])
   :  :  :              +- *(9) HashAggregate(keys=[ss_list_price#8372], functions=[merge_avg(UnscaledValue(ss_list_price#8372)), merge_count(ss_list_price#8372)], output=[ss_list_price#8372, sum#8510, count#8511L, count#8513L])
   :  :  :                 +- AQEShuffleRead coalesced
   :  :  :                    +- ShuffleQueryStage 2
   :  :  :                       +- Exchange hashpartitioning(ss_list_price#8372, 200), ENSURE_REQUIREMENTS, [id=#109989]
   :  :  :                          +- *(3) HashAggregate(keys=[ss_list_price#8372], functions=[partial_avg(UnscaledValue(ss_list_price#8372)), partial_count(ss_list_price#8372)], output=[ss_list_price#8372, sum#8510, count#8511L, count#8513L])
   :  :  :                             +- *(3) Project [ss_list_price#8372]
   :  :  :                                +- *(3) Filter (((isnotnull(ss_quantity#8370) AND (ss_quantity#8370 >= 11)) AND (ss_quantity#8370 <= 15)) AND ((((ss_list_price#8372 >= 124.00) AND (ss_list_price#8372 <= 134.00)) OR ((ss_coupon_amt#8379 >= 4023.00) AND (ss_coupon_amt#8379 <= 5023.00))) OR ((ss_wholesale_cost#8371 >= 50.00) AND (ss_wholesale_cost#8371 <= 70.00))))
   :  :  :                                   +- *(3) ColumnarToRow
   :  :  :                                      +- FileScan parquet [ss_quantity#8370,ss_wholesale_cost#8371,ss_list_price#8372,ss_coupon_amt#8379] Batched: true, DataFilters: [isnotnull(ss_quantity#8370), (ss_quantity#8370 >= 11), (ss_quantity#8370 <= 15), ((((ss_list_pri..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,11), LessThanOrEqual(ss_quantity,15), Or(..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   :  :  +- *(16) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#8395)), count(ss_list_price#8395), count(distinct ss_list_price#8395)], output=[B4_LP#8328, B4_CNT#8329L, B4_CNTD#8330L])
   :  :     +- ShuffleQueryStage 9
   :  :        +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#110349]
   :  :           +- *(10) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#8395)), merge_count(ss_list_price#8395), partial_count(distinct ss_list_price#8395)], output=[sum#8520, count#8521L, count#8523L, count#8526L])
   :  :              +- *(10) HashAggregate(keys=[ss_list_price#8395], functions=[merge_avg(UnscaledValue(ss_list_price#8395)), merge_count(ss_list_price#8395)], output=[ss_list_price#8395, sum#8520, count#8521L, count#8523L])
   :  :                 +- AQEShuffleRead coalesced
   :  :                    +- ShuffleQueryStage 3
   :  :                       +- Exchange hashpartitioning(ss_list_price#8395, 200), ENSURE_REQUIREMENTS, [id=#110032]
   :  :                          +- *(4) HashAggregate(keys=[ss_list_price#8395], functions=[partial_avg(UnscaledValue(ss_list_price#8395)), partial_count(ss_list_price#8395)], output=[ss_list_price#8395, sum#8520, count#8521L, count#8523L])
   :  :                             +- *(4) Project [ss_list_price#8395]
   :  :                                +- *(4) Filter (((isnotnull(ss_quantity#8393) AND (ss_quantity#8393 >= 16)) AND (ss_quantity#8393 <= 20)) AND ((((ss_list_price#8395 >= 74.00) AND (ss_list_price#8395 <= 84.00)) OR ((ss_coupon_amt#8402 >= 3534.00) AND (ss_coupon_amt#8402 <= 4534.00))) OR ((ss_wholesale_cost#8394 >= 11.00) AND (ss_wholesale_cost#8394 <= 31.00))))
   :  :                                   +- *(4) ColumnarToRow
   :  :                                      +- FileScan parquet [ss_quantity#8393,ss_wholesale_cost#8394,ss_list_price#8395,ss_coupon_amt#8402] Batched: true, DataFilters: [isnotnull(ss_quantity#8393), (ss_quantity#8393 >= 16), (ss_quantity#8393 <= 20), ((((ss_list_pri..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,16), LessThanOrEqual(ss_quantity,20), Or(..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   :  +- *(17) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#8418)), count(ss_list_price#8418), count(distinct ss_list_price#8418)], output=[B5_LP#8331, B5_CNT#8332L, B5_CNTD#8333L])
   :     +- ShuffleQueryStage 10
   :        +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#110397]
   :           +- *(11) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#8418)), merge_count(ss_list_price#8418), partial_count(distinct ss_list_price#8418)], output=[sum#8530, count#8531L, count#8533L, count#8536L])
   :              +- *(11) HashAggregate(keys=[ss_list_price#8418], functions=[merge_avg(UnscaledValue(ss_list_price#8418)), merge_count(ss_list_price#8418)], output=[ss_list_price#8418, sum#8530, count#8531L, count#8533L])
   :                 +- AQEShuffleRead coalesced
   :                    +- ShuffleQueryStage 4
   :                       +- Exchange hashpartitioning(ss_list_price#8418, 200), ENSURE_REQUIREMENTS, [id=#110075]
   :                          +- *(5) HashAggregate(keys=[ss_list_price#8418], functions=[partial_avg(UnscaledValue(ss_list_price#8418)), partial_count(ss_list_price#8418)], output=[ss_list_price#8418, sum#8530, count#8531L, count#8533L])
   :                             +- *(5) Project [ss_list_price#8418]
   :                                +- *(5) Filter (((isnotnull(ss_quantity#8416) AND (ss_quantity#8416 >= 21)) AND (ss_quantity#8416 <= 25)) AND ((((ss_list_price#8418 >= 173.00) AND (ss_list_price#8418 <= 183.00)) OR ((ss_coupon_amt#8425 >= 6017.00) AND (ss_coupon_amt#8425 <= 7017.00))) OR ((ss_wholesale_cost#8417 >= 45.00) AND (ss_wholesale_cost#8417 <= 65.00))))
   :                                   +- *(5) ColumnarToRow
   :                                      +- FileScan parquet [ss_quantity#8416,ss_wholesale_cost#8417,ss_list_price#8418,ss_coupon_amt#8425] Batched: true, DataFilters: [isnotnull(ss_quantity#8416), (ss_quantity#8416 >= 21), (ss_quantity#8416 <= 25), ((((ss_list_pri..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,21), LessThanOrEqual(ss_quantity,25), Or(..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   +- *(18) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#8441)), count(ss_list_price#8441), count(distinct ss_list_price#8441)], output=[B6_LP#8334, B6_CNT#8335L, B6_CNTD#8336L])
      +- ShuffleQueryStage 11
         +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#110470]
            +- *(12) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#8441)), merge_count(ss_list_price#8441), partial_count(distinct ss_list_price#8441)], output=[sum#8540, count#8541L, count#8543L, count#8546L])
               +- *(12) HashAggregate(keys=[ss_list_price#8441], functions=[merge_avg(UnscaledValue(ss_list_price#8441)), merge_count(ss_list_price#8441)], output=[ss_list_price#8441, sum#8540, count#8541L, count#8543L])
                  +- AQEShuffleRead coalesced
                     +- ShuffleQueryStage 5
                        +- Exchange hashpartitioning(ss_list_price#8441, 200), ENSURE_REQUIREMENTS, [id=#110118]
                           +- *(6) HashAggregate(keys=[ss_list_price#8441], functions=[partial_avg(UnscaledValue(ss_list_price#8441)), partial_count(ss_list_price#8441)], output=[ss_list_price#8441, sum#8540, count#8541L, count#8543L])
                              +- *(6) Project [ss_list_price#8441]
                                 +- *(6) Filter (((isnotnull(ss_quantity#8439) AND (ss_quantity#8439 >= 26)) AND (ss_quantity#8439 <= 30)) AND ((((ss_list_price#8441 >= 2.00) AND (ss_list_price#8441 <= 12.00)) OR ((ss_coupon_amt#8448 >= 16961.00) AND (ss_coupon_amt#8448 <= 17961.00))) OR ((ss_wholesale_cost#8440 >= 18.00) AND (ss_wholesale_cost#8440 <= 38.00))))
                                    +- *(6) ColumnarToRow
                                       +- FileScan parquet [ss_quantity#8439,ss_wholesale_cost#8440,ss_list_price#8441,ss_coupon_amt#8448] Batched: true, DataFilters: [isnotnull(ss_quantity#8439), (ss_quantity#8439 >= 26), (ss_quantity#8439 <= 30), ((((ss_list_pri..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,26), LessThanOrEqual(ss_quantity,30), Or(..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
+- == Initial Plan ==
   CartesianProduct
   :- CartesianProduct
   :  :- CartesianProduct
   :  :  :- CartesianProduct
   :  :  :  :- CartesianProduct
   :  :  :  :  :- HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#264)), count(ss_list_price#264), count(distinct ss_list_price#264)], output=[B1_LP#8319, B1_CNT#8320L, B1_CNTD#8321L])
   :  :  :  :  :  +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#109842]
   :  :  :  :  :     +- HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#264)), merge_count(ss_list_price#264), partial_count(distinct ss_list_price#264)], output=[sum#8490, count#8491L, count#8493L, count#8496L])
   :  :  :  :  :        +- HashAggregate(keys=[ss_list_price#264], functions=[merge_avg(UnscaledValue(ss_list_price#264)), merge_count(ss_list_price#264)], output=[ss_list_price#264, sum#8490, count#8491L, count#8493L])
   :  :  :  :  :           +- Exchange hashpartitioning(ss_list_price#264, 200), ENSURE_REQUIREMENTS, [id=#109838]
   :  :  :  :  :              +- HashAggregate(keys=[ss_list_price#264], functions=[partial_avg(UnscaledValue(ss_list_price#264)), partial_count(ss_list_price#264)], output=[ss_list_price#264, sum#8490, count#8491L, count#8493L])
   :  :  :  :  :                 +- Project [ss_list_price#264]
   :  :  :  :  :                    +- Filter (((isnotnull(ss_quantity#262) AND (ss_quantity#262 >= 0)) AND (ss_quantity#262 <= 5)) AND ((((ss_list_price#264 >= 19.00) AND (ss_list_price#264 <= 29.00)) OR ((ss_coupon_amt#271 >= 11468.00) AND (ss_coupon_amt#271 <= 12468.00))) OR ((ss_wholesale_cost#263 >= 20.00) AND (ss_wholesale_cost#263 <= 40.00))))
   :  :  :  :  :                       +- FileScan parquet [ss_quantity#262,ss_wholesale_cost#263,ss_list_price#264,ss_coupon_amt#271] Batched: true, DataFilters: [isnotnull(ss_quantity#262), (ss_quantity#262 >= 0), (ss_quantity#262 <= 5), ((((ss_list_price#26..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,0), LessThanOrEqual(ss_quantity,5), Or(Or..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   :  :  :  :  +- HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#8349)), count(ss_list_price#8349), count(distinct ss_list_price#8349)], output=[B2_LP#8322, B2_CNT#8323L, B2_CNTD#8324L])
   :  :  :  :     +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#109848]
   :  :  :  :        +- HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#8349)), merge_count(ss_list_price#8349), partial_count(distinct ss_list_price#8349)], output=[sum#8500, count#8501L, count#8503L, count#8506L])
   :  :  :  :           +- HashAggregate(keys=[ss_list_price#8349], functions=[merge_avg(UnscaledValue(ss_list_price#8349)), merge_count(ss_list_price#8349)], output=[ss_list_price#8349, sum#8500, count#8501L, count#8503L])
   :  :  :  :              +- Exchange hashpartitioning(ss_list_price#8349, 200), ENSURE_REQUIREMENTS, [id=#109844]
   :  :  :  :                 +- HashAggregate(keys=[ss_list_price#8349], functions=[partial_avg(UnscaledValue(ss_list_price#8349)), partial_count(ss_list_price#8349)], output=[ss_list_price#8349, sum#8500, count#8501L, count#8503L])
   :  :  :  :                    +- Project [ss_list_price#8349]
   :  :  :  :                       +- Filter (((isnotnull(ss_quantity#8347) AND (ss_quantity#8347 >= 6)) AND (ss_quantity#8347 <= 10)) AND ((((ss_list_price#8349 >= 14.00) AND (ss_list_price#8349 <= 24.00)) OR ((ss_coupon_amt#8356 >= 92.00) AND (ss_coupon_amt#8356 <= 1092.00))) OR ((ss_wholesale_cost#8348 >= 13.00) AND (ss_wholesale_cost#8348 <= 33.00))))
   :  :  :  :                          +- FileScan parquet [ss_quantity#8347,ss_wholesale_cost#8348,ss_list_price#8349,ss_coupon_amt#8356] Batched: true, DataFilters: [isnotnull(ss_quantity#8347), (ss_quantity#8347 >= 6), (ss_quantity#8347 <= 10), ((((ss_list_pric..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,6), LessThanOrEqual(ss_quantity,10), Or(O..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   :  :  :  +- HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#8372)), count(ss_list_price#8372), count(distinct ss_list_price#8372)], output=[B3_LP#8325, B3_CNT#8326L, B3_CNTD#8327L])
   :  :  :     +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#109855]
   :  :  :        +- HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#8372)), merge_count(ss_list_price#8372), partial_count(distinct ss_list_price#8372)], output=[sum#8510, count#8511L, count#8513L, count#8516L])
   :  :  :           +- HashAggregate(keys=[ss_list_price#8372], functions=[merge_avg(UnscaledValue(ss_list_price#8372)), merge_count(ss_list_price#8372)], output=[ss_list_price#8372, sum#8510, count#8511L, count#8513L])
   :  :  :              +- Exchange hashpartitioning(ss_list_price#8372, 200), ENSURE_REQUIREMENTS, [id=#109851]
   :  :  :                 +- HashAggregate(keys=[ss_list_price#8372], functions=[partial_avg(UnscaledValue(ss_list_price#8372)), partial_count(ss_list_price#8372)], output=[ss_list_price#8372, sum#8510, count#8511L, count#8513L])
   :  :  :                    +- Project [ss_list_price#8372]
   :  :  :                       +- Filter (((isnotnull(ss_quantity#8370) AND (ss_quantity#8370 >= 11)) AND (ss_quantity#8370 <= 15)) AND ((((ss_list_price#8372 >= 124.00) AND (ss_list_price#8372 <= 134.00)) OR ((ss_coupon_amt#8379 >= 4023.00) AND (ss_coupon_amt#8379 <= 5023.00))) OR ((ss_wholesale_cost#8371 >= 50.00) AND (ss_wholesale_cost#8371 <= 70.00))))
   :  :  :                          +- FileScan parquet [ss_quantity#8370,ss_wholesale_cost#8371,ss_list_price#8372,ss_coupon_amt#8379] Batched: true, DataFilters: [isnotnull(ss_quantity#8370), (ss_quantity#8370 >= 11), (ss_quantity#8370 <= 15), ((((ss_list_pri..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,11), LessThanOrEqual(ss_quantity,15), Or(..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   :  :  +- HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#8395)), count(ss_list_price#8395), count(distinct ss_list_price#8395)], output=[B4_LP#8328, B4_CNT#8329L, B4_CNTD#8330L])
   :  :     +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#109862]
   :  :        +- HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#8395)), merge_count(ss_list_price#8395), partial_count(distinct ss_list_price#8395)], output=[sum#8520, count#8521L, count#8523L, count#8526L])
   :  :           +- HashAggregate(keys=[ss_list_price#8395], functions=[merge_avg(UnscaledValue(ss_list_price#8395)), merge_count(ss_list_price#8395)], output=[ss_list_price#8395, sum#8520, count#8521L, count#8523L])
   :  :              +- Exchange hashpartitioning(ss_list_price#8395, 200), ENSURE_REQUIREMENTS, [id=#109858]
   :  :                 +- HashAggregate(keys=[ss_list_price#8395], functions=[partial_avg(UnscaledValue(ss_list_price#8395)), partial_count(ss_list_price#8395)], output=[ss_list_price#8395, sum#8520, count#8521L, count#8523L])
   :  :                    +- Project [ss_list_price#8395]
   :  :                       +- Filter (((isnotnull(ss_quantity#8393) AND (ss_quantity#8393 >= 16)) AND (ss_quantity#8393 <= 20)) AND ((((ss_list_price#8395 >= 74.00) AND (ss_list_price#8395 <= 84.00)) OR ((ss_coupon_amt#8402 >= 3534.00) AND (ss_coupon_amt#8402 <= 4534.00))) OR ((ss_wholesale_cost#8394 >= 11.00) AND (ss_wholesale_cost#8394 <= 31.00))))
   :  :                          +- FileScan parquet [ss_quantity#8393,ss_wholesale_cost#8394,ss_list_price#8395,ss_coupon_amt#8402] Batched: true, DataFilters: [isnotnull(ss_quantity#8393), (ss_quantity#8393 >= 16), (ss_quantity#8393 <= 20), ((((ss_list_pri..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,16), LessThanOrEqual(ss_quantity,20), Or(..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   :  +- HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#8418)), count(ss_list_price#8418), count(distinct ss_list_price#8418)], output=[B5_LP#8331, B5_CNT#8332L, B5_CNTD#8333L])
   :     +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#109869]
   :        +- HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#8418)), merge_count(ss_list_price#8418), partial_count(distinct ss_list_price#8418)], output=[sum#8530, count#8531L, count#8533L, count#8536L])
   :           +- HashAggregate(keys=[ss_list_price#8418], functions=[merge_avg(UnscaledValue(ss_list_price#8418)), merge_count(ss_list_price#8418)], output=[ss_list_price#8418, sum#8530, count#8531L, count#8533L])
   :              +- Exchange hashpartitioning(ss_list_price#8418, 200), ENSURE_REQUIREMENTS, [id=#109865]
   :                 +- HashAggregate(keys=[ss_list_price#8418], functions=[partial_avg(UnscaledValue(ss_list_price#8418)), partial_count(ss_list_price#8418)], output=[ss_list_price#8418, sum#8530, count#8531L, count#8533L])
   :                    +- Project [ss_list_price#8418]
   :                       +- Filter (((isnotnull(ss_quantity#8416) AND (ss_quantity#8416 >= 21)) AND (ss_quantity#8416 <= 25)) AND ((((ss_list_price#8418 >= 173.00) AND (ss_list_price#8418 <= 183.00)) OR ((ss_coupon_amt#8425 >= 6017.00) AND (ss_coupon_amt#8425 <= 7017.00))) OR ((ss_wholesale_cost#8417 >= 45.00) AND (ss_wholesale_cost#8417 <= 65.00))))
   :                          +- FileScan parquet [ss_quantity#8416,ss_wholesale_cost#8417,ss_list_price#8418,ss_coupon_amt#8425] Batched: true, DataFilters: [isnotnull(ss_quantity#8416), (ss_quantity#8416 >= 21), (ss_quantity#8416 <= 25), ((((ss_list_pri..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,21), LessThanOrEqual(ss_quantity,25), Or(..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   +- HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#8441)), count(ss_list_price#8441), count(distinct ss_list_price#8441)], output=[B6_LP#8334, B6_CNT#8335L, B6_CNTD#8336L])
      +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#109876]
         +- HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#8441)), merge_count(ss_list_price#8441), partial_count(distinct ss_list_price#8441)], output=[sum#8540, count#8541L, count#8543L, count#8546L])
            +- HashAggregate(keys=[ss_list_price#8441], functions=[merge_avg(UnscaledValue(ss_list_price#8441)), merge_count(ss_list_price#8441)], output=[ss_list_price#8441, sum#8540, count#8541L, count#8543L])
               +- Exchange hashpartitioning(ss_list_price#8441, 200), ENSURE_REQUIREMENTS, [id=#109872]
                  +- HashAggregate(keys=[ss_list_price#8441], functions=[partial_avg(UnscaledValue(ss_list_price#8441)), partial_count(ss_list_price#8441)], output=[ss_list_price#8441, sum#8540, count#8541L, count#8543L])
                     +- Project [ss_list_price#8441]
                        +- Filter (((isnotnull(ss_quantity#8439) AND (ss_quantity#8439 >= 26)) AND (ss_quantity#8439 <= 30)) AND ((((ss_list_price#8441 >= 2.00) AND (ss_list_price#8441 <= 12.00)) OR ((ss_coupon_amt#8448 >= 16961.00) AND (ss_coupon_amt#8448 <= 17961.00))) OR ((ss_wholesale_cost#8440 >= 18.00) AND (ss_wholesale_cost#8440 <= 38.00))))
                           +- FileScan parquet [ss_quantity#8439,ss_wholesale_cost#8440,ss_list_price#8441,ss_coupon_amt#8448] Batched: true, DataFilters: [isnotnull(ss_quantity#8439), (ss_quantity#8439 >= 26), (ss_quantity#8439 <= 30), ((((ss_list_pri..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,26), LessThanOrEqual(ss_quantity,30), Or(..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
