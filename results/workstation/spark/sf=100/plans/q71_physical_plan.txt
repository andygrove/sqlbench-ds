AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(25) Sort [ext_price#17875 DESC NULLS LAST, brand_id#17873 ASC NULLS FIRST], true, 0
   +- AQEShuffleRead coalesced
      +- ShuffleQueryStage 13
         +- Exchange rangepartitioning(ext_price#17875 DESC NULLS LAST, brand_id#17873 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#220280]
            +- *(24) HashAggregate(keys=[i_brand#676, i_brand_id#675, t_hour#459, t_minute#460], functions=[sum(UnscaledValue(ext_price#17861))], output=[brand_id#17873, brand#17874, t_hour#459, t_minute#460, ext_price#17875])
               +- AQEShuffleRead coalesced
                  +- ShuffleQueryStage 12
                     +- Exchange hashpartitioning(i_brand#676, i_brand_id#675, t_hour#459, t_minute#460, 200), ENSURE_REQUIREMENTS, [id=#220238]
                        +- *(23) HashAggregate(keys=[i_brand#676, i_brand_id#675, t_hour#459, t_minute#460], functions=[partial_sum(UnscaledValue(ext_price#17861))], output=[i_brand#676, i_brand_id#675, t_hour#459, t_minute#460, sum#17939L])
                           +- *(23) Project [i_brand_id#675, i_brand#676, ext_price#17861, t_hour#459, t_minute#460]
                              +- *(23) SortMergeJoin [time_sk#17864], [t_time_sk#456], Inner
                                 :- *(21) Sort [time_sk#17864 ASC NULLS FIRST], false, 0
                                 :  +- AQEShuffleRead coalesced
                                 :     +- ShuffleQueryStage 11
                                 :        +- Exchange hashpartitioning(time_sk#17864, 200), ENSURE_REQUIREMENTS, [id=#220146]
                                 :           +- *(20) Project [i_brand_id#675, i_brand#676, ext_price#17861, time_sk#17864]
                                 :              +- *(20) SortMergeJoin [i_item_sk#668], [sold_item_sk#17863], Inner
                                 :                 :- *(18) Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                                 :                 :  +- AQEShuffleRead coalesced
                                 :                 :     +- ShuffleQueryStage 0
                                 :                 :        +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#219158]
                                 :                 :           +- *(1) Project [i_item_sk#668, i_brand_id#675, i_brand#676]
                                 :                 :              +- *(1) Filter ((isnotnull(i_manager_id#688) AND (i_manager_id#688 = 1)) AND isnotnull(i_item_sk#668))
                                 :                 :                 +- *(1) ColumnarToRow
                                 :                 :                    +- FileScan parquet [i_item_sk#668,i_brand_id#675,i_brand#676,i_manager_id#688] Batched: true, DataFilters: [isnotnull(i_manager_id#688), (i_manager_id#688 = 1), isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_manager_id), EqualTo(i_manager_id,1), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manager_id:int>
                                 :                 +- *(19) Sort [sold_item_sk#17863 ASC NULLS FIRST], false, 0
                                 :                    +- AQEShuffleRead coalesced
                                 :                       +- ShuffleQueryStage 10
                                 :                          +- Exchange hashpartitioning(sold_item_sk#17863, 200), ENSURE_REQUIREMENTS, [id=#219994]
                                 :                             +- Union
                                 :                                :- *(11) Project [ws_ext_sales_price#499 AS ext_price#17861, ws_item_sk#479 AS sold_item_sk#17863, ws_sold_time_sk#477 AS time_sk#17864]
                                 :                                :  +- *(11) SortMergeJoin [ws_sold_date_sk#476], [d_date_sk#612], Inner
                                 :                                :     :- *(9) Sort [ws_sold_date_sk#476 ASC NULLS FIRST], false, 0
                                 :                                :     :  +- AQEShuffleRead coalesced
                                 :                                :     :     +- ShuffleQueryStage 1
                                 :                                :     :        +- Exchange hashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#219177]
                                 :                                :     :           +- *(2) Filter ((isnotnull(ws_sold_date_sk#476) AND isnotnull(ws_item_sk#479)) AND isnotnull(ws_sold_time_sk#477))
                                 :                                :     :              +- *(2) ColumnarToRow
                                 :                                :     :                 +- FileScan parquet [ws_sold_date_sk#476,ws_sold_time_sk#477,ws_item_sk#479,ws_ext_sales_price#499] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#476), isnotnull(ws_item_sk#479), isnotnull(ws_sold_time_sk#477)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_item_sk), IsNotNull(ws_sold_time_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_sold_time_sk:int,ws_item_sk:int,ws_ext_sales_price:decimal(7,2)>
                                 :                                :     +- *(10) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                                 :                                :        +- AQEShuffleRead coalesced
                                 :                                :           +- ShuffleQueryStage 2
                                 :                                :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#219196]
                                 :                                :                 +- *(3) Project [d_date_sk#612]
                                 :                                :                    +- *(3) Filter ((((isnotnull(d_moy#620) AND isnotnull(d_year#618)) AND (d_moy#620 = 11)) AND (d_year#618 = 2001)) AND isnotnull(d_date_sk#612))
                                 :                                :                       +- *(3) ColumnarToRow
                                 :                                :                          +- FileScan parquet [d_date_sk#612,d_year#618,d_moy#620] Batched: true, DataFilters: [isnotnull(d_moy#620), isnotnull(d_year#618), (d_moy#620 = 11), (d_year#618 = 2001), isnotnull(d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,11), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                                 :                                :- *(14) Project [cs_ext_sales_price#567 AS ext_price#17865, cs_item_sk#559 AS sold_item_sk#17867, cs_sold_time_sk#545 AS time_sk#17868]
                                 :                                :  +- *(14) SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#17876], Inner
                                 :                                :     :- *(12) Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
                                 :                                :     :  +- AQEShuffleRead coalesced
                                 :                                :     :     +- ShuffleQueryStage 3
                                 :                                :     :        +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#219217]
                                 :                                :     :           +- *(4) Filter ((isnotnull(cs_sold_date_sk#544) AND isnotnull(cs_item_sk#559)) AND isnotnull(cs_sold_time_sk#545))
                                 :                                :     :              +- *(4) ColumnarToRow
                                 :                                :     :                 +- FileScan parquet [cs_sold_date_sk#544,cs_sold_time_sk#545,cs_item_sk#559,cs_ext_sales_price#567] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#544), isnotnull(cs_item_sk#559), isnotnull(cs_sold_time_sk#545)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_item_sk), IsNotNull(cs_sold_time_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_sold_time_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
                                 :                                :     +- *(13) Sort [d_date_sk#17876 ASC NULLS FIRST], false, 0
                                 :                                :        +- AQEShuffleRead coalesced
                                 :                                :           +- ShuffleQueryStage 5
                                 :                                :              +- ReusedExchange [d_date_sk#17876], Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#219196]
                                 :                                +- *(17) Project [ss_ext_sales_price#267 AS ext_price#17869, ss_item_sk#254 AS sold_item_sk#17871, ss_sold_time_sk#253 AS time_sk#17872]
                                 :                                   +- *(17) SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#17904], Inner
                                 :                                      :- *(15) Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                                 :                                      :  +- AQEShuffleRead coalesced
                                 :                                      :     +- ShuffleQueryStage 6
                                 :                                      :        +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#219259]
                                 :                                      :           +- *(6) Filter ((isnotnull(ss_sold_date_sk#252) AND isnotnull(ss_item_sk#254)) AND isnotnull(ss_sold_time_sk#253))
                                 :                                      :              +- *(6) ColumnarToRow
                                 :                                      :                 +- FileScan parquet [ss_sold_date_sk#252,ss_sold_time_sk#253,ss_item_sk#254,ss_ext_sales_price#267] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_item_sk#254), isnotnull(ss_sold_time_sk#253)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk), IsNotNull(ss_sold_time_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_sold_time_sk:int,ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
                                 :                                      +- *(16) Sort [d_date_sk#17904 ASC NULLS FIRST], false, 0
                                 :                                         +- AQEShuffleRead coalesced
                                 :                                            +- ShuffleQueryStage 8
                                 :                                               +- ReusedExchange [d_date_sk#17904], Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#219196]
                                 +- *(22) Sort [t_time_sk#456 ASC NULLS FIRST], false, 0
                                    +- AQEShuffleRead coalesced
                                       +- ShuffleQueryStage 9
                                          +- Exchange hashpartitioning(t_time_sk#456, 200), ENSURE_REQUIREMENTS, [id=#219310]
                                             +- *(8) Project [t_time_sk#456, t_hour#459, t_minute#460]
                                                +- *(8) Filter (((t_meal_time#465 = breakfast) OR (t_meal_time#465 = dinner)) AND isnotnull(t_time_sk#456))
                                                   +- *(8) ColumnarToRow
                                                      +- FileScan parquet [t_time_sk#456,t_hour#459,t_minute#460,t_meal_time#465] Batched: true, DataFilters: [((t_meal_time#465 = breakfast) OR (t_meal_time#465 = dinner)), isnotnull(t_time_sk#456)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/time_dim.parquet], PartitionFilters: [], PushedFilters: [Or(EqualTo(t_meal_time,breakfast),EqualTo(t_meal_time,dinner)), IsNotNull(t_time_sk)], ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int,t_meal_time:string>
+- == Initial Plan ==
   Sort [ext_price#17875 DESC NULLS LAST, brand_id#17873 ASC NULLS FIRST], true, 0
   +- Exchange rangepartitioning(ext_price#17875 DESC NULLS LAST, brand_id#17873 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#219044]
      +- HashAggregate(keys=[i_brand#676, i_brand_id#675, t_hour#459, t_minute#460], functions=[sum(UnscaledValue(ext_price#17861))], output=[brand_id#17873, brand#17874, t_hour#459, t_minute#460, ext_price#17875])
         +- Exchange hashpartitioning(i_brand#676, i_brand_id#675, t_hour#459, t_minute#460, 200), ENSURE_REQUIREMENTS, [id=#219041]
            +- HashAggregate(keys=[i_brand#676, i_brand_id#675, t_hour#459, t_minute#460], functions=[partial_sum(UnscaledValue(ext_price#17861))], output=[i_brand#676, i_brand_id#675, t_hour#459, t_minute#460, sum#17939L])
               +- Project [i_brand_id#675, i_brand#676, ext_price#17861, t_hour#459, t_minute#460]
                  +- SortMergeJoin [time_sk#17864], [t_time_sk#456], Inner
                     :- Sort [time_sk#17864 ASC NULLS FIRST], false, 0
                     :  +- Exchange hashpartitioning(time_sk#17864, 200), ENSURE_REQUIREMENTS, [id=#219033]
                     :     +- Project [i_brand_id#675, i_brand#676, ext_price#17861, time_sk#17864]
                     :        +- SortMergeJoin [i_item_sk#668], [sold_item_sk#17863], Inner
                     :           :- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                     :           :  +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#219025]
                     :           :     +- Project [i_item_sk#668, i_brand_id#675, i_brand#676]
                     :           :        +- Filter ((isnotnull(i_manager_id#688) AND (i_manager_id#688 = 1)) AND isnotnull(i_item_sk#668))
                     :           :           +- FileScan parquet [i_item_sk#668,i_brand_id#675,i_brand#676,i_manager_id#688] Batched: true, DataFilters: [isnotnull(i_manager_id#688), (i_manager_id#688 = 1), isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_manager_id), EqualTo(i_manager_id,1), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manager_id:int>
                     :           +- Sort [sold_item_sk#17863 ASC NULLS FIRST], false, 0
                     :              +- Exchange hashpartitioning(sold_item_sk#17863, 200), ENSURE_REQUIREMENTS, [id=#219026]
                     :                 +- Union
                     :                    :- Project [ws_ext_sales_price#499 AS ext_price#17861, ws_item_sk#479 AS sold_item_sk#17863, ws_sold_time_sk#477 AS time_sk#17864]
                     :                    :  +- SortMergeJoin [ws_sold_date_sk#476], [d_date_sk#612], Inner
                     :                    :     :- Sort [ws_sold_date_sk#476 ASC NULLS FIRST], false, 0
                     :                    :     :  +- Exchange hashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#219002]
                     :                    :     :     +- Filter ((isnotnull(ws_sold_date_sk#476) AND isnotnull(ws_item_sk#479)) AND isnotnull(ws_sold_time_sk#477))
                     :                    :     :        +- FileScan parquet [ws_sold_date_sk#476,ws_sold_time_sk#477,ws_item_sk#479,ws_ext_sales_price#499] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#476), isnotnull(ws_item_sk#479), isnotnull(ws_sold_time_sk#477)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_item_sk), IsNotNull(ws_sold_time_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_sold_time_sk:int,ws_item_sk:int,ws_ext_sales_price:decimal(7,2)>
                     :                    :     +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                     :                    :        +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#219003]
                     :                    :           +- Project [d_date_sk#612]
                     :                    :              +- Filter ((((isnotnull(d_moy#620) AND isnotnull(d_year#618)) AND (d_moy#620 = 11)) AND (d_year#618 = 2001)) AND isnotnull(d_date_sk#612))
                     :                    :                 +- FileScan parquet [d_date_sk#612,d_year#618,d_moy#620] Batched: true, DataFilters: [isnotnull(d_moy#620), isnotnull(d_year#618), (d_moy#620 = 11), (d_year#618 = 2001), isnotnull(d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,11), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                     :                    :- Project [cs_ext_sales_price#567 AS ext_price#17865, cs_item_sk#559 AS sold_item_sk#17867, cs_sold_time_sk#545 AS time_sk#17868]
                     :                    :  +- SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#17876], Inner
                     :                    :     :- Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
                     :                    :     :  +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#219009]
                     :                    :     :     +- Filter ((isnotnull(cs_sold_date_sk#544) AND isnotnull(cs_item_sk#559)) AND isnotnull(cs_sold_time_sk#545))
                     :                    :     :        +- FileScan parquet [cs_sold_date_sk#544,cs_sold_time_sk#545,cs_item_sk#559,cs_ext_sales_price#567] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#544), isnotnull(cs_item_sk#559), isnotnull(cs_sold_time_sk#545)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_item_sk), IsNotNull(cs_sold_time_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_sold_time_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
                     :                    :     +- Sort [d_date_sk#17876 ASC NULLS FIRST], false, 0
                     :                    :        +- Exchange hashpartitioning(d_date_sk#17876, 200), ENSURE_REQUIREMENTS, [id=#219010]
                     :                    :           +- Project [d_date_sk#17876]
                     :                    :              +- Filter ((((isnotnull(d_moy#17884) AND isnotnull(d_year#17882)) AND (d_moy#17884 = 11)) AND (d_year#17882 = 2001)) AND isnotnull(d_date_sk#17876))
                     :                    :                 +- FileScan parquet [d_date_sk#17876,d_year#17882,d_moy#17884] Batched: true, DataFilters: [isnotnull(d_moy#17884), isnotnull(d_year#17882), (d_moy#17884 = 11), (d_year#17882 = 2001), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,11), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                     :                    +- Project [ss_ext_sales_price#267 AS ext_price#17869, ss_item_sk#254 AS sold_item_sk#17871, ss_sold_time_sk#253 AS time_sk#17872]
                     :                       +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#17904], Inner
                     :                          :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                     :                          :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#219016]
                     :                          :     +- Filter ((isnotnull(ss_sold_date_sk#252) AND isnotnull(ss_item_sk#254)) AND isnotnull(ss_sold_time_sk#253))
                     :                          :        +- FileScan parquet [ss_sold_date_sk#252,ss_sold_time_sk#253,ss_item_sk#254,ss_ext_sales_price#267] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_item_sk#254), isnotnull(ss_sold_time_sk#253)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk), IsNotNull(ss_sold_time_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_sold_time_sk:int,ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
                     :                          +- Sort [d_date_sk#17904 ASC NULLS FIRST], false, 0
                     :                             +- Exchange hashpartitioning(d_date_sk#17904, 200), ENSURE_REQUIREMENTS, [id=#219017]
                     :                                +- Project [d_date_sk#17904]
                     :                                   +- Filter ((((isnotnull(d_moy#17912) AND isnotnull(d_year#17910)) AND (d_moy#17912 = 11)) AND (d_year#17910 = 2001)) AND isnotnull(d_date_sk#17904))
                     :                                      +- FileScan parquet [d_date_sk#17904,d_year#17910,d_moy#17912] Batched: true, DataFilters: [isnotnull(d_moy#17912), isnotnull(d_year#17910), (d_moy#17912 = 11), (d_year#17910 = 2001), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,11), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                     +- Sort [t_time_sk#456 ASC NULLS FIRST], false, 0
                        +- Exchange hashpartitioning(t_time_sk#456, 200), ENSURE_REQUIREMENTS, [id=#219034]
                           +- Project [t_time_sk#456, t_hour#459, t_minute#460]
                              +- Filter (((t_meal_time#465 = breakfast) OR (t_meal_time#465 = dinner)) AND isnotnull(t_time_sk#456))
                                 +- FileScan parquet [t_time_sk#456,t_hour#459,t_minute#460,t_meal_time#465] Batched: true, DataFilters: [((t_meal_time#465 = breakfast) OR (t_meal_time#465 = dinner)), isnotnull(t_time_sk#456)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/time_dim.parquet], PartitionFilters: [], PushedFilters: [Or(EqualTo(t_meal_time,breakfast),EqualTo(t_meal_time,dinner)), IsNotNull(t_time_sk)], ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int,t_meal_time:string>
