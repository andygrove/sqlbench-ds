AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[s_store_name#717 ASC NULLS FIRST,s_company_id#728 ASC NULLS FIRST,s_street_number#730 ASC NULLS FIRST,s_street_name#731 ASC NULLS FIRST,s_street_type#732 ASC NULLS FIRST,s_suite_number#733 ASC NULLS FIRST,s_city#734 ASC NULLS FIRST,s_county#735 ASC NULLS FIRST,s_state#736 ASC NULLS FIRST,s_zip#737 ASC NULLS FIRST], output=[s_store_name#717,s_company_id#728,s_street_number#730,s_street_name#731,s_street_type#732,s_suite_number#733,s_city#734,s_county#735,s_state#736,s_zip#737,30 days#850L,31-60 days#851L,61-90 days#852L,91-120 days#853L,>120 days#854L])
   +- *(18) HashAggregate(keys=[s_store_name#717, s_company_id#728, s_street_number#730, s_street_name#731, s_street_type#732, s_suite_number#733, s_city#734, s_county#735, s_state#736, s_zip#737], functions=[sum(CASE WHEN ((sr_returned_date_sk#136 - ss_sold_date_sk#252) <= 30) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#136 - ss_sold_date_sk#252) > 30) AND ((sr_returned_date_sk#136 - ss_sold_date_sk#252) <= 60)) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#136 - ss_sold_date_sk#252) > 60) AND ((sr_returned_date_sk#136 - ss_sold_date_sk#252) <= 90)) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#136 - ss_sold_date_sk#252) > 90) AND ((sr_returned_date_sk#136 - ss_sold_date_sk#252) <= 120)) THEN 1 ELSE 0 END), sum(CASE WHEN ((sr_returned_date_sk#136 - ss_sold_date_sk#252) > 120) THEN 1 ELSE 0 END)], output=[s_store_name#717, s_company_id#728, s_street_number#730, s_street_name#731, s_street_type#732, s_suite_number#733, s_city#734, s_county#735, s_state#736, s_zip#737, 30 days#850L, 31-60 days#851L, 61-90 days#852L, 91-120 days#853L, >120 days#854L])
      +- AQEShuffleRead coalesced
         +- ShuffleQueryStage 8
            +- Exchange hashpartitioning(s_store_name#717, s_company_id#728, s_street_number#730, s_street_name#731, s_street_type#732, s_suite_number#733, s_city#734, s_county#735, s_state#736, s_zip#737, 200), ENSURE_REQUIREMENTS, [id=#1112]
               +- *(17) HashAggregate(keys=[s_store_name#717, s_company_id#728, s_street_number#730, s_street_name#731, s_street_type#732, s_suite_number#733, s_city#734, s_county#735, s_state#736, s_zip#737], functions=[partial_sum(CASE WHEN ((sr_returned_date_sk#136 - ss_sold_date_sk#252) <= 30) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#136 - ss_sold_date_sk#252) > 30) AND ((sr_returned_date_sk#136 - ss_sold_date_sk#252) <= 60)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#136 - ss_sold_date_sk#252) > 60) AND ((sr_returned_date_sk#136 - ss_sold_date_sk#252) <= 90)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#136 - ss_sold_date_sk#252) > 90) AND ((sr_returned_date_sk#136 - ss_sold_date_sk#252) <= 120)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN ((sr_returned_date_sk#136 - ss_sold_date_sk#252) > 120) THEN 1 ELSE 0 END)], output=[s_store_name#717, s_company_id#728, s_street_number#730, s_street_name#731, s_street_type#732, s_suite_number#733, s_city#734, s_county#735, s_state#736, s_zip#737, sum#908L, sum#909L, sum#910L, sum#911L, sum#912L])
                  +- *(17) Project [ss_sold_date_sk#252, sr_returned_date_sk#136, s_store_name#717, s_company_id#728, s_street_number#730, s_street_name#731, s_street_type#732, s_suite_number#733, s_city#734, s_county#735, s_state#736, s_zip#737]
                     +- *(17) SortMergeJoin [sr_returned_date_sk#136], [d_date_sk#855], Inner
                        :- *(15) Sort [sr_returned_date_sk#136 ASC NULLS FIRST], false, 0
                        :  +- AQEShuffleRead coalesced
                        :     +- ShuffleQueryStage 7
                        :        +- Exchange hashpartitioning(sr_returned_date_sk#136, 200), ENSURE_REQUIREMENTS, [id=#1028]
                        :           +- *(14) Project [ss_sold_date_sk#252, sr_returned_date_sk#136, s_store_name#717, s_company_id#728, s_street_number#730, s_street_name#731, s_street_type#732, s_suite_number#733, s_city#734, s_county#735, s_state#736, s_zip#737]
                        :              +- *(14) SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
                        :                 :- *(12) Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                        :                 :  +- AQEShuffleRead coalesced
                        :                 :     +- ShuffleQueryStage 6
                        :                 :        +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#919]
                        :                 :           +- *(11) Project [ss_sold_date_sk#252, sr_returned_date_sk#136, s_store_name#717, s_company_id#728, s_street_number#730, s_street_name#731, s_street_type#732, s_suite_number#733, s_city#734, s_county#735, s_state#736, s_zip#737]
                        :                 :              +- *(11) SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
                        :                 :                 :- *(9) Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
                        :                 :                 :  +- AQEShuffleRead coalesced
                        :                 :                 :     +- ShuffleQueryStage 5
                        :                 :                 :        +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#785]
                        :                 :                 :           +- *(8) Project [ss_sold_date_sk#252, ss_store_sk#259, sr_returned_date_sk#136]
                        :                 :                 :              +- *(8) SortMergeJoin [ss_ticket_number#261L, ss_item_sk#254, ss_customer_sk#255], [sr_ticket_number#145L, sr_item_sk#138, sr_customer_sk#139], Inner
                        :                 :                 :                 :- *(6) Sort [ss_ticket_number#261L ASC NULLS FIRST, ss_item_sk#254 ASC NULLS FIRST, ss_customer_sk#255 ASC NULLS FIRST], false, 0
                        :                 :                 :                 :  +- ShuffleQueryStage 0
                        :                 :                 :                 :     +- Exchange hashpartitioning(ss_ticket_number#261L, ss_item_sk#254, ss_customer_sk#255, 200), ENSURE_REQUIREMENTS, [id=#277]
                        :                 :                 :                 :        +- *(1) Filter ((((isnotnull(ss_ticket_number#261L) AND isnotnull(ss_item_sk#254)) AND isnotnull(ss_customer_sk#255)) AND isnotnull(ss_store_sk#259)) AND isnotnull(ss_sold_date_sk#252))
                        :                 :                 :                 :           +- *(1) ColumnarToRow
                        :                 :                 :                 :              +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_customer_sk#255,ss_store_sk#259,ss_ticket_number#261L] Batched: true, DataFilters: [isnotnull(ss_ticket_number#261L), isnotnull(ss_item_sk#254), isnotnull(ss_customer_sk#255), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_stor..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:big...
                        :                 :                 :                 +- *(7) Sort [sr_ticket_number#145L ASC NULLS FIRST, sr_item_sk#138 ASC NULLS FIRST, sr_customer_sk#139 ASC NULLS FIRST], false, 0
                        :                 :                 :                    +- ShuffleQueryStage 1
                        :                 :                 :                       +- Exchange hashpartitioning(sr_ticket_number#145L, sr_item_sk#138, sr_customer_sk#139, 200), ENSURE_REQUIREMENTS, [id=#294]
                        :                 :                 :                          +- *(2) Filter (((isnotnull(sr_ticket_number#145L) AND isnotnull(sr_item_sk#138)) AND isnotnull(sr_customer_sk#139)) AND isnotnull(sr_returned_date_sk#136))
                        :                 :                 :                             +- *(2) ColumnarToRow
                        :                 :                 :                                +- FileScan parquet [sr_returned_date_sk#136,sr_item_sk#138,sr_customer_sk#139,sr_ticket_number#145L] Batched: true, DataFilters: [isnotnull(sr_ticket_number#145L), isnotnull(sr_item_sk#138), isnotnull(sr_customer_sk#139), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk), IsNotNull(sr_customer_sk), IsNotNull(sr_retu..., ReadSchema: struct<sr_returned_date_sk:int,sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:bigint>
                        :                 :                 +- *(10) Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
                        :                 :                    +- AQEShuffleRead coalesced
                        :                 :                       +- ShuffleQueryStage 2
                        :                 :                          +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#315]
                        :                 :                             +- *(3) Filter isnotnull(s_store_sk#712)
                        :                 :                                +- *(3) ColumnarToRow
                        :                 :                                   +- FileScan parquet [s_store_sk#712,s_store_name#717,s_company_id#728,s_street_number#730,s_street_name#731,s_street_type#732,s_suite_number#733,s_city#734,s_county#735,s_state#736,s_zip#737] Batched: true, DataFilters: [isnotnull(s_store_sk#712)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_id:int,s_street_number:string,s_street_name:s...
                        :                 +- *(13) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                        :                    +- AQEShuffleRead coalesced
                        :                       +- ShuffleQueryStage 3
                        :                          +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#336]
                        :                             +- *(4) Filter isnotnull(d_date_sk#612)
                        :                                +- *(4) ColumnarToRow
                        :                                   +- FileScan parquet [d_date_sk#612] Batched: true, DataFilters: [isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int>
                        +- *(16) Sort [d_date_sk#855 ASC NULLS FIRST], false, 0
                           +- AQEShuffleRead coalesced
                              +- ShuffleQueryStage 4
                                 +- Exchange hashpartitioning(d_date_sk#855, 200), ENSURE_REQUIREMENTS, [id=#359]
                                    +- *(5) Project [d_date_sk#855]
                                       +- *(5) Filter ((((isnotnull(d_year#861) AND isnotnull(d_moy#863)) AND (d_year#861 = 1999)) AND (d_moy#863 = 10)) AND isnotnull(d_date_sk#855))
                                          +- *(5) ColumnarToRow
                                             +- FileScan parquet [d_date_sk#855,d_year#861,d_moy#863] Batched: true, DataFilters: [isnotnull(d_year#861), isnotnull(d_moy#863), (d_year#861 = 1999), (d_moy#863 = 10), isnotnull(d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,10), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[s_store_name#717 ASC NULLS FIRST,s_company_id#728 ASC NULLS FIRST,s_street_number#730 ASC NULLS FIRST,s_street_name#731 ASC NULLS FIRST,s_street_type#732 ASC NULLS FIRST,s_suite_number#733 ASC NULLS FIRST,s_city#734 ASC NULLS FIRST,s_county#735 ASC NULLS FIRST,s_state#736 ASC NULLS FIRST,s_zip#737 ASC NULLS FIRST], output=[s_store_name#717,s_company_id#728,s_street_number#730,s_street_name#731,s_street_type#732,s_suite_number#733,s_city#734,s_county#735,s_state#736,s_zip#737,30 days#850L,31-60 days#851L,61-90 days#852L,91-120 days#853L,>120 days#854L])
   +- HashAggregate(keys=[s_store_name#717, s_company_id#728, s_street_number#730, s_street_name#731, s_street_type#732, s_suite_number#733, s_city#734, s_county#735, s_state#736, s_zip#737], functions=[sum(CASE WHEN ((sr_returned_date_sk#136 - ss_sold_date_sk#252) <= 30) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#136 - ss_sold_date_sk#252) > 30) AND ((sr_returned_date_sk#136 - ss_sold_date_sk#252) <= 60)) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#136 - ss_sold_date_sk#252) > 60) AND ((sr_returned_date_sk#136 - ss_sold_date_sk#252) <= 90)) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#136 - ss_sold_date_sk#252) > 90) AND ((sr_returned_date_sk#136 - ss_sold_date_sk#252) <= 120)) THEN 1 ELSE 0 END), sum(CASE WHEN ((sr_returned_date_sk#136 - ss_sold_date_sk#252) > 120) THEN 1 ELSE 0 END)], output=[s_store_name#717, s_company_id#728, s_street_number#730, s_street_name#731, s_street_type#732, s_suite_number#733, s_city#734, s_county#735, s_state#736, s_zip#737, 30 days#850L, 31-60 days#851L, 61-90 days#852L, 91-120 days#853L, >120 days#854L])
      +- Exchange hashpartitioning(s_store_name#717, s_company_id#728, s_street_number#730, s_street_name#731, s_street_type#732, s_suite_number#733, s_city#734, s_county#735, s_state#736, s_zip#737, 200), ENSURE_REQUIREMENTS, [id=#198]
         +- HashAggregate(keys=[s_store_name#717, s_company_id#728, s_street_number#730, s_street_name#731, s_street_type#732, s_suite_number#733, s_city#734, s_county#735, s_state#736, s_zip#737], functions=[partial_sum(CASE WHEN ((sr_returned_date_sk#136 - ss_sold_date_sk#252) <= 30) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#136 - ss_sold_date_sk#252) > 30) AND ((sr_returned_date_sk#136 - ss_sold_date_sk#252) <= 60)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#136 - ss_sold_date_sk#252) > 60) AND ((sr_returned_date_sk#136 - ss_sold_date_sk#252) <= 90)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#136 - ss_sold_date_sk#252) > 90) AND ((sr_returned_date_sk#136 - ss_sold_date_sk#252) <= 120)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN ((sr_returned_date_sk#136 - ss_sold_date_sk#252) > 120) THEN 1 ELSE 0 END)], output=[s_store_name#717, s_company_id#728, s_street_number#730, s_street_name#731, s_street_type#732, s_suite_number#733, s_city#734, s_county#735, s_state#736, s_zip#737, sum#908L, sum#909L, sum#910L, sum#911L, sum#912L])
            +- Project [ss_sold_date_sk#252, sr_returned_date_sk#136, s_store_name#717, s_company_id#728, s_street_number#730, s_street_name#731, s_street_type#732, s_suite_number#733, s_city#734, s_county#735, s_state#736, s_zip#737]
               +- SortMergeJoin [sr_returned_date_sk#136], [d_date_sk#855], Inner
                  :- Sort [sr_returned_date_sk#136 ASC NULLS FIRST], false, 0
                  :  +- Exchange hashpartitioning(sr_returned_date_sk#136, 200), ENSURE_REQUIREMENTS, [id=#190]
                  :     +- Project [ss_sold_date_sk#252, sr_returned_date_sk#136, s_store_name#717, s_company_id#728, s_street_number#730, s_street_name#731, s_street_type#732, s_suite_number#733, s_city#734, s_county#735, s_state#736, s_zip#737]
                  :        +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
                  :           :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                  :           :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#182]
                  :           :     +- Project [ss_sold_date_sk#252, sr_returned_date_sk#136, s_store_name#717, s_company_id#728, s_street_number#730, s_street_name#731, s_street_type#732, s_suite_number#733, s_city#734, s_county#735, s_state#736, s_zip#737]
                  :           :        +- SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
                  :           :           :- Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
                  :           :           :  +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#174]
                  :           :           :     +- Project [ss_sold_date_sk#252, ss_store_sk#259, sr_returned_date_sk#136]
                  :           :           :        +- SortMergeJoin [ss_ticket_number#261L, ss_item_sk#254, ss_customer_sk#255], [sr_ticket_number#145L, sr_item_sk#138, sr_customer_sk#139], Inner
                  :           :           :           :- Sort [ss_ticket_number#261L ASC NULLS FIRST, ss_item_sk#254 ASC NULLS FIRST, ss_customer_sk#255 ASC NULLS FIRST], false, 0
                  :           :           :           :  +- Exchange hashpartitioning(ss_ticket_number#261L, ss_item_sk#254, ss_customer_sk#255, 200), ENSURE_REQUIREMENTS, [id=#166]
                  :           :           :           :     +- Filter ((((isnotnull(ss_ticket_number#261L) AND isnotnull(ss_item_sk#254)) AND isnotnull(ss_customer_sk#255)) AND isnotnull(ss_store_sk#259)) AND isnotnull(ss_sold_date_sk#252))
                  :           :           :           :        +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_customer_sk#255,ss_store_sk#259,ss_ticket_number#261L] Batched: true, DataFilters: [isnotnull(ss_ticket_number#261L), isnotnull(ss_item_sk#254), isnotnull(ss_customer_sk#255), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_stor..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:big...
                  :           :           :           +- Sort [sr_ticket_number#145L ASC NULLS FIRST, sr_item_sk#138 ASC NULLS FIRST, sr_customer_sk#139 ASC NULLS FIRST], false, 0
                  :           :           :              +- Exchange hashpartitioning(sr_ticket_number#145L, sr_item_sk#138, sr_customer_sk#139, 200), ENSURE_REQUIREMENTS, [id=#167]
                  :           :           :                 +- Filter (((isnotnull(sr_ticket_number#145L) AND isnotnull(sr_item_sk#138)) AND isnotnull(sr_customer_sk#139)) AND isnotnull(sr_returned_date_sk#136))
                  :           :           :                    +- FileScan parquet [sr_returned_date_sk#136,sr_item_sk#138,sr_customer_sk#139,sr_ticket_number#145L] Batched: true, DataFilters: [isnotnull(sr_ticket_number#145L), isnotnull(sr_item_sk#138), isnotnull(sr_customer_sk#139), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk), IsNotNull(sr_customer_sk), IsNotNull(sr_retu..., ReadSchema: struct<sr_returned_date_sk:int,sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:bigint>
                  :           :           +- Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
                  :           :              +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#175]
                  :           :                 +- Filter isnotnull(s_store_sk#712)
                  :           :                    +- FileScan parquet [s_store_sk#712,s_store_name#717,s_company_id#728,s_street_number#730,s_street_name#731,s_street_type#732,s_suite_number#733,s_city#734,s_county#735,s_state#736,s_zip#737] Batched: true, DataFilters: [isnotnull(s_store_sk#712)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_id:int,s_street_number:string,s_street_name:s...
                  :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                  :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#183]
                  :                 +- Filter isnotnull(d_date_sk#612)
                  :                    +- FileScan parquet [d_date_sk#612] Batched: true, DataFilters: [isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int>
                  +- Sort [d_date_sk#855 ASC NULLS FIRST], false, 0
                     +- Exchange hashpartitioning(d_date_sk#855, 200), ENSURE_REQUIREMENTS, [id=#191]
                        +- Project [d_date_sk#855]
                           +- Filter ((((isnotnull(d_year#861) AND isnotnull(d_moy#863)) AND (d_year#861 = 1999)) AND (d_moy#863 = 10)) AND isnotnull(d_date_sk#855))
                              +- FileScan parquet [d_date_sk#855,d_year#861,d_moy#863] Batched: true, DataFilters: [isnotnull(d_year#861), isnotnull(d_moy#863), (d_year#861 = 1999), (d_moy#863 = 10), isnotnull(d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,10), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
