AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[channel#20412 ASC NULLS FIRST,id#20413 ASC NULLS FIRST], output=[channel#20412,id#20413,sales#20245,returns#20246,profit#20247])
   +- *(68) HashAggregate(keys=[channel#20412, id#20413, spark_grouping_id#20411L], functions=[sum(sales#20249), sum(returns#20250), sum(profit#20251)], output=[channel#20412, id#20413, sales#20245, returns#20246, profit#20247])
      +- AQEShuffleRead coalesced
         +- ShuffleQueryStage 39
            +- Exchange hashpartitioning(channel#20412, id#20413, spark_grouping_id#20411L, 200), ENSURE_REQUIREMENTS, [id=#250468]
               +- *(67) HashAggregate(keys=[channel#20412, id#20413, spark_grouping_id#20411L], functions=[partial_sum(sales#20249), partial_sum(returns#20250), partial_sum(profit#20251)], output=[channel#20412, id#20413, spark_grouping_id#20411L, sum#20429, isEmpty#20430, sum#20431, isEmpty#20432, sum#20433, isEmpty#20434])
                  +- *(67) Expand [[sales#20249, returns#20250, profit#20251, channel#20409, id#20410, 0], [sales#20249, returns#20250, profit#20251, channel#20409, null, 1], [sales#20249, returns#20250, profit#20251, null, null, 3]], [sales#20249, returns#20250, profit#20251, channel#20412, id#20413, spark_grouping_id#20411L]
                     +- Union
                        :- *(64) HashAggregate(keys=[s_store_id#713], functions=[sum(UnscaledValue(ss_ext_sales_price#267)), sum(coalesce(cast(sr_return_amt#147 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(ss_net_profit#274 as decimal(13,2))) - promote_precision(cast(coalesce(cast(sr_net_loss#155 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))], output=[sales#20249, returns#20250, profit#20251, channel#20409, id#20410])
                        :  +- AQEShuffleRead coalesced
                        :     +- ShuffleQueryStage 36
                        :        +- Exchange hashpartitioning(s_store_id#713, 200), ENSURE_REQUIREMENTS, [id=#250108]
                        :           +- *(57) HashAggregate(keys=[s_store_id#713], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#267)), partial_sum(coalesce(cast(sr_return_amt#147 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(ss_net_profit#274 as decimal(13,2))) - promote_precision(cast(coalesce(cast(sr_net_loss#155 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))], output=[s_store_id#713, sum#20440L, sum#20441, isEmpty#20442, sum#20443, isEmpty#20444])
                        :              +- *(57) Project [ss_ext_sales_price#267, ss_net_profit#274, sr_return_amt#147, sr_net_loss#155, s_store_id#713]
                        :                 +- *(57) SortMergeJoin [ss_promo_sk#260], [p_promo_sk#98], Inner
                        :                    :- *(55) Sort [ss_promo_sk#260 ASC NULLS FIRST], false, 0
                        :                    :  +- AQEShuffleRead coalesced
                        :                    :     +- ShuffleQueryStage 33
                        :                    :        +- Exchange hashpartitioning(ss_promo_sk#260, 200), ENSURE_REQUIREMENTS, [id=#249578]
                        :                    :           +- *(48) Project [ss_promo_sk#260, ss_ext_sales_price#267, ss_net_profit#274, sr_return_amt#147, sr_net_loss#155, s_store_id#713]
                        :                    :              +- *(48) SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
                        :                    :                 :- *(46) Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                        :                    :                 :  +- AQEShuffleRead coalesced
                        :                    :                 :     +- ShuffleQueryStage 30
                        :                    :                 :        +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#248879]
                        :                    :                 :           +- *(39) Project [ss_item_sk#254, ss_promo_sk#260, ss_ext_sales_price#267, ss_net_profit#274, sr_return_amt#147, sr_net_loss#155, s_store_id#713]
                        :                    :                 :              +- *(39) SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
                        :                    :                 :                 :- *(37) Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
                        :                    :                 :                 :  +- AQEShuffleRead coalesced
                        :                    :                 :                 :     +- ShuffleQueryStage 27
                        :                    :                 :                 :        +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#248009]
                        :                    :                 :                 :           +- *(30) Project [ss_item_sk#254, ss_store_sk#259, ss_promo_sk#260, ss_ext_sales_price#267, ss_net_profit#274, sr_return_amt#147, sr_net_loss#155]
                        :                    :                 :                 :              +- *(30) SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
                        :                    :                 :                 :                 :- *(28) Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                        :                    :                 :                 :                 :  +- AQEShuffleRead coalesced
                        :                    :                 :                 :                 :     +- ShuffleQueryStage 24
                        :                    :                 :                 :                 :        +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#245976]
                        :                    :                 :                 :                 :           +- *(21) Project [ss_sold_date_sk#252, ss_item_sk#254, ss_store_sk#259, ss_promo_sk#260, ss_ext_sales_price#267, ss_net_profit#274, sr_return_amt#147, sr_net_loss#155]
                        :                    :                 :                 :                 :              +- *(21) SortMergeJoin [ss_item_sk#254, ss_ticket_number#261L], [sr_item_sk#138, sr_ticket_number#145L], LeftOuter
                        :                    :                 :                 :                 :                 :- *(19) Sort [ss_item_sk#254 ASC NULLS FIRST, ss_ticket_number#261L ASC NULLS FIRST], false, 0
                        :                    :                 :                 :                 :                 :  +- ShuffleQueryStage 0
                        :                    :                 :                 :                 :                 :     +- Exchange hashpartitioning(ss_item_sk#254, ss_ticket_number#261L, 200), ENSURE_REQUIREMENTS, [id=#243212]
                        :                    :                 :                 :                 :                 :        +- *(1) Filter (((isnotnull(ss_sold_date_sk#252) AND isnotnull(ss_store_sk#259)) AND isnotnull(ss_item_sk#254)) AND isnotnull(ss_promo_sk#260))
                        :                    :                 :                 :                 :                 :           +- *(1) ColumnarToRow
                        :                    :                 :                 :                 :                 :              +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_store_sk#259,ss_promo_sk#260,ss_ticket_number#261L,ss_ext_sales_price#267,ss_net_profit#274] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_store_sk#259), isnotnull(ss_item_sk#254), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_item_sk), IsNotNull(ss_promo_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:bigint...
                        :                    :                 :                 :                 :                 +- *(20) Sort [sr_item_sk#138 ASC NULLS FIRST, sr_ticket_number#145L ASC NULLS FIRST], false, 0
                        :                    :                 :                 :                 :                    +- ShuffleQueryStage 1
                        :                    :                 :                 :                 :                       +- Exchange hashpartitioning(sr_item_sk#138, sr_ticket_number#145L, 200), ENSURE_REQUIREMENTS, [id=#243229]
                        :                    :                 :                 :                 :                          +- *(2) Filter (isnotnull(sr_item_sk#138) AND isnotnull(sr_ticket_number#145L))
                        :                    :                 :                 :                 :                             +- *(2) ColumnarToRow
                        :                    :                 :                 :                 :                                +- FileScan parquet [sr_item_sk#138,sr_ticket_number#145L,sr_return_amt#147,sr_net_loss#155] Batched: true, DataFilters: [isnotnull(sr_item_sk#138), isnotnull(sr_ticket_number#145L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_item_sk), IsNotNull(sr_ticket_number)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>
                        :                    :                 :                 :                 +- *(29) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                        :                    :                 :                 :                    +- AQEShuffleRead coalesced
                        :                    :                 :                 :                       +- ShuffleQueryStage 2
                        :                    :                 :                 :                          +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#243252]
                        :                    :                 :                 :                             +- *(3) Project [d_date_sk#612]
                        :                    :                 :                 :                                +- *(3) Filter (((isnotnull(d_date#614) AND (d_date#614 >= 2002-08-04)) AND (d_date#614 <= 2002-09-03)) AND isnotnull(d_date_sk#612))
                        :                    :                 :                 :                                   +- *(3) ColumnarToRow
                        :                    :                 :                 :                                      +- FileScan parquet [d_date_sk#612,d_date#614] Batched: true, DataFilters: [isnotnull(d_date#614), (d_date#614 >= 2002-08-04), (d_date#614 <= 2002-09-03), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2002-08-04), LessThanOrEqual(d_date,2002-09-03), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                        :                    :                 :                 +- *(38) Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
                        :                    :                 :                    +- AQEShuffleRead coalesced
                        :                    :                 :                       +- ShuffleQueryStage 3
                        :                    :                 :                          +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#243275]
                        :                    :                 :                             +- *(4) Filter isnotnull(s_store_sk#712)
                        :                    :                 :                                +- *(4) ColumnarToRow
                        :                    :                 :                                   +- FileScan parquet [s_store_sk#712,s_store_id#713] Batched: true, DataFilters: [isnotnull(s_store_sk#712)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string>
                        :                    :                 +- *(47) Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                        :                    :                    +- AQEShuffleRead coalesced
                        :                    :                       +- ShuffleQueryStage 4
                        :                    :                          +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#243298]
                        :                    :                             +- *(5) Project [i_item_sk#668]
                        :                    :                                +- *(5) Filter ((isnotnull(i_current_price#673) AND (i_current_price#673 > 50.00)) AND isnotnull(i_item_sk#668))
                        :                    :                                   +- *(5) ColumnarToRow
                        :                    :                                      +- FileScan parquet [i_item_sk#668,i_current_price#673] Batched: true, DataFilters: [isnotnull(i_current_price#673), (i_current_price#673 > 50.00), isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_current_price), GreaterThan(i_current_price,50.00), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2)>
                        :                    +- *(56) Sort [p_promo_sk#98 ASC NULLS FIRST], false, 0
                        :                       +- AQEShuffleRead coalesced
                        :                          +- ShuffleQueryStage 5
                        :                             +- Exchange hashpartitioning(p_promo_sk#98, 200), ENSURE_REQUIREMENTS, [id=#243323]
                        :                                +- *(6) Project [p_promo_sk#98]
                        :                                   +- *(6) Filter ((isnotnull(p_channel_tv#109) AND (p_channel_tv#109 = N)) AND isnotnull(p_promo_sk#98))
                        :                                      +- *(6) ColumnarToRow
                        :                                         +- FileScan parquet [p_promo_sk#98,p_channel_tv#109] Batched: true, DataFilters: [isnotnull(p_channel_tv#109), (p_channel_tv#109 = N), isnotnull(p_promo_sk#98)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/promotion.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(p_channel_tv), EqualTo(p_channel_tv,N), IsNotNull(p_promo_sk)], ReadSchema: struct<p_promo_sk:int,p_channel_tv:string>
                        :- *(65) HashAggregate(keys=[cp_catalog_page_id#205], functions=[sum(UnscaledValue(cs_ext_sales_price#567)), sum(coalesce(cast(cr_return_amount#364 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(cs_net_profit#577 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_net_loss#372 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))], output=[sales#20253, returns#20254, profit#20255, channel#20419, id#20420])
                        :  +- AQEShuffleRead coalesced
                        :     +- ShuffleQueryStage 37
                        :        +- Exchange hashpartitioning(cp_catalog_page_id#205, 200), ENSURE_REQUIREMENTS, [id=#250236]
                        :           +- *(60) HashAggregate(keys=[cp_catalog_page_id#205], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#567)), partial_sum(coalesce(cast(cr_return_amount#364 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(cs_net_profit#577 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_net_loss#372 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))], output=[cp_catalog_page_id#205, sum#20450L, sum#20451, isEmpty#20452, sum#20453, isEmpty#20454])
                        :              +- *(60) Project [cs_ext_sales_price#567, cs_net_profit#577, cr_return_amount#364, cr_net_loss#372, cp_catalog_page_id#205]
                        :                 +- *(60) SortMergeJoin [cs_promo_sk#560], [p_promo_sk#20309], Inner
                        :                    :- *(58) Sort [cs_promo_sk#560 ASC NULLS FIRST], false, 0
                        :                    :  +- AQEShuffleRead coalesced
                        :                    :     +- ShuffleQueryStage 34
                        :                    :        +- Exchange hashpartitioning(cs_promo_sk#560, 200), ENSURE_REQUIREMENTS, [id=#249769]
                        :                    :           +- *(51) Project [cs_promo_sk#560, cs_ext_sales_price#567, cs_net_profit#577, cr_return_amount#364, cr_net_loss#372, cp_catalog_page_id#205]
                        :                    :              +- *(51) SortMergeJoin [cs_item_sk#559], [i_item_sk#20287], Inner
                        :                    :                 :- *(49) Sort [cs_item_sk#559 ASC NULLS FIRST], false, 0
                        :                    :                 :  +- AQEShuffleRead coalesced
                        :                    :                 :     +- ShuffleQueryStage 31
                        :                    :                 :        +- Exchange hashpartitioning(cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#249127]
                        :                    :                 :           +- *(42) Project [cs_item_sk#559, cs_promo_sk#560, cs_ext_sales_price#567, cs_net_profit#577, cr_return_amount#364, cr_net_loss#372, cp_catalog_page_id#205]
                        :                    :                 :              +- *(42) SortMergeJoin [cs_catalog_page_sk#556], [cp_catalog_page_sk#204], Inner
                        :                    :                 :                 :- *(40) Sort [cs_catalog_page_sk#556 ASC NULLS FIRST], false, 0
                        :                    :                 :                 :  +- AQEShuffleRead coalesced
                        :                    :                 :                 :     +- ShuffleQueryStage 28
                        :                    :                 :                 :        +- Exchange hashpartitioning(cs_catalog_page_sk#556, 200), ENSURE_REQUIREMENTS, [id=#248314]
                        :                    :                 :                 :           +- *(33) Project [cs_catalog_page_sk#556, cs_item_sk#559, cs_promo_sk#560, cs_ext_sales_price#567, cs_net_profit#577, cr_return_amount#364, cr_net_loss#372]
                        :                    :                 :                 :              +- *(33) SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#20259], Inner
                        :                    :                 :                 :                 :- *(31) Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
                        :                    :                 :                 :                 :  +- AQEShuffleRead coalesced
                        :                    :                 :                 :                 :     +- ShuffleQueryStage 25
                        :                    :                 :                 :                 :        +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#246848]
                        :                    :                 :                 :                 :           +- *(24) Project [cs_sold_date_sk#544, cs_catalog_page_sk#556, cs_item_sk#559, cs_promo_sk#560, cs_ext_sales_price#567, cs_net_profit#577, cr_return_amount#364, cr_net_loss#372]
                        :                    :                 :                 :                 :              +- *(24) SortMergeJoin [cs_item_sk#559, cs_order_number#561L], [cr_item_sk#348, cr_order_number#362L], LeftOuter
                        :                    :                 :                 :                 :                 :- *(22) Sort [cs_item_sk#559 ASC NULLS FIRST, cs_order_number#561L ASC NULLS FIRST], false, 0
                        :                    :                 :                 :                 :                 :  +- AQEShuffleRead coalesced
                        :                    :                 :                 :                 :                 :     +- ShuffleQueryStage 6
                        :                    :                 :                 :                 :                 :        +- Exchange hashpartitioning(cs_item_sk#559, cs_order_number#561L, 200), ENSURE_REQUIREMENTS, [id=#243347]
                        :                    :                 :                 :                 :                 :           +- *(7) Filter (((isnotnull(cs_sold_date_sk#544) AND isnotnull(cs_catalog_page_sk#556)) AND isnotnull(cs_item_sk#559)) AND isnotnull(cs_promo_sk#560))
                        :                    :                 :                 :                 :                 :              +- *(7) ColumnarToRow
                        :                    :                 :                 :                 :                 :                 +- FileScan parquet [cs_sold_date_sk#544,cs_catalog_page_sk#556,cs_item_sk#559,cs_promo_sk#560,cs_order_number#561L,cs_ext_sales_price#567,cs_net_profit#577] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#544), isnotnull(cs_catalog_page_sk#556), isnotnull(cs_item_sk#559), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_catalog_page_sk), IsNotNull(cs_item_sk), IsNotNull(cs_p..., ReadSchema: struct<cs_sold_date_sk:int,cs_catalog_page_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:...
                        :                    :                 :                 :                 :                 +- *(23) Sort [cr_item_sk#348 ASC NULLS FIRST, cr_order_number#362L ASC NULLS FIRST], false, 0
                        :                    :                 :                 :                 :                    +- AQEShuffleRead coalesced
                        :                    :                 :                 :                 :                       +- ShuffleQueryStage 7
                        :                    :                 :                 :                 :                          +- Exchange hashpartitioning(cr_item_sk#348, cr_order_number#362L, 200), ENSURE_REQUIREMENTS, [id=#243364]
                        :                    :                 :                 :                 :                             +- *(8) Filter (isnotnull(cr_item_sk#348) AND isnotnull(cr_order_number#362L))
                        :                    :                 :                 :                 :                                +- *(8) ColumnarToRow
                        :                    :                 :                 :                 :                                   +- FileScan parquet [cr_item_sk#348,cr_order_number#362L,cr_return_amount#364,cr_net_loss#372] Batched: true, DataFilters: [isnotnull(cr_item_sk#348), isnotnull(cr_order_number#362L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cr_item_sk), IsNotNull(cr_order_number)], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>
                        :                    :                 :                 :                 +- *(32) Sort [d_date_sk#20259 ASC NULLS FIRST], false, 0
                        :                    :                 :                 :                    +- AQEShuffleRead coalesced
                        :                    :                 :                 :                       +- ShuffleQueryStage 9
                        :                    :                 :                 :                          +- ReusedExchange [d_date_sk#20259], Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#243252]
                        :                    :                 :                 +- *(41) Sort [cp_catalog_page_sk#204 ASC NULLS FIRST], false, 0
                        :                    :                 :                    +- AQEShuffleRead coalesced
                        :                    :                 :                       +- ShuffleQueryStage 10
                        :                    :                 :                          +- Exchange hashpartitioning(cp_catalog_page_sk#204, 200), ENSURE_REQUIREMENTS, [id=#243412]
                        :                    :                 :                             +- *(10) Filter isnotnull(cp_catalog_page_sk#204)
                        :                    :                 :                                +- *(10) ColumnarToRow
                        :                    :                 :                                   +- FileScan parquet [cp_catalog_page_sk#204,cp_catalog_page_id#205] Batched: true, DataFilters: [isnotnull(cp_catalog_page_sk#204)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_page.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cp_catalog_page_sk)], ReadSchema: struct<cp_catalog_page_sk:int,cp_catalog_page_id:string>
                        :                    :                 +- *(50) Sort [i_item_sk#20287 ASC NULLS FIRST], false, 0
                        :                    :                    +- AQEShuffleRead coalesced
                        :                    :                       +- ShuffleQueryStage 12
                        :                    :                          +- ReusedExchange [i_item_sk#20287], Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#243298]
                        :                    +- *(59) Sort [p_promo_sk#20309 ASC NULLS FIRST], false, 0
                        :                       +- AQEShuffleRead coalesced
                        :                          +- ShuffleQueryStage 14
                        :                             +- ReusedExchange [p_promo_sk#20309], Exchange hashpartitioning(p_promo_sk#98, 200), ENSURE_REQUIREMENTS, [id=#243323]
                        +- *(66) HashAggregate(keys=[web_site_id#799], functions=[sum(UnscaledValue(ws_ext_sales_price#499)), sum(coalesce(cast(wr_return_amt#313 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(ws_net_profit#509 as decimal(13,2))) - promote_precision(cast(coalesce(cast(wr_net_loss#321 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))], output=[sales#20256, returns#20257, profit#20258, channel#20421, id#20422])
                           +- AQEShuffleRead coalesced
                              +- ShuffleQueryStage 38
                                 +- Exchange hashpartitioning(web_site_id#799, 200), ENSURE_REQUIREMENTS, [id=#250342]
                                    +- *(63) HashAggregate(keys=[web_site_id#799], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#499)), partial_sum(coalesce(cast(wr_return_amt#313 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(ws_net_profit#509 as decimal(13,2))) - promote_precision(cast(coalesce(cast(wr_net_loss#321 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))], output=[web_site_id#799, sum#20460L, sum#20461, isEmpty#20462, sum#20463, isEmpty#20464])
                                       +- *(63) Project [ws_ext_sales_price#499, ws_net_profit#509, wr_return_amt#313, wr_net_loss#321, web_site_id#799]
                                          +- *(63) SortMergeJoin [ws_promo_sk#492], [p_promo_sk#20378], Inner
                                             :- *(61) Sort [ws_promo_sk#492 ASC NULLS FIRST], false, 0
                                             :  +- AQEShuffleRead coalesced
                                             :     +- ShuffleQueryStage 35
                                             :        +- Exchange hashpartitioning(ws_promo_sk#492, 200), ENSURE_REQUIREMENTS, [id=#249945]
                                             :           +- *(54) Project [ws_promo_sk#492, ws_ext_sales_price#499, ws_net_profit#509, wr_return_amt#313, wr_net_loss#321, web_site_id#799]
                                             :              +- *(54) SortMergeJoin [ws_item_sk#479], [i_item_sk#20356], Inner
                                             :                 :- *(52) Sort [ws_item_sk#479 ASC NULLS FIRST], false, 0
                                             :                 :  +- AQEShuffleRead coalesced
                                             :                 :     +- ShuffleQueryStage 32
                                             :                 :        +- Exchange hashpartitioning(ws_item_sk#479, 200), ENSURE_REQUIREMENTS, [id=#249360]
                                             :                 :           +- *(45) Project [ws_item_sk#479, ws_promo_sk#492, ws_ext_sales_price#499, ws_net_profit#509, wr_return_amt#313, wr_net_loss#321, web_site_id#799]
                                             :                 :              +- *(45) SortMergeJoin [ws_web_site_sk#489], [web_site_sk#798], Inner
                                             :                 :                 :- *(43) Sort [ws_web_site_sk#489 ASC NULLS FIRST], false, 0
                                             :                 :                 :  +- AQEShuffleRead coalesced
                                             :                 :                 :     +- ShuffleQueryStage 29
                                             :                 :                 :        +- Exchange hashpartitioning(ws_web_site_sk#489, 200), ENSURE_REQUIREMENTS, [id=#248604]
                                             :                 :                 :           +- *(36) Project [ws_item_sk#479, ws_web_site_sk#489, ws_promo_sk#492, ws_ext_sales_price#499, ws_net_profit#509, wr_return_amt#313, wr_net_loss#321]
                                             :                 :                 :              +- *(36) SortMergeJoin [ws_sold_date_sk#476], [d_date_sk#20328], Inner
                                             :                 :                 :                 :- *(34) Sort [ws_sold_date_sk#476 ASC NULLS FIRST], false, 0
                                             :                 :                 :                 :  +- AQEShuffleRead coalesced
                                             :                 :                 :                 :     +- ShuffleQueryStage 26
                                             :                 :                 :                 :        +- Exchange hashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#247677]
                                             :                 :                 :                 :           +- *(27) Project [ws_sold_date_sk#476, ws_item_sk#479, ws_web_site_sk#489, ws_promo_sk#492, ws_ext_sales_price#499, ws_net_profit#509, wr_return_amt#313, wr_net_loss#321]
                                             :                 :                 :                 :              +- *(27) SortMergeJoin [ws_item_sk#479, ws_order_number#493L], [wr_item_sk#300, wr_order_number#311L], LeftOuter
                                             :                 :                 :                 :                 :- *(25) Sort [ws_item_sk#479 ASC NULLS FIRST, ws_order_number#493L ASC NULLS FIRST], false, 0
                                             :                 :                 :                 :                 :  +- AQEShuffleRead coalesced
                                             :                 :                 :                 :                 :     +- ShuffleQueryStage 15
                                             :                 :                 :                 :                 :        +- Exchange hashpartitioning(ws_item_sk#479, ws_order_number#493L, 200), ENSURE_REQUIREMENTS, [id=#243488]
                                             :                 :                 :                 :                 :           +- *(13) Filter (((isnotnull(ws_sold_date_sk#476) AND isnotnull(ws_web_site_sk#489)) AND isnotnull(ws_item_sk#479)) AND isnotnull(ws_promo_sk#492))
                                             :                 :                 :                 :                 :              +- *(13) ColumnarToRow
                                             :                 :                 :                 :                 :                 +- FileScan parquet [ws_sold_date_sk#476,ws_item_sk#479,ws_web_site_sk#489,ws_promo_sk#492,ws_order_number#493L,ws_ext_sales_price#499,ws_net_profit#509] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#476), isnotnull(ws_web_site_sk#489), isnotnull(ws_item_sk#479), isnotn..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_web_site_sk), IsNotNull(ws_item_sk), IsNotNull(ws_promo..., ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_web_site_sk:int,ws_promo_sk:int,ws_order_number:bigi...
                                             :                 :                 :                 :                 +- *(26) Sort [wr_item_sk#300 ASC NULLS FIRST, wr_order_number#311L ASC NULLS FIRST], false, 0
                                             :                 :                 :                 :                    +- AQEShuffleRead coalesced
                                             :                 :                 :                 :                       +- ShuffleQueryStage 16
                                             :                 :                 :                 :                          +- Exchange hashpartitioning(wr_item_sk#300, wr_order_number#311L, 200), ENSURE_REQUIREMENTS, [id=#243505]
                                             :                 :                 :                 :                             +- *(14) Filter (isnotnull(wr_item_sk#300) AND isnotnull(wr_order_number#311L))
                                             :                 :                 :                 :                                +- *(14) ColumnarToRow
                                             :                 :                 :                 :                                   +- FileScan parquet [wr_item_sk#300,wr_order_number#311L,wr_return_amt#313,wr_net_loss#321] Batched: true, DataFilters: [isnotnull(wr_item_sk#300), isnotnull(wr_order_number#311L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(wr_item_sk), IsNotNull(wr_order_number)], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_amt:decimal(7,2),wr_net_loss:decimal(7,2)>
                                             :                 :                 :                 +- *(35) Sort [d_date_sk#20328 ASC NULLS FIRST], false, 0
                                             :                 :                 :                    +- AQEShuffleRead coalesced
                                             :                 :                 :                       +- ShuffleQueryStage 18
                                             :                 :                 :                          +- ReusedExchange [d_date_sk#20328], Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#243252]
                                             :                 :                 +- *(44) Sort [web_site_sk#798 ASC NULLS FIRST], false, 0
                                             :                 :                    +- AQEShuffleRead coalesced
                                             :                 :                       +- ShuffleQueryStage 19
                                             :                 :                          +- Exchange hashpartitioning(web_site_sk#798, 200), ENSURE_REQUIREMENTS, [id=#243553]
                                             :                 :                             +- *(16) Filter isnotnull(web_site_sk#798)
                                             :                 :                                +- *(16) ColumnarToRow
                                             :                 :                                   +- FileScan parquet [web_site_sk#798,web_site_id#799] Batched: true, DataFilters: [isnotnull(web_site_sk#798)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_site.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(web_site_sk)], ReadSchema: struct<web_site_sk:int,web_site_id:string>
                                             :                 +- *(53) Sort [i_item_sk#20356 ASC NULLS FIRST], false, 0
                                             :                    +- AQEShuffleRead coalesced
                                             :                       +- ShuffleQueryStage 21
                                             :                          +- ReusedExchange [i_item_sk#20356], Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#243298]
                                             +- *(62) Sort [p_promo_sk#20378 ASC NULLS FIRST], false, 0
                                                +- AQEShuffleRead coalesced
                                                   +- ShuffleQueryStage 23
                                                      +- ReusedExchange [p_promo_sk#20378], Exchange hashpartitioning(p_promo_sk#98, 200), ENSURE_REQUIREMENTS, [id=#243323]
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[channel#20412 ASC NULLS FIRST,id#20413 ASC NULLS FIRST], output=[channel#20412,id#20413,sales#20245,returns#20246,profit#20247])
   +- HashAggregate(keys=[channel#20412, id#20413, spark_grouping_id#20411L], functions=[sum(sales#20249), sum(returns#20250), sum(profit#20251)], output=[channel#20412, id#20413, sales#20245, returns#20246, profit#20247])
      +- Exchange hashpartitioning(channel#20412, id#20413, spark_grouping_id#20411L, 200), ENSURE_REQUIREMENTS, [id=#242925]
         +- HashAggregate(keys=[channel#20412, id#20413, spark_grouping_id#20411L], functions=[partial_sum(sales#20249), partial_sum(returns#20250), partial_sum(profit#20251)], output=[channel#20412, id#20413, spark_grouping_id#20411L, sum#20429, isEmpty#20430, sum#20431, isEmpty#20432, sum#20433, isEmpty#20434])
            +- Expand [[sales#20249, returns#20250, profit#20251, channel#20409, id#20410, 0], [sales#20249, returns#20250, profit#20251, channel#20409, null, 1], [sales#20249, returns#20250, profit#20251, null, null, 3]], [sales#20249, returns#20250, profit#20251, channel#20412, id#20413, spark_grouping_id#20411L]
               +- Union
                  :- HashAggregate(keys=[s_store_id#713], functions=[sum(UnscaledValue(ss_ext_sales_price#267)), sum(coalesce(cast(sr_return_amt#147 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(ss_net_profit#274 as decimal(13,2))) - promote_precision(cast(coalesce(cast(sr_net_loss#155 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))], output=[sales#20249, returns#20250, profit#20251, channel#20409, id#20410])
                  :  +- Exchange hashpartitioning(s_store_id#713, 200), ENSURE_REQUIREMENTS, [id=#242833]
                  :     +- HashAggregate(keys=[s_store_id#713], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#267)), partial_sum(coalesce(cast(sr_return_amt#147 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(ss_net_profit#274 as decimal(13,2))) - promote_precision(cast(coalesce(cast(sr_net_loss#155 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))], output=[s_store_id#713, sum#20440L, sum#20441, isEmpty#20442, sum#20443, isEmpty#20444])
                  :        +- Project [ss_ext_sales_price#267, ss_net_profit#274, sr_return_amt#147, sr_net_loss#155, s_store_id#713]
                  :           +- SortMergeJoin [ss_promo_sk#260], [p_promo_sk#98], Inner
                  :              :- Sort [ss_promo_sk#260 ASC NULLS FIRST], false, 0
                  :              :  +- Exchange hashpartitioning(ss_promo_sk#260, 200), ENSURE_REQUIREMENTS, [id=#242825]
                  :              :     +- Project [ss_promo_sk#260, ss_ext_sales_price#267, ss_net_profit#274, sr_return_amt#147, sr_net_loss#155, s_store_id#713]
                  :              :        +- SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
                  :              :           :- Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                  :              :           :  +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#242817]
                  :              :           :     +- Project [ss_item_sk#254, ss_promo_sk#260, ss_ext_sales_price#267, ss_net_profit#274, sr_return_amt#147, sr_net_loss#155, s_store_id#713]
                  :              :           :        +- SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
                  :              :           :           :- Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
                  :              :           :           :  +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#242809]
                  :              :           :           :     +- Project [ss_item_sk#254, ss_store_sk#259, ss_promo_sk#260, ss_ext_sales_price#267, ss_net_profit#274, sr_return_amt#147, sr_net_loss#155]
                  :              :           :           :        +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
                  :              :           :           :           :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                  :              :           :           :           :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#242801]
                  :              :           :           :           :     +- Project [ss_sold_date_sk#252, ss_item_sk#254, ss_store_sk#259, ss_promo_sk#260, ss_ext_sales_price#267, ss_net_profit#274, sr_return_amt#147, sr_net_loss#155]
                  :              :           :           :           :        +- SortMergeJoin [ss_item_sk#254, ss_ticket_number#261L], [sr_item_sk#138, sr_ticket_number#145L], LeftOuter
                  :              :           :           :           :           :- Sort [ss_item_sk#254 ASC NULLS FIRST, ss_ticket_number#261L ASC NULLS FIRST], false, 0
                  :              :           :           :           :           :  +- Exchange hashpartitioning(ss_item_sk#254, ss_ticket_number#261L, 200), ENSURE_REQUIREMENTS, [id=#242793]
                  :              :           :           :           :           :     +- Filter (((isnotnull(ss_sold_date_sk#252) AND isnotnull(ss_store_sk#259)) AND isnotnull(ss_item_sk#254)) AND isnotnull(ss_promo_sk#260))
                  :              :           :           :           :           :        +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_store_sk#259,ss_promo_sk#260,ss_ticket_number#261L,ss_ext_sales_price#267,ss_net_profit#274] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_store_sk#259), isnotnull(ss_item_sk#254), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_item_sk), IsNotNull(ss_promo_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:bigint...
                  :              :           :           :           :           +- Sort [sr_item_sk#138 ASC NULLS FIRST, sr_ticket_number#145L ASC NULLS FIRST], false, 0
                  :              :           :           :           :              +- Exchange hashpartitioning(sr_item_sk#138, sr_ticket_number#145L, 200), ENSURE_REQUIREMENTS, [id=#242794]
                  :              :           :           :           :                 +- Filter (isnotnull(sr_item_sk#138) AND isnotnull(sr_ticket_number#145L))
                  :              :           :           :           :                    +- FileScan parquet [sr_item_sk#138,sr_ticket_number#145L,sr_return_amt#147,sr_net_loss#155] Batched: true, DataFilters: [isnotnull(sr_item_sk#138), isnotnull(sr_ticket_number#145L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(sr_item_sk), IsNotNull(sr_ticket_number)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>
                  :              :           :           :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                  :              :           :           :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#242802]
                  :              :           :           :                 +- Project [d_date_sk#612]
                  :              :           :           :                    +- Filter (((isnotnull(d_date#614) AND (d_date#614 >= 2002-08-04)) AND (d_date#614 <= 2002-09-03)) AND isnotnull(d_date_sk#612))
                  :              :           :           :                       +- FileScan parquet [d_date_sk#612,d_date#614] Batched: true, DataFilters: [isnotnull(d_date#614), (d_date#614 >= 2002-08-04), (d_date#614 <= 2002-09-03), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2002-08-04), LessThanOrEqual(d_date,2002-09-03), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                  :              :           :           +- Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
                  :              :           :              +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#242810]
                  :              :           :                 +- Filter isnotnull(s_store_sk#712)
                  :              :           :                    +- FileScan parquet [s_store_sk#712,s_store_id#713] Batched: true, DataFilters: [isnotnull(s_store_sk#712)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string>
                  :              :           +- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                  :              :              +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#242818]
                  :              :                 +- Project [i_item_sk#668]
                  :              :                    +- Filter ((isnotnull(i_current_price#673) AND (i_current_price#673 > 50.00)) AND isnotnull(i_item_sk#668))
                  :              :                       +- FileScan parquet [i_item_sk#668,i_current_price#673] Batched: true, DataFilters: [isnotnull(i_current_price#673), (i_current_price#673 > 50.00), isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_current_price), GreaterThan(i_current_price,50.00), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2)>
                  :              +- Sort [p_promo_sk#98 ASC NULLS FIRST], false, 0
                  :                 +- Exchange hashpartitioning(p_promo_sk#98, 200), ENSURE_REQUIREMENTS, [id=#242826]
                  :                    +- Project [p_promo_sk#98]
                  :                       +- Filter ((isnotnull(p_channel_tv#109) AND (p_channel_tv#109 = N)) AND isnotnull(p_promo_sk#98))
                  :                          +- FileScan parquet [p_promo_sk#98,p_channel_tv#109] Batched: true, DataFilters: [isnotnull(p_channel_tv#109), (p_channel_tv#109 = N), isnotnull(p_promo_sk#98)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/promotion.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(p_channel_tv), EqualTo(p_channel_tv,N), IsNotNull(p_promo_sk)], ReadSchema: struct<p_promo_sk:int,p_channel_tv:string>
                  :- HashAggregate(keys=[cp_catalog_page_id#205], functions=[sum(UnscaledValue(cs_ext_sales_price#567)), sum(coalesce(cast(cr_return_amount#364 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(cs_net_profit#577 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_net_loss#372 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))], output=[sales#20253, returns#20254, profit#20255, channel#20419, id#20420])
                  :  +- Exchange hashpartitioning(cp_catalog_page_id#205, 200), ENSURE_REQUIREMENTS, [id=#242876]
                  :     +- HashAggregate(keys=[cp_catalog_page_id#205], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#567)), partial_sum(coalesce(cast(cr_return_amount#364 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(cs_net_profit#577 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_net_loss#372 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))], output=[cp_catalog_page_id#205, sum#20450L, sum#20451, isEmpty#20452, sum#20453, isEmpty#20454])
                  :        +- Project [cs_ext_sales_price#567, cs_net_profit#577, cr_return_amount#364, cr_net_loss#372, cp_catalog_page_id#205]
                  :           +- SortMergeJoin [cs_promo_sk#560], [p_promo_sk#20309], Inner
                  :              :- Sort [cs_promo_sk#560 ASC NULLS FIRST], false, 0
                  :              :  +- Exchange hashpartitioning(cs_promo_sk#560, 200), ENSURE_REQUIREMENTS, [id=#242868]
                  :              :     +- Project [cs_promo_sk#560, cs_ext_sales_price#567, cs_net_profit#577, cr_return_amount#364, cr_net_loss#372, cp_catalog_page_id#205]
                  :              :        +- SortMergeJoin [cs_item_sk#559], [i_item_sk#20287], Inner
                  :              :           :- Sort [cs_item_sk#559 ASC NULLS FIRST], false, 0
                  :              :           :  +- Exchange hashpartitioning(cs_item_sk#559, 200), ENSURE_REQUIREMENTS, [id=#242860]
                  :              :           :     +- Project [cs_item_sk#559, cs_promo_sk#560, cs_ext_sales_price#567, cs_net_profit#577, cr_return_amount#364, cr_net_loss#372, cp_catalog_page_id#205]
                  :              :           :        +- SortMergeJoin [cs_catalog_page_sk#556], [cp_catalog_page_sk#204], Inner
                  :              :           :           :- Sort [cs_catalog_page_sk#556 ASC NULLS FIRST], false, 0
                  :              :           :           :  +- Exchange hashpartitioning(cs_catalog_page_sk#556, 200), ENSURE_REQUIREMENTS, [id=#242852]
                  :              :           :           :     +- Project [cs_catalog_page_sk#556, cs_item_sk#559, cs_promo_sk#560, cs_ext_sales_price#567, cs_net_profit#577, cr_return_amount#364, cr_net_loss#372]
                  :              :           :           :        +- SortMergeJoin [cs_sold_date_sk#544], [d_date_sk#20259], Inner
                  :              :           :           :           :- Sort [cs_sold_date_sk#544 ASC NULLS FIRST], false, 0
                  :              :           :           :           :  +- Exchange hashpartitioning(cs_sold_date_sk#544, 200), ENSURE_REQUIREMENTS, [id=#242844]
                  :              :           :           :           :     +- Project [cs_sold_date_sk#544, cs_catalog_page_sk#556, cs_item_sk#559, cs_promo_sk#560, cs_ext_sales_price#567, cs_net_profit#577, cr_return_amount#364, cr_net_loss#372]
                  :              :           :           :           :        +- SortMergeJoin [cs_item_sk#559, cs_order_number#561L], [cr_item_sk#348, cr_order_number#362L], LeftOuter
                  :              :           :           :           :           :- Sort [cs_item_sk#559 ASC NULLS FIRST, cs_order_number#561L ASC NULLS FIRST], false, 0
                  :              :           :           :           :           :  +- Exchange hashpartitioning(cs_item_sk#559, cs_order_number#561L, 200), ENSURE_REQUIREMENTS, [id=#242836]
                  :              :           :           :           :           :     +- Filter (((isnotnull(cs_sold_date_sk#544) AND isnotnull(cs_catalog_page_sk#556)) AND isnotnull(cs_item_sk#559)) AND isnotnull(cs_promo_sk#560))
                  :              :           :           :           :           :        +- FileScan parquet [cs_sold_date_sk#544,cs_catalog_page_sk#556,cs_item_sk#559,cs_promo_sk#560,cs_order_number#561L,cs_ext_sales_price#567,cs_net_profit#577] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#544), isnotnull(cs_catalog_page_sk#556), isnotnull(cs_item_sk#559), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_catalog_page_sk), IsNotNull(cs_item_sk), IsNotNull(cs_p..., ReadSchema: struct<cs_sold_date_sk:int,cs_catalog_page_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:...
                  :              :           :           :           :           +- Sort [cr_item_sk#348 ASC NULLS FIRST, cr_order_number#362L ASC NULLS FIRST], false, 0
                  :              :           :           :           :              +- Exchange hashpartitioning(cr_item_sk#348, cr_order_number#362L, 200), ENSURE_REQUIREMENTS, [id=#242837]
                  :              :           :           :           :                 +- Filter (isnotnull(cr_item_sk#348) AND isnotnull(cr_order_number#362L))
                  :              :           :           :           :                    +- FileScan parquet [cr_item_sk#348,cr_order_number#362L,cr_return_amount#364,cr_net_loss#372] Batched: true, DataFilters: [isnotnull(cr_item_sk#348), isnotnull(cr_order_number#362L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cr_item_sk), IsNotNull(cr_order_number)], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>
                  :              :           :           :           +- Sort [d_date_sk#20259 ASC NULLS FIRST], false, 0
                  :              :           :           :              +- Exchange hashpartitioning(d_date_sk#20259, 200), ENSURE_REQUIREMENTS, [id=#242845]
                  :              :           :           :                 +- Project [d_date_sk#20259]
                  :              :           :           :                    +- Filter (((isnotnull(d_date#20261) AND (d_date#20261 >= 2002-08-04)) AND (d_date#20261 <= 2002-09-03)) AND isnotnull(d_date_sk#20259))
                  :              :           :           :                       +- FileScan parquet [d_date_sk#20259,d_date#20261] Batched: true, DataFilters: [isnotnull(d_date#20261), (d_date#20261 >= 2002-08-04), (d_date#20261 <= 2002-09-03), isnotnull(d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2002-08-04), LessThanOrEqual(d_date,2002-09-03), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                  :              :           :           +- Sort [cp_catalog_page_sk#204 ASC NULLS FIRST], false, 0
                  :              :           :              +- Exchange hashpartitioning(cp_catalog_page_sk#204, 200), ENSURE_REQUIREMENTS, [id=#242853]
                  :              :           :                 +- Filter isnotnull(cp_catalog_page_sk#204)
                  :              :           :                    +- FileScan parquet [cp_catalog_page_sk#204,cp_catalog_page_id#205] Batched: true, DataFilters: [isnotnull(cp_catalog_page_sk#204)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/catalog_page.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(cp_catalog_page_sk)], ReadSchema: struct<cp_catalog_page_sk:int,cp_catalog_page_id:string>
                  :              :           +- Sort [i_item_sk#20287 ASC NULLS FIRST], false, 0
                  :              :              +- Exchange hashpartitioning(i_item_sk#20287, 200), ENSURE_REQUIREMENTS, [id=#242861]
                  :              :                 +- Project [i_item_sk#20287]
                  :              :                    +- Filter ((isnotnull(i_current_price#20292) AND (i_current_price#20292 > 50.00)) AND isnotnull(i_item_sk#20287))
                  :              :                       +- FileScan parquet [i_item_sk#20287,i_current_price#20292] Batched: true, DataFilters: [isnotnull(i_current_price#20292), (i_current_price#20292 > 50.00), isnotnull(i_item_sk#20287)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_current_price), GreaterThan(i_current_price,50.00), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2)>
                  :              +- Sort [p_promo_sk#20309 ASC NULLS FIRST], false, 0
                  :                 +- Exchange hashpartitioning(p_promo_sk#20309, 200), ENSURE_REQUIREMENTS, [id=#242869]
                  :                    +- Project [p_promo_sk#20309]
                  :                       +- Filter ((isnotnull(p_channel_tv#20320) AND (p_channel_tv#20320 = N)) AND isnotnull(p_promo_sk#20309))
                  :                          +- FileScan parquet [p_promo_sk#20309,p_channel_tv#20320] Batched: true, DataFilters: [isnotnull(p_channel_tv#20320), (p_channel_tv#20320 = N), isnotnull(p_promo_sk#20309)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/promotion.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(p_channel_tv), EqualTo(p_channel_tv,N), IsNotNull(p_promo_sk)], ReadSchema: struct<p_promo_sk:int,p_channel_tv:string>
                  +- HashAggregate(keys=[web_site_id#799], functions=[sum(UnscaledValue(ws_ext_sales_price#499)), sum(coalesce(cast(wr_return_amt#313 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(ws_net_profit#509 as decimal(13,2))) - promote_precision(cast(coalesce(cast(wr_net_loss#321 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))], output=[sales#20256, returns#20257, profit#20258, channel#20421, id#20422])
                     +- Exchange hashpartitioning(web_site_id#799, 200), ENSURE_REQUIREMENTS, [id=#242919]
                        +- HashAggregate(keys=[web_site_id#799], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#499)), partial_sum(coalesce(cast(wr_return_amt#313 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(ws_net_profit#509 as decimal(13,2))) - promote_precision(cast(coalesce(cast(wr_net_loss#321 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))], output=[web_site_id#799, sum#20460L, sum#20461, isEmpty#20462, sum#20463, isEmpty#20464])
                           +- Project [ws_ext_sales_price#499, ws_net_profit#509, wr_return_amt#313, wr_net_loss#321, web_site_id#799]
                              +- SortMergeJoin [ws_promo_sk#492], [p_promo_sk#20378], Inner
                                 :- Sort [ws_promo_sk#492 ASC NULLS FIRST], false, 0
                                 :  +- Exchange hashpartitioning(ws_promo_sk#492, 200), ENSURE_REQUIREMENTS, [id=#242911]
                                 :     +- Project [ws_promo_sk#492, ws_ext_sales_price#499, ws_net_profit#509, wr_return_amt#313, wr_net_loss#321, web_site_id#799]
                                 :        +- SortMergeJoin [ws_item_sk#479], [i_item_sk#20356], Inner
                                 :           :- Sort [ws_item_sk#479 ASC NULLS FIRST], false, 0
                                 :           :  +- Exchange hashpartitioning(ws_item_sk#479, 200), ENSURE_REQUIREMENTS, [id=#242903]
                                 :           :     +- Project [ws_item_sk#479, ws_promo_sk#492, ws_ext_sales_price#499, ws_net_profit#509, wr_return_amt#313, wr_net_loss#321, web_site_id#799]
                                 :           :        +- SortMergeJoin [ws_web_site_sk#489], [web_site_sk#798], Inner
                                 :           :           :- Sort [ws_web_site_sk#489 ASC NULLS FIRST], false, 0
                                 :           :           :  +- Exchange hashpartitioning(ws_web_site_sk#489, 200), ENSURE_REQUIREMENTS, [id=#242895]
                                 :           :           :     +- Project [ws_item_sk#479, ws_web_site_sk#489, ws_promo_sk#492, ws_ext_sales_price#499, ws_net_profit#509, wr_return_amt#313, wr_net_loss#321]
                                 :           :           :        +- SortMergeJoin [ws_sold_date_sk#476], [d_date_sk#20328], Inner
                                 :           :           :           :- Sort [ws_sold_date_sk#476 ASC NULLS FIRST], false, 0
                                 :           :           :           :  +- Exchange hashpartitioning(ws_sold_date_sk#476, 200), ENSURE_REQUIREMENTS, [id=#242887]
                                 :           :           :           :     +- Project [ws_sold_date_sk#476, ws_item_sk#479, ws_web_site_sk#489, ws_promo_sk#492, ws_ext_sales_price#499, ws_net_profit#509, wr_return_amt#313, wr_net_loss#321]
                                 :           :           :           :        +- SortMergeJoin [ws_item_sk#479, ws_order_number#493L], [wr_item_sk#300, wr_order_number#311L], LeftOuter
                                 :           :           :           :           :- Sort [ws_item_sk#479 ASC NULLS FIRST, ws_order_number#493L ASC NULLS FIRST], false, 0
                                 :           :           :           :           :  +- Exchange hashpartitioning(ws_item_sk#479, ws_order_number#493L, 200), ENSURE_REQUIREMENTS, [id=#242879]
                                 :           :           :           :           :     +- Filter (((isnotnull(ws_sold_date_sk#476) AND isnotnull(ws_web_site_sk#489)) AND isnotnull(ws_item_sk#479)) AND isnotnull(ws_promo_sk#492))
                                 :           :           :           :           :        +- FileScan parquet [ws_sold_date_sk#476,ws_item_sk#479,ws_web_site_sk#489,ws_promo_sk#492,ws_order_number#493L,ws_ext_sales_price#499,ws_net_profit#509] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#476), isnotnull(ws_web_site_sk#489), isnotnull(ws_item_sk#479), isnotn..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_web_site_sk), IsNotNull(ws_item_sk), IsNotNull(ws_promo..., ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_web_site_sk:int,ws_promo_sk:int,ws_order_number:bigi...
                                 :           :           :           :           +- Sort [wr_item_sk#300 ASC NULLS FIRST, wr_order_number#311L ASC NULLS FIRST], false, 0
                                 :           :           :           :              +- Exchange hashpartitioning(wr_item_sk#300, wr_order_number#311L, 200), ENSURE_REQUIREMENTS, [id=#242880]
                                 :           :           :           :                 +- Filter (isnotnull(wr_item_sk#300) AND isnotnull(wr_order_number#311L))
                                 :           :           :           :                    +- FileScan parquet [wr_item_sk#300,wr_order_number#311L,wr_return_amt#313,wr_net_loss#321] Batched: true, DataFilters: [isnotnull(wr_item_sk#300), isnotnull(wr_order_number#311L)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_returns.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(wr_item_sk), IsNotNull(wr_order_number)], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_amt:decimal(7,2),wr_net_loss:decimal(7,2)>
                                 :           :           :           +- Sort [d_date_sk#20328 ASC NULLS FIRST], false, 0
                                 :           :           :              +- Exchange hashpartitioning(d_date_sk#20328, 200), ENSURE_REQUIREMENTS, [id=#242888]
                                 :           :           :                 +- Project [d_date_sk#20328]
                                 :           :           :                    +- Filter (((isnotnull(d_date#20330) AND (d_date#20330 >= 2002-08-04)) AND (d_date#20330 <= 2002-09-03)) AND isnotnull(d_date_sk#20328))
                                 :           :           :                       +- FileScan parquet [d_date_sk#20328,d_date#20330] Batched: true, DataFilters: [isnotnull(d_date#20330), (d_date#20330 >= 2002-08-04), (d_date#20330 <= 2002-09-03), isnotnull(d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2002-08-04), LessThanOrEqual(d_date,2002-09-03), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                                 :           :           +- Sort [web_site_sk#798 ASC NULLS FIRST], false, 0
                                 :           :              +- Exchange hashpartitioning(web_site_sk#798, 200), ENSURE_REQUIREMENTS, [id=#242896]
                                 :           :                 +- Filter isnotnull(web_site_sk#798)
                                 :           :                    +- FileScan parquet [web_site_sk#798,web_site_id#799] Batched: true, DataFilters: [isnotnull(web_site_sk#798)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/web_site.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(web_site_sk)], ReadSchema: struct<web_site_sk:int,web_site_id:string>
                                 :           +- Sort [i_item_sk#20356 ASC NULLS FIRST], false, 0
                                 :              +- Exchange hashpartitioning(i_item_sk#20356, 200), ENSURE_REQUIREMENTS, [id=#242904]
                                 :                 +- Project [i_item_sk#20356]
                                 :                    +- Filter ((isnotnull(i_current_price#20361) AND (i_current_price#20361 > 50.00)) AND isnotnull(i_item_sk#20356))
                                 :                       +- FileScan parquet [i_item_sk#20356,i_current_price#20361] Batched: true, DataFilters: [isnotnull(i_current_price#20361), (i_current_price#20361 > 50.00), isnotnull(i_item_sk#20356)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(i_current_price), GreaterThan(i_current_price,50.00), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2)>
                                 +- Sort [p_promo_sk#20378 ASC NULLS FIRST], false, 0
                                    +- Exchange hashpartitioning(p_promo_sk#20378, 200), ENSURE_REQUIREMENTS, [id=#242912]
                                       +- Project [p_promo_sk#20378]
                                          +- Filter ((isnotnull(p_channel_tv#20389) AND (p_channel_tv#20389 = N)) AND isnotnull(p_promo_sk#20378))
                                             +- FileScan parquet [p_promo_sk#20378,p_channel_tv#20389] Batched: true, DataFilters: [isnotnull(p_channel_tv#20389), (p_channel_tv#20389 = N), isnotnull(p_promo_sk#20378)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/promotion.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(p_channel_tv), EqualTo(p_channel_tv,N), IsNotNull(p_promo_sk)], ReadSchema: struct<p_promo_sk:int,p_channel_tv:string>
