AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[c_last_name#409 ASC NULLS FIRST,c_first_name#408 ASC NULLS FIRST,substr(s_city#734, 1, 30) ASC NULLS FIRST,profit#17631 ASC NULLS FIRST], output=[c_last_name#409,c_first_name#408,substr(s_city, 1, 30)#17634,ss_ticket_number#261L,amt#17630,profit#17631])
   +- *(18) Project [c_last_name#409, c_first_name#408, substr(s_city#734, 1, 30) AS substr(s_city, 1, 30)#17634, ss_ticket_number#261L, amt#17630, profit#17631, s_city#734]
      +- *(18) SortMergeJoin [ss_customer_sk#255], [c_customer_sk#400], Inner
         :- *(16) Sort [ss_customer_sk#255 ASC NULLS FIRST], false, 0
         :  +- AQEShuffleRead coalesced
         :     +- ShuffleQueryStage 8
         :        +- Exchange hashpartitioning(ss_customer_sk#255, 200), ENSURE_REQUIREMENTS, [id=#169328]
         :           +- *(15) HashAggregate(keys=[ss_ticket_number#261L, ss_customer_sk#255, ss_addr_sk#258, s_city#734], functions=[sum(UnscaledValue(ss_coupon_amt#271)), sum(UnscaledValue(ss_net_profit#274))], output=[ss_ticket_number#261L, ss_customer_sk#255, s_city#734, amt#17630, profit#17631])
         :              +- AQEShuffleRead coalesced
         :                 +- ShuffleQueryStage 7
         :                    +- Exchange hashpartitioning(ss_ticket_number#261L, ss_customer_sk#255, ss_addr_sk#258, s_city#734, 200), ENSURE_REQUIREMENTS, [id=#169271]
         :                       +- *(14) HashAggregate(keys=[ss_ticket_number#261L, ss_customer_sk#255, ss_addr_sk#258, s_city#734], functions=[partial_sum(UnscaledValue(ss_coupon_amt#271)), partial_sum(UnscaledValue(ss_net_profit#274))], output=[ss_ticket_number#261L, ss_customer_sk#255, ss_addr_sk#258, s_city#734, sum#17643L, sum#17644L])
         :                          +- *(14) Project [ss_customer_sk#255, ss_addr_sk#258, ss_ticket_number#261L, ss_coupon_amt#271, ss_net_profit#274, s_city#734]
         :                             +- *(14) SortMergeJoin [ss_hdemo_sk#257], [hd_demo_sk#88], Inner
         :                                :- *(12) Sort [ss_hdemo_sk#257 ASC NULLS FIRST], false, 0
         :                                :  +- AQEShuffleRead coalesced
         :                                :     +- ShuffleQueryStage 6
         :                                :        +- Exchange hashpartitioning(ss_hdemo_sk#257, 200), ENSURE_REQUIREMENTS, [id=#169164]
         :                                :           +- *(11) Project [ss_customer_sk#255, ss_hdemo_sk#257, ss_addr_sk#258, ss_ticket_number#261L, ss_coupon_amt#271, ss_net_profit#274, s_city#734]
         :                                :              +- *(11) SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
         :                                :                 :- *(9) Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
         :                                :                 :  +- AQEShuffleRead coalesced
         :                                :                 :     +- ShuffleQueryStage 5
         :                                :                 :        +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#169032]
         :                                :                 :           +- *(8) Project [ss_customer_sk#255, ss_hdemo_sk#257, ss_addr_sk#258, ss_store_sk#259, ss_ticket_number#261L, ss_coupon_amt#271, ss_net_profit#274]
         :                                :                 :              +- *(8) SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
         :                                :                 :                 :- *(6) Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
         :                                :                 :                 :  +- AQEShuffleRead coalesced
         :                                :                 :                 :     +- ShuffleQueryStage 0
         :                                :                 :                 :        +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#168510]
         :                                :                 :                 :           +- *(1) Filter (((isnotnull(ss_sold_date_sk#252) AND isnotnull(ss_store_sk#259)) AND isnotnull(ss_hdemo_sk#257)) AND isnotnull(ss_customer_sk#255))
         :                                :                 :                 :              +- *(1) ColumnarToRow
         :                                :                 :                 :                 +- FileScan parquet [ss_sold_date_sk#252,ss_customer_sk#255,ss_hdemo_sk#257,ss_addr_sk#258,ss_store_sk#259,ss_ticket_number#261L,ss_coupon_amt#271,ss_net_profit#274] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_store_sk#259), isnotnull(ss_hdemo_sk#257), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_hdemo_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_t...
         :                                :                 :                 +- *(7) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
         :                                :                 :                    +- AQEShuffleRead coalesced
         :                                :                 :                       +- ShuffleQueryStage 1
         :                                :                 :                          +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#168529]
         :                                :                 :                             +- *(2) Project [d_date_sk#612]
         :                                :                 :                                +- *(2) Filter (((isnotnull(d_dow#619) AND (d_dow#619 = 1)) AND d_year#618 IN (1998,1999,2000)) AND isnotnull(d_date_sk#612))
         :                                :                 :                                   +- *(2) ColumnarToRow
         :                                :                 :                                      +- FileScan parquet [d_date_sk#612,d_year#618,d_dow#619] Batched: true, DataFilters: [isnotnull(d_dow#619), (d_dow#619 = 1), d_year#618 IN (1998,1999,2000), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_dow), EqualTo(d_dow,1), In(d_year, [1998,1999,2000]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_dow:int>
         :                                :                 +- *(10) Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
         :                                :                    +- AQEShuffleRead coalesced
         :                                :                       +- ShuffleQueryStage 2
         :                                :                          +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#168554]
         :                                :                             +- *(3) Project [s_store_sk#712, s_city#734]
         :                                :                                +- *(3) Filter (((isnotnull(s_number_employees#718) AND (s_number_employees#718 >= 200)) AND (s_number_employees#718 <= 295)) AND isnotnull(s_store_sk#712))
         :                                :                                   +- *(3) ColumnarToRow
         :                                :                                      +- FileScan parquet [s_store_sk#712,s_number_employees#718,s_city#734] Batched: true, DataFilters: [isnotnull(s_number_employees#718), (s_number_employees#718 >= 200), (s_number_employees#718 <= 2..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_number_employees), GreaterThanOrEqual(s_number_employees,200), LessThanOrEqual(s_num..., ReadSchema: struct<s_store_sk:int,s_number_employees:int,s_city:string>
         :                                +- *(13) Sort [hd_demo_sk#88 ASC NULLS FIRST], false, 0
         :                                   +- AQEShuffleRead coalesced
         :                                      +- ShuffleQueryStage 3
         :                                         +- Exchange hashpartitioning(hd_demo_sk#88, 200), ENSURE_REQUIREMENTS, [id=#168579]
         :                                            +- *(4) Project [hd_demo_sk#88]
         :                                               +- *(4) Filter (((hd_dep_count#91 = 8) OR (hd_vehicle_count#92 > 0)) AND isnotnull(hd_demo_sk#88))
         :                                                  +- *(4) ColumnarToRow
         :                                                     +- FileScan parquet [hd_demo_sk#88,hd_dep_count#91,hd_vehicle_count#92] Batched: true, DataFilters: [((hd_dep_count#91 = 8) OR (hd_vehicle_count#92 > 0)), isnotnull(hd_demo_sk#88)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/household_demographics.parquet], PartitionFilters: [], PushedFilters: [Or(EqualTo(hd_dep_count,8),GreaterThan(hd_vehicle_count,0)), IsNotNull(hd_demo_sk)], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>
         +- *(17) Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
            +- AQEShuffleRead coalesced
               +- ShuffleQueryStage 4
                  +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#168610]
                     +- *(5) Filter isnotnull(c_customer_sk#400)
                        +- *(5) ColumnarToRow
                           +- FileScan parquet [c_customer_sk#400,c_first_name#408,c_last_name#409] Batched: true, DataFilters: [isnotnull(c_customer_sk#400)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>
+- == Initial Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[c_last_name#409 ASC NULLS FIRST,c_first_name#408 ASC NULLS FIRST,substr(s_city#734, 1, 30) ASC NULLS FIRST,profit#17631 ASC NULLS FIRST], output=[c_last_name#409,c_first_name#408,substr(s_city, 1, 30)#17634,ss_ticket_number#261L,amt#17630,profit#17631])
   +- Project [c_last_name#409, c_first_name#408, substr(s_city#734, 1, 30) AS substr(s_city, 1, 30)#17634, ss_ticket_number#261L, amt#17630, profit#17631, s_city#734]
      +- SortMergeJoin [ss_customer_sk#255], [c_customer_sk#400], Inner
         :- Sort [ss_customer_sk#255 ASC NULLS FIRST], false, 0
         :  +- Exchange hashpartitioning(ss_customer_sk#255, 200), ENSURE_REQUIREMENTS, [id=#168434]
         :     +- HashAggregate(keys=[ss_ticket_number#261L, ss_customer_sk#255, ss_addr_sk#258, s_city#734], functions=[sum(UnscaledValue(ss_coupon_amt#271)), sum(UnscaledValue(ss_net_profit#274))], output=[ss_ticket_number#261L, ss_customer_sk#255, s_city#734, amt#17630, profit#17631])
         :        +- Exchange hashpartitioning(ss_ticket_number#261L, ss_customer_sk#255, ss_addr_sk#258, s_city#734, 200), ENSURE_REQUIREMENTS, [id=#168430]
         :           +- HashAggregate(keys=[ss_ticket_number#261L, ss_customer_sk#255, ss_addr_sk#258, s_city#734], functions=[partial_sum(UnscaledValue(ss_coupon_amt#271)), partial_sum(UnscaledValue(ss_net_profit#274))], output=[ss_ticket_number#261L, ss_customer_sk#255, ss_addr_sk#258, s_city#734, sum#17643L, sum#17644L])
         :              +- Project [ss_customer_sk#255, ss_addr_sk#258, ss_ticket_number#261L, ss_coupon_amt#271, ss_net_profit#274, s_city#734]
         :                 +- SortMergeJoin [ss_hdemo_sk#257], [hd_demo_sk#88], Inner
         :                    :- Sort [ss_hdemo_sk#257 ASC NULLS FIRST], false, 0
         :                    :  +- Exchange hashpartitioning(ss_hdemo_sk#257, 200), ENSURE_REQUIREMENTS, [id=#168422]
         :                    :     +- Project [ss_customer_sk#255, ss_hdemo_sk#257, ss_addr_sk#258, ss_ticket_number#261L, ss_coupon_amt#271, ss_net_profit#274, s_city#734]
         :                    :        +- SortMergeJoin [ss_store_sk#259], [s_store_sk#712], Inner
         :                    :           :- Sort [ss_store_sk#259 ASC NULLS FIRST], false, 0
         :                    :           :  +- Exchange hashpartitioning(ss_store_sk#259, 200), ENSURE_REQUIREMENTS, [id=#168414]
         :                    :           :     +- Project [ss_customer_sk#255, ss_hdemo_sk#257, ss_addr_sk#258, ss_store_sk#259, ss_ticket_number#261L, ss_coupon_amt#271, ss_net_profit#274]
         :                    :           :        +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
         :                    :           :           :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
         :                    :           :           :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#168406]
         :                    :           :           :     +- Filter (((isnotnull(ss_sold_date_sk#252) AND isnotnull(ss_store_sk#259)) AND isnotnull(ss_hdemo_sk#257)) AND isnotnull(ss_customer_sk#255))
         :                    :           :           :        +- FileScan parquet [ss_sold_date_sk#252,ss_customer_sk#255,ss_hdemo_sk#257,ss_addr_sk#258,ss_store_sk#259,ss_ticket_number#261L,ss_coupon_amt#271,ss_net_profit#274] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#252), isnotnull(ss_store_sk#259), isnotnull(ss_hdemo_sk#257), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_hdemo_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_t...
         :                    :           :           +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
         :                    :           :              +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#168407]
         :                    :           :                 +- Project [d_date_sk#612]
         :                    :           :                    +- Filter (((isnotnull(d_dow#619) AND (d_dow#619 = 1)) AND d_year#618 IN (1998,1999,2000)) AND isnotnull(d_date_sk#612))
         :                    :           :                       +- FileScan parquet [d_date_sk#612,d_year#618,d_dow#619] Batched: true, DataFilters: [isnotnull(d_dow#619), (d_dow#619 = 1), d_year#618 IN (1998,1999,2000), isnotnull(d_date_sk#612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_dow), EqualTo(d_dow,1), In(d_year, [1998,1999,2000]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_dow:int>
         :                    :           +- Sort [s_store_sk#712 ASC NULLS FIRST], false, 0
         :                    :              +- Exchange hashpartitioning(s_store_sk#712, 200), ENSURE_REQUIREMENTS, [id=#168415]
         :                    :                 +- Project [s_store_sk#712, s_city#734]
         :                    :                    +- Filter (((isnotnull(s_number_employees#718) AND (s_number_employees#718 >= 200)) AND (s_number_employees#718 <= 295)) AND isnotnull(s_store_sk#712))
         :                    :                       +- FileScan parquet [s_store_sk#712,s_number_employees#718,s_city#734] Batched: true, DataFilters: [isnotnull(s_number_employees#718), (s_number_employees#718 >= 200), (s_number_employees#718 <= 2..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(s_number_employees), GreaterThanOrEqual(s_number_employees,200), LessThanOrEqual(s_num..., ReadSchema: struct<s_store_sk:int,s_number_employees:int,s_city:string>
         :                    +- Sort [hd_demo_sk#88 ASC NULLS FIRST], false, 0
         :                       +- Exchange hashpartitioning(hd_demo_sk#88, 200), ENSURE_REQUIREMENTS, [id=#168423]
         :                          +- Project [hd_demo_sk#88]
         :                             +- Filter (((hd_dep_count#91 = 8) OR (hd_vehicle_count#92 > 0)) AND isnotnull(hd_demo_sk#88))
         :                                +- FileScan parquet [hd_demo_sk#88,hd_dep_count#91,hd_vehicle_count#92] Batched: true, DataFilters: [((hd_dep_count#91 = 8) OR (hd_vehicle_count#92 > 0)), isnotnull(hd_demo_sk#88)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/household_demographics.parquet], PartitionFilters: [], PushedFilters: [Or(EqualTo(hd_dep_count,8),GreaterThan(hd_vehicle_count,0)), IsNotNull(hd_demo_sk)], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>
         +- Sort [c_customer_sk#400 ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(c_customer_sk#400, 200), ENSURE_REQUIREMENTS, [id=#168435]
               +- Filter isnotnull(c_customer_sk#400)
                  +- FileScan parquet [c_customer_sk#400,c_first_name#408,c_last_name#409] Batched: true, DataFilters: [isnotnull(c_customer_sk#400)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/customer.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>
