AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(13) Sort [i_category#680 ASC NULLS FIRST, i_class#678 ASC NULLS FIRST, i_item_id#669 ASC NULLS FIRST, i_item_desc#672 ASC NULLS FIRST, revenueratio#19563 ASC NULLS FIRST], true, 0
   +- AQEShuffleRead coalesced
      +- ShuffleQueryStage 6
         +- Exchange rangepartitioning(i_category#680 ASC NULLS FIRST, i_class#678 ASC NULLS FIRST, i_item_id#669 ASC NULLS FIRST, i_item_desc#672 ASC NULLS FIRST, revenueratio#19563 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#208212]
            +- *(12) Project [i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673, itemrevenue#19562, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#19568) * 100.00), DecimalType(21,2), true) as decimal(27,2))) / promote_precision(_we0#19570)), DecimalType(38,17), true) AS revenueratio#19563]
               +- Window [sum(_w1#19569) windowspecdefinition(i_class#678, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#19570], [i_class#678]
                  +- *(11) Sort [i_class#678 ASC NULLS FIRST], false, 0
                     +- AQEShuffleRead coalesced
                        +- ShuffleQueryStage 5
                           +- Exchange hashpartitioning(i_class#678, 200), ENSURE_REQUIREMENTS, [id=#208162]
                              +- *(10) HashAggregate(keys=[i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673], functions=[sum(UnscaledValue(ss_ext_sales_price#267))], output=[i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673, itemrevenue#19562, _w0#19568, _w1#19569])
                                 +- AQEShuffleRead coalesced
                                    +- ShuffleQueryStage 4
                                       +- Exchange hashpartitioning(i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673, 200), ENSURE_REQUIREMENTS, [id=#208097]
                                          +- *(9) HashAggregate(keys=[i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#267))], output=[i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673, sum#19579L])
                                             +- *(9) Project [ss_ext_sales_price#267, i_item_id#669, i_item_desc#672, i_current_price#673, i_class#678, i_category#680]
                                                +- *(9) SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
                                                   :- *(7) Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                                                   :  +- AQEShuffleRead coalesced
                                                   :     +- ShuffleQueryStage 3
                                                   :        +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#207982]
                                                   :           +- *(6) Project [ss_sold_date_sk#252, ss_ext_sales_price#267, i_item_id#669, i_item_desc#672, i_current_price#673, i_class#678, i_category#680]
                                                   :              +- *(6) SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
                                                   :                 :- *(4) Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                                                   :                 :  +- AQEShuffleRead coalesced
                                                   :                 :     +- ShuffleQueryStage 0
                                                   :                 :        +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#207702]
                                                   :                 :           +- *(1) Filter (isnotnull(ss_item_sk#254) AND isnotnull(ss_sold_date_sk#252))
                                                   :                 :              +- *(1) ColumnarToRow
                                                   :                 :                 +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_ext_sales_price#267] Batched: true, DataFilters: [isnotnull(ss_item_sk#254), isnotnull(ss_sold_date_sk#252)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
                                                   :                 +- *(5) Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                                                   :                    +- AQEShuffleRead coalesced
                                                   :                       +- ShuffleQueryStage 1
                                                   :                          +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#207719]
                                                   :                             +- *(2) Filter (i_category#680 IN (Jewelry,Sports,Books) AND isnotnull(i_item_sk#668))
                                                   :                                +- *(2) ColumnarToRow
                                                   :                                   +- FileScan parquet [i_item_sk#668,i_item_id#669,i_item_desc#672,i_current_price#673,i_class#678,i_category#680] Batched: true, DataFilters: [i_category#680 IN (Jewelry,Sports,Books), isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [In(i_category, [Books,Jewelry,Sports]), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_class:str...
                                                   +- *(8) Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                                                      +- AQEShuffleRead coalesced
                                                         +- ShuffleQueryStage 2
                                                            +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#207742]
                                                               +- *(3) Project [d_date_sk#612]
                                                                  +- *(3) Filter (((isnotnull(d_date#614) AND (d_date#614 >= 2001-01-12)) AND (d_date#614 <= 2001-02-11)) AND isnotnull(d_date_sk#612))
                                                                     +- *(3) ColumnarToRow
                                                                        +- FileScan parquet [d_date_sk#612,d_date#614] Batched: true, DataFilters: [isnotnull(d_date#614), (d_date#614 >= 2001-01-12), (d_date#614 <= 2001-02-11), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2001-01-12), LessThanOrEqual(d_date,2001-02-11), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
+- == Initial Plan ==
   Sort [i_category#680 ASC NULLS FIRST, i_class#678 ASC NULLS FIRST, i_item_id#669 ASC NULLS FIRST, i_item_desc#672 ASC NULLS FIRST, revenueratio#19563 ASC NULLS FIRST], true, 0
   +- Exchange rangepartitioning(i_category#680 ASC NULLS FIRST, i_class#678 ASC NULLS FIRST, i_item_id#669 ASC NULLS FIRST, i_item_desc#672 ASC NULLS FIRST, revenueratio#19563 ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#207642]
      +- Project [i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673, itemrevenue#19562, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#19568) * 100.00), DecimalType(21,2), true) as decimal(27,2))) / promote_precision(_we0#19570)), DecimalType(38,17), true) AS revenueratio#19563]
         +- Window [sum(_w1#19569) windowspecdefinition(i_class#678, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#19570], [i_class#678]
            +- Sort [i_class#678 ASC NULLS FIRST], false, 0
               +- Exchange hashpartitioning(i_class#678, 200), ENSURE_REQUIREMENTS, [id=#207637]
                  +- HashAggregate(keys=[i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673], functions=[sum(UnscaledValue(ss_ext_sales_price#267))], output=[i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673, itemrevenue#19562, _w0#19568, _w1#19569])
                     +- Exchange hashpartitioning(i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673, 200), ENSURE_REQUIREMENTS, [id=#207634]
                        +- HashAggregate(keys=[i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#267))], output=[i_item_id#669, i_item_desc#672, i_category#680, i_class#678, i_current_price#673, sum#19579L])
                           +- Project [ss_ext_sales_price#267, i_item_id#669, i_item_desc#672, i_current_price#673, i_class#678, i_category#680]
                              +- SortMergeJoin [ss_sold_date_sk#252], [d_date_sk#612], Inner
                                 :- Sort [ss_sold_date_sk#252 ASC NULLS FIRST], false, 0
                                 :  +- Exchange hashpartitioning(ss_sold_date_sk#252, 200), ENSURE_REQUIREMENTS, [id=#207626]
                                 :     +- Project [ss_sold_date_sk#252, ss_ext_sales_price#267, i_item_id#669, i_item_desc#672, i_current_price#673, i_class#678, i_category#680]
                                 :        +- SortMergeJoin [ss_item_sk#254], [i_item_sk#668], Inner
                                 :           :- Sort [ss_item_sk#254 ASC NULLS FIRST], false, 0
                                 :           :  +- Exchange hashpartitioning(ss_item_sk#254, 200), ENSURE_REQUIREMENTS, [id=#207618]
                                 :           :     +- Filter (isnotnull(ss_item_sk#254) AND isnotnull(ss_sold_date_sk#252))
                                 :           :        +- FileScan parquet [ss_sold_date_sk#252,ss_item_sk#254,ss_ext_sales_price#267] Batched: true, DataFilters: [isnotnull(ss_item_sk#254), isnotnull(ss_sold_date_sk#252)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/store_sales.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
                                 :           +- Sort [i_item_sk#668 ASC NULLS FIRST], false, 0
                                 :              +- Exchange hashpartitioning(i_item_sk#668, 200), ENSURE_REQUIREMENTS, [id=#207619]
                                 :                 +- Filter (i_category#680 IN (Jewelry,Sports,Books) AND isnotnull(i_item_sk#668))
                                 :                    +- FileScan parquet [i_item_sk#668,i_item_id#669,i_item_desc#672,i_current_price#673,i_class#678,i_category#680] Batched: true, DataFilters: [i_category#680 IN (Jewelry,Sports,Books), isnotnull(i_item_sk#668)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/item.parquet], PartitionFilters: [], PushedFilters: [In(i_category, [Books,Jewelry,Sports]), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_class:str...
                                 +- Sort [d_date_sk#612 ASC NULLS FIRST], false, 0
                                    +- Exchange hashpartitioning(d_date_sk#612, 200), ENSURE_REQUIREMENTS, [id=#207627]
                                       +- Project [d_date_sk#612]
                                          +- Filter (((isnotnull(d_date#614) AND (d_date#614 >= 2001-01-12)) AND (d_date#614 <= 2001-02-11)) AND isnotnull(d_date_sk#612))
                                             +- FileScan parquet [d_date_sk#612,d_date#614] Batched: true, DataFilters: [isnotnull(d_date#614), (d_date#614 >= 2001-01-12), (d_date#614 <= 2001-02-11), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/mnt/bigdata/tpcds/sf100-parquet/date_dim.parquet], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2001-01-12), LessThanOrEqual(d_date,2001-02-11), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
